<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://joelmturner.com</id>
    <title>Joel M Turner blog</title>
    <updated>2023-01-08T06:50:56.382Z</updated>
    <generator>Feed for Node.js</generator>
    <author>
        <name>Joel M Turner</name>
        <uri>https://twitter.com/joelmturner</uri>
    </author>
    <link rel="alternate" href="https://joelmturner.com"/>
    <link rel="self" href="https://joelmturner.com/rss/atom.xml"/>
    <logo>https://joelmturner.com/favicon-32x32.png</logo>
    <icon>https://joelmturner.com/favicon.png</icon>
    <rights>All rights reserved 2023, Joel M Turner</rights>
    <entry>
        <title type="html"><![CDATA[Quick Tip: VS Code Extension Folder Location]]></title>
        <id>https://joelmturner.com/blog/quick-tip-code-extension-data</id>
        <link href="https://joelmturner.com/blog/quick-tip-code-extension-data"/>
        <updated>2022-07-08T05:56:36.085Z</updated>
        <summary type="html"><![CDATA[By relocating the folders that are created/updated by VS Code Extensions we can bypass the need to update a gitignore file.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/quick-tip-code-extension-data">Quick Tip: VS Code Extension Folder Location</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">VS Code is awesome and there are so many great extensions that make life easier. Some of these extensions store data in folders which are usually placed at the root of the workspace like:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false">app
</div><div data-line="2" class="highlight-line" data-highlighted="false">└───.vscode
</div><div data-line="3" class="highlight-line" data-highlighted="false">└───.history <span class="token comment"># Local History extension folder</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Until recently, I was adding those folders to my <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">.gitignore</code> file since they are mainly for personal/local use and didn&#x27;t want to mess with my teammates&#x27; setups. This isn&#x27;t cumbersome but felt a little weird, like mixing too much of my personal setup into our project.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">All of our projects already have <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">.vscode</code> in the <code class="chakra-code css-t3qbto">.gitignore</code> file so it makes sense to move any extension folders into the <code class="chakra-code css-t3qbto">.vscode</code> folder and bypass adding individual folders to <code class="chakra-code css-t3qbto">.gitignore</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false">app
</div><div data-line="2" class="highlight-line" data-highlighted="false">└───.vscode
</div><div data-line="3" class="highlight-line" data-highlighted="false">│   └───.history
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Most extensions that have settings/data folders also have a way to link to the path. The example above is for the <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://marketplace.visualstudio.com/items?itemName=xyz.local-history">Local History</a> extension which has a setting called <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">Local History: Path</code>. Just drop a <code class="chakra-code css-t3qbto">${workspaceFolder}/.vscode</code> in there and you&#x27;re good to go.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Not a huge win but it&#x27;s nice that you don&#x27;t have to add something to your <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">.gitignore</code> file every time you try out a new extension.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Working on a New Feature as a Senior Frontend Developer]]></title>
        <id>https://joelmturner.com/blog/working-feature-senior-frontend-developer</id>
        <link href="https://joelmturner.com/blog/working-feature-senior-frontend-developer"/>
        <updated>2022-07-06T04:28:59.027Z</updated>
        <summary type="html"><![CDATA[Some of the questions and thought processes I have as I work through a new feature ticket.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/working-feature-senior-frontend-developer">Working on a New Feature as a Senior Frontend Developer</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#before-the-code"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">Before the Code</span></a></li>
<li class="css-1i5jedo"><a href="#diving-into-code"><span class="chakra-text css-744h54">Diving Into Code</span></a></li>
<li class="css-1i5jedo"><a href="#wrapping-up"><span class="chakra-text css-744h54">Wrapping Up</span></a></li>
<li class="css-1i5jedo"><a href="#how-do-you-work-through-a-new-ticket"><span class="chakra-text css-744h54">How do You Work Through a New Ticket?</span></a></li>
</ul>
<a href="#before-the-code"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="before-the-code">Before the Code</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I usually start out by assessing the scope of the feature. The following questions help guide me before I fire up VS Code.</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ol class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo">Do we have a design for this feature? <em>depending on size, this may need to push back into design&#x27;s hands</em></li>
<li class="css-1i5jedo">Is this an existing pattern or a new one? <em>I prefer existing in the design system</em></li>
<li class="css-1i5jedo">Is this reusable or scoped to a certain part of the app? <em>can help with architecture</em></li>
<li class="css-1i5jedo">Will this need API updates to get to feature complete?
<ol class="css-dyc0h3">
<li class="css-1i5jedo">If yes, does API work need to happen before UI?</li>
<li class="css-1i5jedo">If yes, are they simple updates? <em>I can handle simple updates, otherwise I&#x27;ll have to pass off the API work to someone with more Java experience on the team</em></li>
</ol>
</li>
<li class="css-1i5jedo">What does finished look like? <em>this can help with tests and QA</em></li>
<li class="css-1i5jedo">Is this a part of the app that I&#x27;m familiar with? <em>might take longer if I&#x27;m not familiar</em>
<ol class="css-dyc0h3">
<li class="css-1i5jedo">If no, who can I ask for help if I get stuck?</li>
</ol>
</li>
<li class="css-1i5jedo">Is this an opportunity to refactor some older code? <em>often, these are the only chances to clean up tech debt</em></li>
</ol>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Whew! That&#x27;s a lot! Let&#x27;s get into the code already.</p>
<style data-emotion="css arqw2w">.css-arqw2w{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;max-width:350px;margin:0 auto;}</style><div class="css-arqw2w"><div style="width:100%;height:0;padding-bottom:100%;position:relative"><iframe src="https://giphy.com/embed/3krrjoL0vHRaWqwU3k" width="100%" height="100%" style="position:absolute" frameBorder="0" class="giphy-embed" allowfullscreen=""></iframe></div><p><a href="https://giphy.com/gifs/spotify-play-streaming-3krrjoL0vHRaWqwU3k">via GIPHY</a></p></div>
<a href="#diving-into-code"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="diving-into-code">Diving Into Code</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Once I have some satisfactory answers to the above questions, I dive into the code to help answer some other questions, as well as generate some new ones. There are usually still a few unknowns that arise before the downhill of writing the feature.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Once I&#x27;m in the code, I try to determine the architecture of the feature and assess the state requirements.</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ol class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo">Can the state be isolated to this feature?
<ol class="css-dyc0h3">
<li class="css-1i5jedo">If no, how much needs to be refactored to implement this feature?</li>
<li class="css-1i5jedo">If no, how high does the state need to go?</li>
</ol>
</li>
<li class="css-1i5jedo">Is this feature directly coupled with another feature?
<ol class="css-dyc0h3">
<li class="css-1i5jedo">If yes, can I separate concerns so they are easier to reason about and maintain?</li>
</ol>
</li>
<li class="css-1i5jedo">Can I remove code to help reduce complexity? <em>ongoing tech debt work</em></li>
</ol>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">From here, I can start piecing together the UI. I love seeing visual progress right away so I usually start by fleshing out the layout and adding placeholder divs for the elements. This helps me get a bit of a wireframe together before diving into the details, which can help me determine where the state should live and how to break the components down.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">As I fill in the details, I can create the types, helper functions, hooks, and components that are needed. Hopefully, most of this comes from the design library but sometimes we have to piece together a solution outside of it.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I almost always run some parts of my solution or my architecture by my manager, <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.linkedin.com/in/ryan-legler-b0807853/">Ryan</a>, who is an incredible architect and a master of thinking through edge cases. That helps determine a stable foundation to the feature and future maintenance/updates to the feature.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Almost done!</p>
<style data-emotion="css 1r5ilun">.css-1r5ilun{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto;}</style><div class="css-1r5ilun"><img src="https://res.cloudinary.com/joelmturner/image/upload/w_512/v1657085654/gatsby-toasting-meme_kzslea.jpg" alt="Leo DiCaprio as Great Gatsby toasting the viewer" srcset="https://res.cloudinary.com/joelmturner/image/upload/w_1024/v1657085654/gatsby-toasting-meme_kzslea.jpg 1024w, https://res.cloudinary.com/joelmturner/image/upload/w_512/v1657085654/gatsby-toasting-meme_kzslea.jpg 512w, https://res.cloudinary.com/joelmturner/image/upload/w_256/v1657085654/gatsby-toasting-meme_kzslea.jpg 256w" sizes="(min-width: 30em) 30em, 100vw"/></div>
<a href="#wrapping-up"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="wrapping-up">Wrapping Up</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I like to go through any helper functions I&#x27;ve added to make sure they are covered with tests. This can be true for the components as well, depending on their complexity. This is also the time when I create a Pull Request and have the rest of the team weigh in on patterns, issues, and things I&#x27;ve overlooked.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Once the PR is approved it is on its way to QA where it has the edges poked at. If there are any edges found, I&#x27;ll solve for those edges, and if applicable, add tests for those edges.</p>
<a href="#how-do-you-work-through-a-new-ticket"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="how-do-you-work-through-a-new-ticket">How do You Work Through a New Ticket?</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I would love to hear how other&#x27;s work through feature tickets, no matter what experience you have in development. Hit me up on <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://twitter.com/joelmturner">Twitter</a> if you&#x27;d like. I think we all come at it from our unique angles and can help each other as we learn and grow.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Static Nextjs Netlify 500 Errors Instead of 404 Errors]]></title>
        <id>https://joelmturner.com/blog/static-nextjs-netlify-500-errors-404-errors</id>
        <link href="https://joelmturner.com/blog/static-nextjs-netlify-500-errors-404-errors"/>
        <updated>2022-07-03T04:19:41.807Z</updated>
        <summary type="html"><![CDATA[Digging into a bug with Netlify's Next plugin that causes 500 errors instead of 404 errors. There is a quick workaround that works for this specific case.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/static-nextjs-netlify-500-errors-404-errors">Static Nextjs Netlify 500 Errors Instead of 404 Errors</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#the-problem"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">The Problem</span></a></li>
<li class="css-1i5jedo"><a href="#the-solution"><span class="chakra-text css-744h54">The Solution</span></a></li>
</ul>
<a href="#the-problem"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="the-problem">The Problem</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Today I&#x27;m going to cover an issue that I ran into after deploying my site to Netlify. The problem is that if someone were to go to a blog post that didn&#x27;t exist, like <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://joelmturner.com/blog/abc">https://joelmturner.com/blog/abc</a>, they would receive a 500 error message. Since it&#x27;s a 500 from the server, the client doesn&#x27;t spin up and I can&#x27;t see which page was trying to be accessed.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This had me searching all over for the root cause since it all worked locally and I would expect that it would just throw a 404 error like other missing pages. Finally, after searching for quite some time, I came across a <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/netlify/netlify-plugin-nextjs/issues/1179">GitHub issue</a> that resembled my problem. Sure enough, <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/hu0p">hu0p</a> had a <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/netlify/netlify-plugin-nextjs/issues/1179#issuecomment-1110301726">workaround</a> that worked for me as well.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The factors that lead to this issue are:</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo">Hosted on Netlify</li>
<li class="css-1i5jedo">Running the Essential Next.js plugin (the culprit)</li>
<li class="css-1i5jedo">Static site build of Nextjs</li>
<li class="css-1i5jedo">Have some dynamic routes like <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">pages/blog/[id].tsx</code></li>
<li class="css-1i5jedo">Hit a route that doesn&#x27;t exist on that dynamic route</li>
</ul>
<a href="#the-solution"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="the-solution">The Solution</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">By wrapping the data fetching with a try/catch, we are able to return <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">notFound: true</code> which will trigger the 404 page. I wasn&#x27;t aware that <code class="chakra-code css-t3qbto">notFound</code> was a return value until I saw this workaround.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Instead of:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-ts css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getStaticProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span> params <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> postData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getPostData</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    props<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">      <span class="token operator">...</span>postData<span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We use try/catch:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-ts css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getStaticProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span> params <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="true">  <span class="token keyword">let</span> postData<span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="true">  <span class="token keyword">try</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="true">    postData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getPostData</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="true">    <span class="token keyword">return</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="true">      notFound<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">    props<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">      <span class="token operator">...</span>postData<span class="token punctuation">,</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[React One Time Password Input Component]]></title>
        <id>https://joelmturner.com/blog/react-one-time-password-input-component</id>
        <link href="https://joelmturner.com/blog/react-one-time-password-input-component"/>
        <updated>2022-03-26T05:07:58.270Z</updated>
        <summary type="html"><![CDATA[One time password input component for React. Uses a separated input for the OTP read and write.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/react-one-time-password-input-component">React One Time Password Input Component</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#what-were-building"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">What We&#x27;re Building</span></a></li>
<li class="css-1i5jedo"><a href="#parent-component"><span class="chakra-text css-744h54">Parent Component</span></a></li>
<li class="css-1i5jedo"><a href="#rendering-the-inputs"><span class="chakra-text css-744h54">Rendering The Inputs</span></a></li>
<li class="css-1i5jedo"><a href="#handling-input-value-changes"><span class="chakra-text css-744h54">Handling Input Value Changes</span></a></li>
<li class="css-1i5jedo"><a href="#display-the-code"><span class="chakra-text css-744h54">Display the Code</span></a></li>
</ul>
<a href="#what-were-building"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="what-were-building">What We&#x27;re Building</h2></a>
<div data-testid="general-observer" class="mdx-embed"><div style="height:0;width:100%"></div></div>
<a href="#parent-component"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="parent-component">Parent Component</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The component that is orchestrating the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">SeparatedInput</code> component will need to have a state for the value and a handler to update that state with the value that <code class="chakra-code css-t3qbto">SeparatedInput</code> will pass back up. We can set it up like this:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="OTPContainer.tsx" class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">OTPContainer</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>value<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#x27;&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>newValue<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token comment">// do validation work here</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token function">setValue</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SeparatedInput</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#rendering-the-inputs"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="rendering-the-inputs">Rendering The Inputs</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We&#x27;re going to start with a new component and name it something like <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">SeparatedInput.tsx</code>. This component will house our inputs and the handlers for them. We&#x27;ll be using <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://styled-components.com/">styled-components</a> to make the styling a bit easier.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="SeparatedInput.tsx" class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">const</span> InputContainer <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>
<span class="token string">  display: flex;</span>
<span class="token string">  justify-content: between;</span>
<span class="token string">  gap: 2em;</span>
<span class="token string">  max-width: 44em; // magic number, can be whatever fits the project&#x27;s needs</span>
<span class="token string"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">SeparatedInput</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token comment">/* we&#x27;ll place the inputs here */</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We&#x27;ll need to pass our value to this component so let&#x27;s add that as a prop.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">SeparatedInput</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we need to separate this value into an array that we can map into our inputs.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token comment">// can make this a passed prop if reused and more/fewer digits/characters are needed</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token constant">MAX_DIGITS</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">SeparatedInput</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> separatedValue <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">        <span class="token comment">// fill the unused inputs with empty strings</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> filler <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token constant">MAX_DIGITS</span> <span class="token operator">-</span> value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> resolvedValue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>value<span class="token punctuation">,</span> <span class="token operator">...</span>filler<span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">        <span class="token comment">// make sure it&#x27;s only 6 characters long</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">        resolvedValue<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token constant">MAX_DIGITS</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span> resolvedValue<span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We can spread our value into an array to create an array of characters. This is great if our <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">value</code> is 6 characters long but doesn&#x27;t quite work if it&#x27;s less than that. To fix this, we can fill out the rest with empty strings using <code class="chakra-code css-t3qbto">Array(n).fill(&quot;&quot;)</code>. We can then spread this into our array as well.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The line <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">resolvedValue.length = MAX_DIGITS;</code> trims any elements over our length of <code class="chakra-code css-t3qbto">MAX_DIGITS</code> (6).</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">From here, we can map over our array and render our inputs using those strings.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">const</span> StyledInput <span class="token operator">=</span> styled<span class="token punctuation">.</span>input<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>
<span class="token string">  padding: 0.5em 0.25em;</span>
<span class="token string">  font-size: 2.75em;</span>
<span class="token string">  margin-bottom: 0.25em;</span>
<span class="token string">  border: none;</span>
<span class="token string">  border-bottom: 6px solid hsl(0, 0%, 20%);</span>
<span class="token string">  background-color: hsl(0, 0%, 7%);</span>
<span class="token string">  color: hsl(0, 0%, 90%);</span>
<span class="token string">  width: calc(100% / 6);</span>
<span class="token string">  text-align: center;</span>
<span class="token string">  /* we use a serif font to help differentiate characters/digits */</span>
<span class="token string">  font-family: serif;</span>
<span class="token string"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token punctuation">{</span>separatedValue<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>character<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledInput</span></span>
            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span>
            <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>
            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>character<span class="token punctuation">}</span></span>
          <span class="token punctuation">/&gt;</span></span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<a href="#handling-input-value-changes"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="handling-input-value-changes">Handling Input Value Changes</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We can use one function to pass to the inputs since each input will send an event on change. With this, we&#x27;ll be passing our <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">onChange</code> back up via a prop.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">SeparatedInput</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  onChange<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">        onChange<span class="token operator">?.</span><span class="token punctuation">(</span>value <span class="token operator">+</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token punctuation">{</span>separatedValue<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>character<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">            <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledInput</span></span>
                <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span>
                <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>
                <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>character<span class="token punctuation">}</span></span>
                <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
            <span class="token punctuation">/&gt;</span></span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">            <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="18" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Great! This handler will take each unique event and add that to the value. We still have an issue with typing into the inputs since they don&#x27;t advance to the next input. This will cause the value to keep growing out of sync with the focussed input.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">For the focus we can leverage <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useRef</code>. We&#x27;ll get the ref of the <code class="chakra-code css-t3qbto">InputContainer</code> so we can control the focus of its children. We&#x27;ll also need some state to handle the focus index. We can then update the focus via <code class="chakra-code css-t3qbto">useEffect</code> on the update of focus index.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">To set the focus index we can take the previous state and check to see if it&#x27;s less than the last input index and, if so, increment by one.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">SeparatedInput</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  onChange<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token comment">// initial value of zero will focus the first input on load</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> <span class="token punctuation">[</span>focusIndex<span class="token punctuation">,</span> setFocusIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">
</div><div data-line="10" class="highlight-line" data-highlighted="false">    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">        <span class="token comment">// focus the current input by index</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">        <span class="token keyword">if</span> <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>current<span class="token operator">?.</span>children<span class="token punctuation">[</span>focusIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">            <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>children<span class="token punctuation">[</span>focusIndex<span class="token punctuation">]</span> <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>focusIndex<span class="token punctuation">,</span> readOnly<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">
</div><div data-line="17" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">        <span class="token comment">// move the cursor forward after input</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">        <span class="token function">setFocusIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">            prev <span class="token operator">&lt;</span> <span class="token constant">MAX_DIGITS</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> prev <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token constant">MAX_DIGITS</span> <span class="token operator">-</span> <span class="token number">1</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">
</div><div data-line="23" class="highlight-line" data-highlighted="false">        onChange<span class="token operator">?.</span><span class="token punctuation">(</span>value <span class="token operator">+</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">    <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="28" class="highlight-line" data-highlighted="false"><span class="token plain-text">            </span><span class="token punctuation">{</span>separatedValue<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>character<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">                <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledInput</span></span>
                        <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span>
                        <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>
                        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>character<span class="token punctuation">}</span></span>
                        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
                    <span class="token punctuation">/&gt;</span></span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">                <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="33" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="34" class="highlight-line" data-highlighted="false">    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Cool, this seems to work pretty well for adding characters to the inputs. The next thing we&#x27;ll need to do is handle removing characters using &quot;Backspace.&quot; To achieve this, we&#x27;ll use the <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/streamich/react-use/blob/master/docs/useKeyPressEvent.md">useKeyPressEvent</a> hook. This hook takes the keyPress key as the first argument and a callback function to do something when that key is pressed.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s set up the callback function first. For our specific case we want the &quot;Backspace&quot; key remove the last character in our value. We can use slice on the value string to handle this. After removing the item, we&#x27;ll set the focus to the previous input.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Once our function is in place we can pass it to <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useKeyPressEvent</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> useKeyPressEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-use&quot;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> handleBackspace <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">        <span class="token comment">// remove the last character</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> newValue <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">        <span class="token comment">// move the cursor back one</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">        <span class="token function">setFocusIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>prev <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> prev <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">        onChange<span class="token operator">?.</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>onChange<span class="token punctuation">,</span> value<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token comment">// fires handleBackspace event when Backspace is pressed</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token function">useKeyPressEvent</span><span class="token punctuation">(</span><span class="token string">&quot;Backspace&quot;</span><span class="token punctuation">,</span> handleBackspace<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we can move back and forth by typing characters and &quot;Backspace.&quot;</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We can still click into any input and the focus will shift to that one. However, if we type it will add the character to the next input in our sequence. There are few ways to improve this experience and I&#x27;ll share the one that is currently meeting our needs, though we may update it in the future.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The input sequence we&#x27;ll use is just forward and back, without the user clicking or tabbing/shift+tabbing into other inputs. Since it&#x27;s only six characters it shouldn&#x27;t be too bad to hit &quot;Backspace&quot; a few times rather than update a previous input via mouse click. If it were longer I would definitely opt for a solution where you can correct any input in the chain.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We can use the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">disabled</code> attribute on the inputs to prevent the input from receiving focus. We&#x27;ll create a check to make sure that the inputs before and after our current focus index are disabled. We&#x27;ll also prevent it from disabling the last input if all values are filled.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputContainer</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token punctuation">{</span>separatedValue<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>character<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> disabled <span class="token operator">=</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">          <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> value<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> index <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token constant">MAX_DIGITS</span><span class="token punctuation">)</span> <span class="token operator">||</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">          index <span class="token operator">&gt;</span> focusIndex<span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledInput</span></span>
            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span>
            <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>
            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>character<span class="token punctuation">}</span></span>
            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
            <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span>
          <span class="token punctuation">/&gt;</span></span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#display-the-code"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="display-the-code">Display the Code</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This component will also be used to display the generated code to the user in the other device. In order to use this as a display component we&#x27;ll want to make sure the user can&#x27;t update the inputs. We&#x27;ll use a combination of <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">disabled</code> and <code class="chakra-code css-t3qbto">readonly</code> attributes.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The parent can pass the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">value</code> and the <code class="chakra-code css-t3qbto">readOnly</code> props to the <code class="chakra-code css-t3qbto">SeparatedInput</code> component.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="OTPDisplayContainer.tsx" class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">OTPDisplayContainer</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">useGetValueFromService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SeparatedInput</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span> <span class="token attr-name">readOnly</span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">SeparatedInput</code> will then use this to check for in the handlers and inputs to make sure it will only show the value, not change it. The final component code will then be as follows.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> ChangeEvent<span class="token punctuation">,</span> useCallback<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useMemo<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> useKeyPressEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;react-use&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> InputContainer<span class="token punctuation">,</span> StyledInput <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;./styledComponents&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token comment">// can make this a passed prop if more/fewer digits/characters are needed</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token constant">MAX_DIGITS</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">SeparatedInput</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  value<span class="token punctuation">,</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  onChange<span class="token punctuation">,</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  readOnly<span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  onChange<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  readOnly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>focusIndex<span class="token punctuation">,</span> setFocusIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">
</div><div data-line="20" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> handleBackspace <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>readOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">      <span class="token keyword">return</span><span class="token punctuation">;</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">    <span class="token comment">// remove the last character</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> newValue <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">    <span class="token comment">// move the cursor back one</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">    <span class="token function">setFocusIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>prev <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> prev <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">    onChange<span class="token operator">?.</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>onChange<span class="token punctuation">,</span> readOnly<span class="token punctuation">,</span> value<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">
</div><div data-line="31" class="highlight-line" data-highlighted="false">  <span class="token comment">// fires handleBackspace event when Backspace is pressed</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">  <span class="token function">useKeyPressEvent</span><span class="token punctuation">(</span><span class="token string">&#x27;Backspace&#x27;</span><span class="token punctuation">,</span> handleBackspace<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">
</div><div data-line="34" class="highlight-line" data-highlighted="false">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false">    <span class="token comment">// focus the current input by index</span>
</div><div data-line="36" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>current<span class="token operator">?.</span>children<span class="token punctuation">[</span>focusIndex<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>readOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false">      <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>children<span class="token punctuation">[</span>focusIndex<span class="token punctuation">]</span> <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="38" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="39" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>focusIndex<span class="token punctuation">,</span> readOnly<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="40" class="highlight-line" data-highlighted="false">
</div><div data-line="41" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> separatedValue <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="42" class="highlight-line" data-highlighted="false">    <span class="token comment">// fill the unused inputs with empty strings</span>
</div><div data-line="43" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> filler <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token constant">MAX_DIGITS</span> <span class="token operator">-</span> value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#x27;&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="44" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> resolvedValue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>value<span class="token punctuation">,</span> <span class="token operator">...</span>filler<span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="45" class="highlight-line" data-highlighted="false">
</div><div data-line="46" class="highlight-line" data-highlighted="false">    <span class="token comment">// make sure it&#x27;s only 6 characters long</span>
</div><div data-line="47" class="highlight-line" data-highlighted="false">    resolvedValue<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token constant">MAX_DIGITS</span><span class="token punctuation">;</span>
</div><div data-line="48" class="highlight-line" data-highlighted="false">    <span class="token keyword">return</span> resolvedValue<span class="token punctuation">;</span>
</div><div data-line="49" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="50" class="highlight-line" data-highlighted="false">
</div><div data-line="51" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> handleChange <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
</div><div data-line="52" class="highlight-line" data-highlighted="false">    <span class="token punctuation">(</span>event<span class="token operator">:</span> ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="53" class="highlight-line" data-highlighted="false">      <span class="token keyword">if</span> <span class="token punctuation">(</span>readOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="54" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span><span class="token punctuation">;</span>
</div><div data-line="55" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="56" class="highlight-line" data-highlighted="false">      <span class="token comment">// move the cursor forward after input</span>
</div><div data-line="57" class="highlight-line" data-highlighted="false">      <span class="token function">setFocusIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>prev <span class="token operator">&lt;</span> <span class="token constant">MAX_DIGITS</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> prev <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token constant">MAX_DIGITS</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="58" class="highlight-line" data-highlighted="false">      onChange<span class="token operator">?.</span><span class="token punctuation">(</span>value <span class="token operator">+</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="59" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="60" class="highlight-line" data-highlighted="false">    <span class="token punctuation">[</span>onChange<span class="token punctuation">,</span> readOnly<span class="token punctuation">,</span> value<span class="token punctuation">]</span>
</div><div data-line="61" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="62" class="highlight-line" data-highlighted="false">
</div><div data-line="63" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="64" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputContainer</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="65" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token punctuation">{</span>separatedValue<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>character<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="66" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> disabled <span class="token operator">=</span>
</div><div data-line="67" class="highlight-line" data-highlighted="false">          readOnly <span class="token operator">||</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> value<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> index <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token constant">MAX_DIGITS</span><span class="token punctuation">)</span> <span class="token operator">||</span> index <span class="token operator">&gt;</span> focusIndex<span class="token punctuation">;</span>
</div><div data-line="68" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="69" class="highlight-line" data-highlighted="false">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledInput</span></span>
            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span>
            <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>
            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>character<span class="token punctuation">}</span></span>
            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
            <span class="token attr-name">readOnly</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>readOnly<span class="token punctuation">}</span></span>
            <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span>
          <span class="token punctuation">/&gt;</span></span>
</div><div data-line="70" class="highlight-line" data-highlighted="false">        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="71" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="72" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputContainer</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="73" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="74" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gatsby Client-Side External Redirect]]></title>
        <id>https://joelmturner.com/blog/gatsby-client-side-external-redirect</id>
        <link href="https://joelmturner.com/blog/gatsby-client-side-external-redirect"/>
        <updated>2021-11-02T05:16:08.131Z</updated>
        <summary type="html"><![CDATA[A client-side redirect for Gatsby when you don't have access to the CloudFront settings.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/gatsby-client-side-external-redirect">Gatsby Client-Side External Redirect</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We had a case where we needed to set up a redirect on the client side of Gatsby but we didn&#x27;t want to spin up a lambda to handle this one case. A redirect like this wouldn&#x27;t be a problem with some of the hosts out there, but we&#x27;re just using s3 and Cloudfront for this site.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">To set up a quick redirect on the client we can send a redirect link through page context and handle the window location in a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useEffect</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="gatsby-node.js" class="hljs language-javascript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/path&quot;</span><span class="token punctuation">,</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;../src/templates/EmptyPage.tsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">        <span class="token literal-property property">redirectTo</span><span class="token operator">:</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">            <span class="token string">&quot;https://someawesomewebsite.com/newLink&quot;</span><span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">,</span>
</div></code></pre>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="templates/emptyPage.tsx" class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">isClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token keyword">typeof</span> window <span class="token operator">===</span> <span class="token string">&#x27;object&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">EmptyPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> pageContext <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> pageContext<span class="token operator">?.</span>redirectTo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">      window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> pageContext<span class="token punctuation">.</span>redirectTo<span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Instagram to Cloudinary]]></title>
        <id>https://joelmturner.com/blog/instagram-cloudinary</id>
        <link href="https://joelmturner.com/blog/instagram-cloudinary"/>
        <updated>2021-11-01T16:08:43.532Z</updated>
        <summary type="html"><![CDATA[Setting up a GitHub Action to upload images to Cloudinary from Instagram. This solves some of the issues that I was having with getting Instagram images into Gatsby.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/instagram-cloudinary">Instagram to Cloudinary</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#tltr"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">tl;tr</span></a></li>
<li class="css-1i5jedo"><a href="#the-problem"><span class="chakra-text css-744h54">The Problem</span></a></li>
<li class="css-1i5jedo"><a href="#the-goal"><span class="chakra-text css-744h54">The Goal</span></a></li>
<li class="css-1i5jedo"><a href="#setting-up-a-new-project"><span class="chakra-text css-744h54">Setting up a new project</span></a></li>
<li class="css-1i5jedo"><a href="#instagram-query"><span class="chakra-text css-744h54">Instagram Query</span></a></li>
<li class="css-1i5jedo"><a href="#prepare-the-posts-by-hashtag"><span class="chakra-text css-744h54">Prepare the Posts by Hashtag</span></a></li>
<li class="css-1i5jedo"><a href="#upload-to-cloudinary"><span class="chakra-text css-744h54">Upload to Cloudinary</span></a>
<ul class="css-dyc0h3">
<li class="css-1i5jedo"><a href="#cloudinary-api-credentials"><span class="chakra-text css-744h54">Cloudinary API Credentials</span></a></li>
<li class="css-1i5jedo"><a href="#cloudinary-client"><span class="chakra-text css-744h54">Cloudinary Client</span></a></li>
<li class="css-1i5jedo"><a href="#start-the-uploads"><span class="chakra-text css-744h54">Start the Uploads</span></a></li>
</ul>
</li>
<li class="css-1i5jedo"><a href="#trigger-netlify-deploy"><span class="chakra-text css-744h54">Trigger Netlify Deploy</span></a></li>
<li class="css-1i5jedo"><a href="#github-action-to-run-on-schedule"><span class="chakra-text css-744h54">Github Action to Run on Schedule</span></a></li>
<li class="css-1i5jedo"><a href="#retrieving-cloudinary-images"><span class="chakra-text css-744h54">Retrieving Cloudinary Images</span></a></li>
<li class="css-1i5jedo"><a href="#conclusion"><span class="chakra-text css-744h54">Conclusion</span></a></li>
</ul>
<a href="#tltr"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="tltr">tl;tr</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s the <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/joelmturner/instagram-cloudinary">instagram-cloudinary</a> repo if you&#x27;d like to skip to the final code.</p>
<style data-emotion="css s0fpqi">.css-s0fpqi{margin-bottom:2px;-webkit-padding-start:3px;padding-inline-start:3px;-webkit-padding-end:3px;padding-inline-end:3px;padding-top:0.025px;padding-bottom:0.25px;background:gray.100;border-left-style:solid;border-left-width:5px;border-left-color:gray.300;}</style><div class="css-s0fpqi"><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><em>Update: January 2023</em> - Shortly after posting this article, I moved my site from <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.gatsbyjs.com/">Gatsby</a> to <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://nextjs.org/">Nextjs</a>. You can see how I retrieve the images in the <a href="#retrieving-cloudinary-images"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">Retrieving Cloudinary Images</span></a> section.</p></div>
<a href="#the-problem"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="the-problem">The Problem</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">First, a little history...</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I&#x27;ve been using the <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.gatsbyjs.com/plugins/gatsby-source-instagram/">gatsby-source-instagram</a> plugin for a while on my site to highlight some of my <a href="/illustration"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">illustrations</span></a>. I even <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/oorestisime/gatsby-source-instagram/pull/164">added some functionality to the plugin</a> so consumers could query their posts by hashtag.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/oorestisime">plugin author</a> has done a great job tracking down issues and documenting the convoluted steps to get Facebook/Instagram API credentials. The plugin worked great for a while, but due to many changes in the Facebook/Instagram API, it became less reliable and harder to debug.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">It got to a point where I couldn&#x27;t update my site because of the errors from the Instagram API. I believe that part of the problem is the frequency of querying the API, where it seemed to only work every few minutes, throwing an error in between of &quot;Please try again later.&quot; When working on the site locally, it would cause a cascade of errors in Gatsby&#x27;s graph. Because of this and the ever-changing permissions in the Facebook API, the plugin has been much harder to maintain.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">To query the Instagram API less frequently and have more control, I decided to set up a Node.js project to fetch posts from the Instagram API, filter and find hashtags, and then upload those to Cloudinary. When the posts send successfully, the script fires a Netlify build via a webhook.</p>
<a href="#the-goal"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="the-goal">The Goal</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">To make this work for my case, I jotted down what I needed this script to do.</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ol class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo">fetch the latest posts from Instagram
<ul class="css-dyc0h3">
<li class="css-1i5jedo">make sure we get the first few comments (I used to put the post&#x27;s hashtags in the first comment)</li>
</ul>
</li>
<li class="css-1i5jedo">upload the posts that match my hashtag list to Cloudinary</li>
<li class="css-1i5jedo">trigger a build of my site (my site was running <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.gatsbyjs.com/plugins/gatsby-source-cloudinary/">gatsby-source-cloudinary</a>, now in pulls in the images with the Cloudinary client)</li>
</ol>
<a href="#setting-up-a-new-project"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="setting-up-a-new-project">Setting up a new project</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The first thing to do is set up a new Node.js project. There are quite a few starters out there, but, for this, I just started from scratch.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Create the project folder and navigate to it.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">mkdir</span> instagram-cloudinary
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token builtin class-name">cd</span> instagram-cloudinary
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Initialize the package.json. I use <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">yarn</code>, but feel free to use <code class="chakra-code css-t3qbto">npm</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">yarn</span> init
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is what my package.json file looks like after initialization:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="package.json" class="hljs language-json css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;instagram-cloudinary&quot;</span><span class="token punctuation">,</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/index.js&quot;</span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@joelmturner&quot;</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MIT&quot;</span><span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token property">&quot;private&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I like to use TypeScript so that&#x27;s the first dependency I&#x27;ll add here. The <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">-D</code> flag sets them as <code class="chakra-code css-t3qbto">devDependencies</code>. <code class="chakra-code css-t3qbto">ts-node</code> is going to help run the script.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> typescript ts-node @types/node
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Next, it&#x27;s time to set up the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">tsconfig.json</code> file. I usually run the <code class="chakra-code css-t3qbto">init</code> and update the items as necessary.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">yarn</span> tsc <span class="token parameter variable">--init</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is how mine looks after cleanup.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="tsconfig.json" class="hljs language-json css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;commonjs&quot;</span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token property">&quot;rootDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token property">&quot;isolatedModules&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token property">&quot;noImplicitAny&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token property">&quot;resolveJsonModule&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;es2015&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dom&quot;</span><span class="token punctuation">]</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Since we&#x27;ll be using API keys for Instagram and Cloudinary, we can add <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">dotenv</code> to help us with the environment variables.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> dotenv
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Next is adding the script file in the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">src</code> folder.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">mkdir</span> src
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token function">touch</span> src/index.ts
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">In this file we can add some pseudo code to help us step through. Our <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">src/index.ts</code> can look like this:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">instagramToCloudinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token comment">// fetch the posts from Instagram</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token comment">// convert the posts by hashtags</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token comment">// upload to Cloudinary</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token comment">// trigger a build if posts are pulled successfully</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token comment">// fire the script</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token function">instagramToCloudinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<a href="#instagram-query"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="instagram-query">Instagram Query</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s get those posts!</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We&#x27;ll start with adding axios as a dependency. Axios will help us with the requests.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> axios
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Next, let&#x27;s set up some environment variables for Instagram. For this, you&#x27;ll need an access token and Instagram id from Facebook so that you can query Instagram. Honestly, I don&#x27;t remember how I got these working correctly but, the directions on <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.gatsbyjs.com/plugins/gatsby-source-instagram/#instagram-graph-api-token">gatsby-source-instagram</a> were helpful.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Create a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">.env</code> file at the root of your project and add your values like:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename=".env" class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token assign-left variable">INSTAGRAM_ACCESS_TOKEN</span><span class="token operator">=</span>XXXXXX
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token assign-left variable">INSTAGRAM_ID</span><span class="token operator">=</span>XXXXXX
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now that we have these ready, we can start putting the script together. I&#x27;ll put the Instagram fetching in its own function, so it&#x27;s easier to reason about later.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="true"><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#x27;dotenv&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="true"><span class="token keyword">const</span> <span class="token constant">MAX_POSTS</span> <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="true">
</div><div data-line="4" class="highlight-line" data-highlighted="true"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchInstagramPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="true">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 fetching Instagram posts&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>
</div><div data-line="7" class="highlight-line" data-highlighted="true">    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://graph.facebook.com/v12.0/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">INSTAGRAM_ID</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/media?fields=media_url,caption,media_type,timestamp,children{media_url},comments.limit(3){text}&amp;limit=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">MAX_POSTS</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;access_token=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">INSTAGRAM_ACCESS_TOKEN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>
</div><div data-line="8" class="highlight-line" data-highlighted="true">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">  <span class="token keyword">return</span> response<span class="token operator">?.</span>data<span class="token operator">?.</span>data<span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="true"><span class="token punctuation">}</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">instagramToCloudinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="true">  <span class="token comment">// fetch the posts from Instagram</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchInstagramPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token comment">// convert the posts by hashtags</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token comment">// upload to Cloudinary</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token comment">// trigger a build if posts are pulled successfully</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">
</div><div data-line="21" class="highlight-line" data-highlighted="false"><span class="token comment">// fire the script</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false"><span class="token function">instagramToCloudinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">First, we add the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">require(&quot;dotenv&quot;).config();</code> so we have access to the environment variables that we set up above.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">For the request, we&#x27;re using axios and building the URL with our parameters. The parameters are specialized to what we need for grabbing all the user&#x27;s posts and the first three comments on those posts.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We&#x27;re using the environment variables declared above to place into these parameters for the id and access token. The <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">MAX_POSTS</code> is a setting that we can increase whenever we need to do more or decrease if we&#x27;re only trying to maintain the last few posts posted to Instagram.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We then use an <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">await</code> to make sure the posts resolve before moving on to the next step. We can also add a try-catch in case there is a failure.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchInstagramPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="true">  <span class="token keyword">try</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 fetching Instagram posts&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://graph.facebook.com/v12.0/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">INSTAGRAM_ID</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/media?fields=media_url,caption,media_type,timestamp,children{media_url},comments.limit(3){text}&amp;limit=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">MAX_POSTS</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;access_token=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">INSTAGRAM_ACCESS_TOKEN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token keyword">return</span> response<span class="token operator">?.</span>data<span class="token operator">?.</span>data<span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;😿 Instagram fetch error&#x27;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#prepare-the-posts-by-hashtag"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="prepare-the-posts-by-hashtag">Prepare the Posts by Hashtag</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s do this section in its own function as well. We can add the invocation of it to <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">instagramToCloudinary()</code>. We&#x27;ll add a type of <code class="chakra-code css-t3qbto">UploadPost</code> that we can define in <code class="chakra-code css-t3qbto">src/types.ts</code> and import into our script. The <code class="chakra-code css-t3qbto">UploadPost</code> array will store our data in a way that we can pass to Cloudinary more easily.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> UploadPost <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;./types&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">instagramToCloudinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token comment">// fetch the posts from Instagram</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchInstagramPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">
</div><div data-line="7" class="highlight-line" data-highlighted="true">  <span class="token keyword">if</span> <span class="token punctuation">(</span>posts<span class="token operator">?.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="true">    <span class="token comment">// convert the posts by hashtags</span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">    <span class="token keyword">const</span> cloudinaryCollection<span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">convertInstagramPostToCloudinaryEntity</span><span class="token punctuation">(</span>posts<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="true">
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token comment">// upload to Cloudinary</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token comment">// trigger a build if posts are pulled successfully</span>
</div><div data-line="13" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/types.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">UploadPost</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  public_id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  folder<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  overwrite<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  tags<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  createdDate<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now, let&#x27;s create the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">convertInstagramPostToCloudinaryEntity()</code> function. This one is fairly deep, so I&#x27;ll try to walk through it in pieces, then put it all together. We can stub out the function and add a type of <code class="chakra-code css-t3qbto">Post</code> which is, roughly, the shape we get back from the Instagram API.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> Post<span class="token punctuation">,</span> UploadPost <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;./types&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#x27;dotenv&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token constant">MAX_POSTS</span> <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchInstagramPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">convertInstagramPostToCloudinaryEntity</span><span class="token punctuation">(</span>posts<span class="token operator">:</span> Post<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 converting posts to Cloudinary&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token comment">// check for hashtags in the posts and add to the collection</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/types.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Post</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  media_url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  caption<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  media_type<span class="token operator">:</span> <span class="token string">&#x27;IMAGE&#x27;</span> <span class="token operator">|</span> <span class="token string">&#x27;VIDEO&#x27;</span> <span class="token operator">|</span> <span class="token string">&#x27;AUDIO&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  timestamp<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  comments_count<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  comments<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    data<span class="token operator">:</span> Comment<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now that we have a function ready to start with, we need to figure out how to filter the posts based on a hashtag. I opted to create a list of the hashtags I would like to showcase on my site. The list has an <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">id</code> and a <code class="chakra-code css-t3qbto">regex</code> because I messed up the hashtags a few times on Instagram and didn&#x27;t want to go back through to fix them.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/constants.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">HASHTAG_CONFIG</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    id<span class="token operator">:</span> <span class="token string">&#x27;joelmturner_abcs2017&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    regex<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#j<span class="token char-set class-name">.</span><span class="token quantifier number">+?</span>2017</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    id<span class="token operator">:</span> <span class="token string">&#x27;joelmturner_featured&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    regex<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#joelmturner_featured</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    id<span class="token operator">:</span> <span class="token string">&#x27;letterclash&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    regex<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#letterclash</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    id<span class="token operator">:</span> <span class="token string">&#x27;inktober2017&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">    regex<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#ink<span class="token char-set class-name">.</span><span class="token quantifier number">+?</span>2017</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    id<span class="token operator">:</span> <span class="token string">&#x27;inktober2018&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">    regex<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#ink<span class="token char-set class-name">.</span><span class="token quantifier number">+?</span>2018</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">    id<span class="token operator">:</span> <span class="token string">&#x27;inktober2019&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">    regex<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#ink<span class="token char-set class-name">.</span><span class="token quantifier number">+?</span>2019</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">    id<span class="token operator">:</span> <span class="token string">&#x27;inktober2021&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">    regex<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#ink<span class="token char-set class-name">.</span><span class="token quantifier number">+?</span>2021</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">    id<span class="token operator">:</span> <span class="token string">&#x27;handletteredabcs_2016&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">    regex<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#handletteredabcs_2016</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="34" class="highlight-line" data-highlighted="false"><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">First, we&#x27;ll loop over the hashtag config and filter down to the posts that have the hashtags that we want. Then, we&#x27;ll be able to combine the hashtags, if a post has more than one and create an entity that will be easier for the upload step. We can store these in a variable outside of the loop that will be returned at the end of the function.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">convertInstagramPostToCloudinaryEntity</span><span class="token punctuation">(</span>posts<span class="token operator">:</span> Post<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 converting posts to Cloudinary&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> cloudinaryCollection<span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="true">
</div><div data-line="5" class="highlight-line" data-highlighted="true">  <span class="token comment">// check for hashtags in the posts and add to collection</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">  <span class="token constant">HASHTAG_CONFIG</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="true">    <span class="token keyword">const</span> postGroup <span class="token operator">=</span> posts<span class="token operator">?.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>post<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="true">      <span class="token comment">// making sure the post is an image instead of video</span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">      <span class="token keyword">if</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>media_type <span class="token operator">!==</span> <span class="token string">&#x27;IMAGE&#x27;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="true">        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="true">      <span class="token punctuation">}</span>
</div><div data-line="12" class="highlight-line" data-highlighted="true">      <span class="token comment">// combines the text from the first 3 comments</span>
</div><div data-line="13" class="highlight-line" data-highlighted="true">      <span class="token keyword">const</span> comments <span class="token operator">=</span>
</div><div data-line="14" class="highlight-line" data-highlighted="true">        post<span class="token operator">?.</span>comments<span class="token operator">?.</span>data<span class="token operator">?.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> comment<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="true">          acc <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>acc<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>comment<span class="token operator">?.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="true">          <span class="token keyword">return</span> acc<span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="true">        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#x27;&#x27;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&#x27;&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="true">
</div><div data-line="19" class="highlight-line" data-highlighted="true">      <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token operator">?.</span>caption<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>comments<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="true">      <span class="token comment">// check to see if our regex matches anything in the combined string</span>
</div><div data-line="21" class="highlight-line" data-highlighted="true">      <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="true">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="23" class="highlight-line" data-highlighted="true">
</div><div data-line="24" class="highlight-line" data-highlighted="true">    <span class="token comment">// loop over the posts and add to stored variable</span>
</div><div data-line="25" class="highlight-line" data-highlighted="true">    <span class="token keyword">if</span> <span class="token punctuation">(</span>postGroup<span class="token operator">?.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="26" class="highlight-line" data-highlighted="true">      postGroup<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>post<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="27" class="highlight-line" data-highlighted="true">        <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="28" class="highlight-line" data-highlighted="true">        <span class="token comment">// using a date value as id so it&#x27;s easier to sort by date</span>
</div><div data-line="29" class="highlight-line" data-highlighted="true">        <span class="token keyword">const</span> combinedId <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
</div><div data-line="30" class="highlight-line" data-highlighted="true">        <span class="token comment">// see if this post is already in our collection</span>
</div><div data-line="31" class="highlight-line" data-highlighted="true">        <span class="token keyword">const</span> found <span class="token operator">=</span> cloudinaryCollection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
</div><div data-line="32" class="highlight-line" data-highlighted="true">          <span class="token punctuation">(</span>uploadPost<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> uploadPost<span class="token punctuation">.</span>public_id <span class="token operator">===</span> combinedId
</div><div data-line="33" class="highlight-line" data-highlighted="true">        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="34" class="highlight-line" data-highlighted="true">
</div><div data-line="35" class="highlight-line" data-highlighted="true">        <span class="token keyword">if</span> <span class="token punctuation">(</span>found<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="36" class="highlight-line" data-highlighted="true">          <span class="token comment">// combine tags on the entity</span>
</div><div data-line="37" class="highlight-line" data-highlighted="true">          found<span class="token punctuation">.</span>tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>found<span class="token punctuation">.</span>tags<span class="token punctuation">,</span> config<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="38" class="highlight-line" data-highlighted="true">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
</div><div data-line="39" class="highlight-line" data-highlighted="true">          <span class="token comment">// create entity</span>
</div><div data-line="40" class="highlight-line" data-highlighted="true">          cloudinaryCollection<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="41" class="highlight-line" data-highlighted="true">            url<span class="token operator">:</span> post<span class="token punctuation">.</span>media_url<span class="token punctuation">,</span>
</div><div data-line="42" class="highlight-line" data-highlighted="true">            public_id<span class="token operator">:</span> combinedId<span class="token punctuation">,</span>
</div><div data-line="43" class="highlight-line" data-highlighted="true">            folder<span class="token operator">:</span> <span class="token string">&#x27;illustration&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="44" class="highlight-line" data-highlighted="true">            overwrite<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="45" class="highlight-line" data-highlighted="true">            tags<span class="token operator">:</span> <span class="token punctuation">[</span>config<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="46" class="highlight-line" data-highlighted="true">            createdDate<span class="token operator">:</span> timestamp<span class="token punctuation">,</span>
</div><div data-line="47" class="highlight-line" data-highlighted="true">          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="48" class="highlight-line" data-highlighted="true">        <span class="token punctuation">}</span>
</div><div data-line="49" class="highlight-line" data-highlighted="true">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="50" class="highlight-line" data-highlighted="true">    <span class="token punctuation">}</span>
</div><div data-line="51" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="52" class="highlight-line" data-highlighted="false">
</div><div data-line="53" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> cloudinaryCollection<span class="token punctuation">;</span>
</div><div data-line="54" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#upload-to-cloudinary"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="upload-to-cloudinary">Upload to Cloudinary</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now that we have an array of Cloudinary-like entities, we&#x27;re ready to move on to uploading to Cloudinary. To achieve this, we&#x27;ll need to make sure we have upload credentials.</p>
<a href="#cloudinary-api-credentials"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="cloudinary-api-credentials">Cloudinary API Credentials</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">If you&#x27;re new to Cloudinary, they have a very generous free tier where you can sign up at <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://cloudinary.com/">cloudinary.com</a> or use this <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://cloudinary.com/invites/lpov9zyyucivvxsnalc5/ioqt4f3bil10nezrxnml">invite link</a>. Once you&#x27;re signed in, you can follow the steps below.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">If you have a Cloudinary account, you can log in and go to Settings -&gt; Security -&gt; Access Keys. Here, you can add a new pair, which will be used in this script.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Once finished, you should see all the details you&#x27;ll need at the top of your Cloudinary dashboard.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/image/upload/v1635257186/Posts/cloudinary-dashboard-credentials.png" alt="screenshot of Cloudinary&#x27;s dashboard, showing api credentials"/></p>
<a href="#cloudinary-client"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="cloudinary-client">Cloudinary Client</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s get the Cloudinary client connected. We&#x27;ll need to add some items to our <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">.env</code> file.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename=".env" class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment"># Instagram</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token assign-left variable">INSTAGRAM_ACCESS_TOKEN</span><span class="token operator">=</span>XXXXXX
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token assign-left variable">INSTAGRAM_ID</span><span class="token operator">=</span>XXXXXX
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="true"><span class="token comment"># Cloudinary</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true"><span class="token assign-left variable">CLOUDINARY_CLOUD_NAME</span><span class="token operator">=</span>XXXXXX
</div><div data-line="7" class="highlight-line" data-highlighted="true"><span class="token assign-left variable">CLOUDINARY_API_KEY</span><span class="token operator">=</span>XXXXXX
</div><div data-line="8" class="highlight-line" data-highlighted="true"><span class="token assign-left variable">CLOUDINARY_API_SECRET</span><span class="token operator">=</span>XXXXXX
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We can now use these in our app to help us connect to Cloudinary. Here is the connection config. I placed this at the top of the index file, under the imports.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false">cloudinary<span class="token punctuation">.</span>v2<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  cloud_name<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CLOUDINARY_CLOUD_NAME</span><span class="token punctuation">,</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  api_key<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CLOUDINARY_API_KEY</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  api_secret<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CLOUDINARY_API_SECRET</span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  secure<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<a href="#start-the-uploads"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="start-the-uploads">Start the Uploads</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We&#x27;re now ready to start the upload process. We&#x27;ll start by creating a new async function because we want to know if all of the uploads made it successfully.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> UploadPost <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;./types&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">instagramToCloudinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token comment">// fetch the posts from Instagram</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchInstagramPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token keyword">if</span> <span class="token punctuation">(</span>posts<span class="token operator">?.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token comment">// convert the posts by hashtags</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> cloudinaryCollection<span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">convertInstagramPostToCloudinaryEntity</span><span class="token punctuation">(</span>posts<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token comment">// upload to Cloudinary</span>
</div><div data-line="12" class="highlight-line" data-highlighted="true">    <span class="token keyword">const</span> uploadStatus <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">sendToCloudinary</span><span class="token punctuation">(</span>cloudinaryCollection<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">    <span class="token comment">// trigger a build if posts are pulled successfully</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sendToCloudinary</span><span class="token punctuation">(</span>postGroup<span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 uploading to Cloudinary&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Cloudinary doesn&#x27;t have a bulk upload script but their individual upload is very quick and can handle many uploads simultaneously so we can just loop over our entities and send them up. Here&#x27;s the <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://cloudinary.com/documentation/image_upload_api_reference">upload API</a> we&#x27;ll be using. There are a lot of options that can be adjusted based on the projects&#x27; needs. Here, we&#x27;re just using the basic options.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sendToCloudinary</span><span class="token punctuation">(</span>postGroup<span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 uploading to Cloudinary&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> resolves <span class="token operator">=</span> postGroup<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> public_id<span class="token punctuation">,</span> folder<span class="token punctuation">,</span> overwrite<span class="token punctuation">,</span> tags<span class="token punctuation">,</span> url <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="true">    <span class="token keyword">try</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="true">      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">        cloudinary<span class="token punctuation">.</span>v2<span class="token punctuation">.</span>uploader<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>
</div><div data-line="7" class="highlight-line" data-highlighted="true">          url<span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="true">          <span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">            public_id<span class="token punctuation">,</span>
</div><div data-line="10" class="highlight-line" data-highlighted="true">            folder<span class="token punctuation">,</span>
</div><div data-line="11" class="highlight-line" data-highlighted="true">            overwrite<span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="true">            tags<span class="token punctuation">,</span>
</div><div data-line="13" class="highlight-line" data-highlighted="true">          <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="14" class="highlight-line" data-highlighted="true">          <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="true">            <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="16" class="highlight-line" data-highlighted="true">              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="true">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
</div><div data-line="18" class="highlight-line" data-highlighted="true">              <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#x27;SUCCESS&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="true">            <span class="token punctuation">}</span>
</div><div data-line="20" class="highlight-line" data-highlighted="true">          <span class="token punctuation">}</span>
</div><div data-line="21" class="highlight-line" data-highlighted="true">        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="true">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="23" class="highlight-line" data-highlighted="true">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error_1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="24" class="highlight-line" data-highlighted="true">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;😿 Cloudinary upload error&#x27;</span><span class="token punctuation">,</span> error_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="25" class="highlight-line" data-highlighted="true">    <span class="token punctuation">}</span>
</div><div data-line="26" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="27" class="highlight-line" data-highlighted="true">
</div><div data-line="28" class="highlight-line" data-highlighted="true">  <span class="token comment">// make sure all were successful</span>
</div><div data-line="29" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> successfullyResolved <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>resolves<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token operator">!</span>resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="30" class="highlight-line" data-highlighted="true">
</div><div data-line="31" class="highlight-line" data-highlighted="true">  <span class="token keyword">return</span> successfullyResolved <span class="token operator">?</span> <span class="token string">&#x27;SUCCESS&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;ERROR&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I&#x27;m using an array of promises to help me determine if any had an error while uploading. This may not be necessary for all cases but I like to know, especially before kicking off a new build of the site.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The last argument in the upload function is a callback that can help us determine if the upload was successful or not. We can check against this in our <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">successfullyResolved</code> check and return an appropriate status.</p>
<a href="#trigger-netlify-deploy"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="trigger-netlify-deploy">Trigger Netlify Deploy</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">If all the images were uploaded successfully, we&#x27;ll trigger the build on Netlify. First, we&#x27;ll need our Netlify webhook. You can set one up in the deploys settings <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">https://app.netlify.com/sites/&lt;account&gt;/settings/deploys</code> under the Build Hooks section. Once you have the hook, you can add that to your <code class="chakra-code css-t3qbto">.env</code> file.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename=".env" class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment"># Instagram</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token assign-left variable">INSTAGRAM_ACCESS_TOKEN</span><span class="token operator">=</span>XXXXXX
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token assign-left variable">INSTAGRAM_ID</span><span class="token operator">=</span>XXXXXX
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token comment"># Cloudinary</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token assign-left variable">CLOUDINARY_CLOUD_NAME</span><span class="token operator">=</span>XXXXXX
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token assign-left variable">CLOUDINARY_API_KEY</span><span class="token operator">=</span>XXXXXX
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token assign-left variable">CLOUDINARY_API_SECRET</span><span class="token operator">=</span>XXXXXX
</div><div data-line="9" class="highlight-line" data-highlighted="false">
</div><div data-line="10" class="highlight-line" data-highlighted="true"><span class="token comment"># Netlify</span>
</div><div data-line="11" class="highlight-line" data-highlighted="true"><span class="token assign-left variable">NETLIFY_WEBHOOK</span><span class="token operator">=</span>XXXXXX
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We&#x27;ll now set up a conditional build script using <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">axios</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment">// trigger a build if posts are pulled successfully</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">if</span> <span class="token punctuation">(</span>uploadStatus <span class="token operator">===</span> <span class="token string">&#x27;SUCCESS&#x27;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  axios
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NETLIFY_WEBHOOK</span> <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 triggered Netlify build&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;😿 Netlify trigger error&#x27;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Our script should look something like this now:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="src/index.ts" class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#x27;axios&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> cloudinary <span class="token keyword">from</span> <span class="token string">&#x27;cloudinary&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">HASHTAG_CONFIG</span><span class="token punctuation">,</span> <span class="token constant">MAX_POSTS</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;./constants&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> InstagramResponse<span class="token punctuation">,</span> Post<span class="token punctuation">,</span> UploadPost <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;./types&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#x27;dotenv&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">
</div><div data-line="7" class="highlight-line" data-highlighted="false">cloudinary<span class="token punctuation">.</span>v2<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  cloud_name<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CLOUDINARY_CLOUD_NAME</span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  api_key<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CLOUDINARY_API_KEY</span><span class="token punctuation">,</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  api_secret<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CLOUDINARY_API_SECRET</span><span class="token punctuation">,</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  secure<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">
</div><div data-line="14" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sendToCloudinary</span><span class="token punctuation">(</span>postGroup<span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 uploading to Cloudinary&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> resolves <span class="token operator">=</span> postGroup<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> public_id<span class="token punctuation">,</span> folder<span class="token punctuation">,</span> overwrite<span class="token punctuation">,</span> tags<span class="token punctuation">,</span> url <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">    <span class="token keyword">try</span> <span class="token punctuation">{</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">        cloudinary<span class="token punctuation">.</span>v2<span class="token punctuation">.</span>uploader<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">          url<span class="token punctuation">,</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">          <span class="token punctuation">{</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">            public_id<span class="token punctuation">,</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">            folder<span class="token punctuation">,</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">            overwrite<span class="token punctuation">,</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">            tags<span class="token punctuation">,</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">          <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">          <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">            <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">              <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#x27;SUCCESS&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">            <span class="token punctuation">}</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">          <span class="token punctuation">}</span>
</div><div data-line="34" class="highlight-line" data-highlighted="false">        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="36" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error_1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;😿 Cloudinary upload error&#x27;</span><span class="token punctuation">,</span> error_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="38" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="39" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="40" class="highlight-line" data-highlighted="false">
</div><div data-line="41" class="highlight-line" data-highlighted="false">  <span class="token comment">// make sure all were successful</span>
</div><div data-line="42" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> successfullyResolved <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>resolves<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token operator">!</span>resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="43" class="highlight-line" data-highlighted="false">
</div><div data-line="44" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> successfullyResolved <span class="token operator">?</span> <span class="token string">&#x27;SUCCESS&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;ERROR&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="45" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="46" class="highlight-line" data-highlighted="false">
</div><div data-line="47" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchInstagramPosts</span><span class="token punctuation">(</span>postRequestError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="48" class="highlight-line" data-highlighted="false">  <span class="token keyword">try</span> <span class="token punctuation">{</span>
</div><div data-line="49" class="highlight-line" data-highlighted="false">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 fetching Instagram posts&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="50" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>InstagramResponse<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
</div><div data-line="51" class="highlight-line" data-highlighted="false">      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://graph.facebook.com/v12.0/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">INSTAGRAM_ID</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/media?fields=media_url,caption,media_type,timestamp,username,children{media_url},permalink,comments.limit(3){text}&amp;limit=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">MAX_POSTS</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;access_token=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">INSTAGRAM_ACCESS_TOKEN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>
</div><div data-line="52" class="highlight-line" data-highlighted="false">    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="53" class="highlight-line" data-highlighted="false">    <span class="token keyword">return</span> response<span class="token operator">?.</span>data<span class="token operator">?.</span>data<span class="token punctuation">;</span>
</div><div data-line="54" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="55" class="highlight-line" data-highlighted="false">    postRequestError <span class="token operator">=</span> error<span class="token punctuation">;</span>
</div><div data-line="56" class="highlight-line" data-highlighted="false">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;😿 Instagram fetch error&#x27;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="57" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="58" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="59" class="highlight-line" data-highlighted="false">
</div><div data-line="60" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">convertInstagramPostToCloudinaryEntity</span><span class="token punctuation">(</span>posts<span class="token operator">:</span> Post<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
</div><div data-line="61" class="highlight-line" data-highlighted="false">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 converting posts to Cloudinary&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="62" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> cloudinaryCollection<span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="63" class="highlight-line" data-highlighted="false">
</div><div data-line="64" class="highlight-line" data-highlighted="false">  <span class="token comment">// check for hashtags in the posts and add to collection</span>
</div><div data-line="65" class="highlight-line" data-highlighted="false">  <span class="token constant">HASHTAG_CONFIG</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="66" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> postGroup <span class="token operator">=</span> posts<span class="token operator">?.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>post<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="67" class="highlight-line" data-highlighted="false">      <span class="token comment">// making sure the post is an image instead of video</span>
</div><div data-line="68" class="highlight-line" data-highlighted="false">      <span class="token keyword">if</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>media_type <span class="token operator">!==</span> <span class="token string">&#x27;IMAGE&#x27;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="69" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</div><div data-line="70" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="71" class="highlight-line" data-highlighted="false">      <span class="token comment">// combines the text from the first 3 comments</span>
</div><div data-line="72" class="highlight-line" data-highlighted="false">      <span class="token keyword">const</span> comments <span class="token operator">=</span>
</div><div data-line="73" class="highlight-line" data-highlighted="false">        post<span class="token operator">?.</span>comments<span class="token operator">?.</span>data<span class="token operator">?.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> comment<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="74" class="highlight-line" data-highlighted="false">          acc <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>acc<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>comment<span class="token operator">?.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
</div><div data-line="75" class="highlight-line" data-highlighted="false">          <span class="token keyword">return</span> acc<span class="token punctuation">;</span>
</div><div data-line="76" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#x27;&#x27;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&#x27;&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="77" class="highlight-line" data-highlighted="false">
</div><div data-line="78" class="highlight-line" data-highlighted="false">      <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token operator">?.</span>caption<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>comments<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
</div><div data-line="79" class="highlight-line" data-highlighted="false">      <span class="token comment">// check to see if our regex matches anything in the combined string</span>
</div><div data-line="80" class="highlight-line" data-highlighted="false">      <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="81" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="82" class="highlight-line" data-highlighted="false">
</div><div data-line="83" class="highlight-line" data-highlighted="false">    <span class="token comment">// loop over the posts and add to stored variable</span>
</div><div data-line="84" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>postGroup<span class="token operator">?.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="85" class="highlight-line" data-highlighted="false">      postGroup<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>post<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="86" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="87" class="highlight-line" data-highlighted="false">        <span class="token comment">// using a date value as id so it&#x27;s easier to sort by date</span>
</div><div data-line="88" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> combinedId <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
</div><div data-line="89" class="highlight-line" data-highlighted="false">        <span class="token comment">// see if this post is already in our collection</span>
</div><div data-line="90" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> found <span class="token operator">=</span> cloudinaryCollection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
</div><div data-line="91" class="highlight-line" data-highlighted="false">          <span class="token punctuation">(</span>uploadPost<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> uploadPost<span class="token punctuation">.</span>public_id <span class="token operator">===</span> combinedId
</div><div data-line="92" class="highlight-line" data-highlighted="false">        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="93" class="highlight-line" data-highlighted="false">
</div><div data-line="94" class="highlight-line" data-highlighted="false">        <span class="token keyword">if</span> <span class="token punctuation">(</span>found<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="95" class="highlight-line" data-highlighted="false">          <span class="token comment">// combine tags on the entity</span>
</div><div data-line="96" class="highlight-line" data-highlighted="false">          found<span class="token punctuation">.</span>tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>found<span class="token punctuation">.</span>tags<span class="token punctuation">,</span> config<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="97" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
</div><div data-line="98" class="highlight-line" data-highlighted="false">          <span class="token comment">// create entity</span>
</div><div data-line="99" class="highlight-line" data-highlighted="false">          cloudinaryCollection<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="100" class="highlight-line" data-highlighted="false">            url<span class="token operator">:</span> post<span class="token punctuation">.</span>media_url<span class="token punctuation">,</span>
</div><div data-line="101" class="highlight-line" data-highlighted="false">            public_id<span class="token operator">:</span> combinedId<span class="token punctuation">,</span>
</div><div data-line="102" class="highlight-line" data-highlighted="false">            folder<span class="token operator">:</span> <span class="token string">&#x27;illustration&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="103" class="highlight-line" data-highlighted="false">            overwrite<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="104" class="highlight-line" data-highlighted="false">            tags<span class="token operator">:</span> <span class="token punctuation">[</span>config<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="105" class="highlight-line" data-highlighted="false">            createdDate<span class="token operator">:</span> timestamp<span class="token punctuation">,</span>
</div><div data-line="106" class="highlight-line" data-highlighted="false">          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="107" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span>
</div><div data-line="108" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="109" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="110" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="111" class="highlight-line" data-highlighted="false">
</div><div data-line="112" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> cloudinaryCollection<span class="token punctuation">;</span>
</div><div data-line="113" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="114" class="highlight-line" data-highlighted="false">
</div><div data-line="115" class="highlight-line" data-highlighted="false"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">instagramToCloudinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="116" class="highlight-line" data-highlighted="false">  <span class="token keyword">let</span> postRequestError <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</div><div data-line="117" class="highlight-line" data-highlighted="false">
</div><div data-line="118" class="highlight-line" data-highlighted="false">  <span class="token comment">// fetch the posts from Instagram</span>
</div><div data-line="119" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchInstagramPosts</span><span class="token punctuation">(</span>postRequestError<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="120" class="highlight-line" data-highlighted="false">
</div><div data-line="121" class="highlight-line" data-highlighted="false">  <span class="token keyword">if</span> <span class="token punctuation">(</span>posts<span class="token operator">?.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="122" class="highlight-line" data-highlighted="false">    <span class="token comment">// convert the posts by hashtags</span>
</div><div data-line="123" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> cloudinaryCollection<span class="token operator">:</span> UploadPost<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">convertInstagramPostToCloudinaryEntity</span><span class="token punctuation">(</span>posts<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="124" class="highlight-line" data-highlighted="false">
</div><div data-line="125" class="highlight-line" data-highlighted="false">    <span class="token comment">// upload to Cloudinary</span>
</div><div data-line="126" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> uploadStatus <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">sendToCloudinary</span><span class="token punctuation">(</span>cloudinaryCollection<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="127" class="highlight-line" data-highlighted="false">
</div><div data-line="128" class="highlight-line" data-highlighted="false">    <span class="token comment">// trigger a build if posts are pulled successfully</span>
</div><div data-line="129" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>postRequestError <span class="token operator">&amp;&amp;</span> uploadStatus <span class="token operator">===</span> <span class="token string">&#x27;SUCCESS&#x27;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="130" class="highlight-line" data-highlighted="false">      axios
</div><div data-line="131" class="highlight-line" data-highlighted="false">        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NETLIFY_WEBHOOK</span> <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span>
</div><div data-line="132" class="highlight-line" data-highlighted="false">        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="133" class="highlight-line" data-highlighted="false">          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;🚀 triggered Netlify build&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="134" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">)</span>
</div><div data-line="135" class="highlight-line" data-highlighted="false">        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="136" class="highlight-line" data-highlighted="false">          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#x27;😿 Netlify trigger error&#x27;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="137" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="138" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="139" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="140" class="highlight-line" data-highlighted="false">
</div><div data-line="141" class="highlight-line" data-highlighted="false">  <span class="token comment">// for local debugging</span>
</div><div data-line="142" class="highlight-line" data-highlighted="false">  <span class="token comment">//   fs.writeFile(&quot;test.json&quot;, JSON.stringify(cloudinaryCollection, null, 2), (err: any) =&gt; {</span>
</div><div data-line="143" class="highlight-line" data-highlighted="false">  <span class="token comment">//     if (err) {</span>
</div><div data-line="144" class="highlight-line" data-highlighted="false">  <span class="token comment">//       console.error(err);</span>
</div><div data-line="145" class="highlight-line" data-highlighted="false">  <span class="token comment">//       return;</span>
</div><div data-line="146" class="highlight-line" data-highlighted="false">  <span class="token comment">//     }</span>
</div><div data-line="147" class="highlight-line" data-highlighted="false">  <span class="token comment">//     //file written successfully</span>
</div><div data-line="148" class="highlight-line" data-highlighted="false">  <span class="token comment">//   });</span>
</div><div data-line="149" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="150" class="highlight-line" data-highlighted="false">
</div><div data-line="151" class="highlight-line" data-highlighted="false"><span class="token comment">// fire the script</span>
</div><div data-line="152" class="highlight-line" data-highlighted="false"><span class="token function">instagramToCloudinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<a href="#github-action-to-run-on-schedule"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="github-action-to-run-on-schedule">Github Action to Run on Schedule</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">In your Github project you can create an action and use the following config for a daily run.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-yml css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment"># This is a basic workflow to help you get started with Actions</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token key atrule">name</span><span class="token punctuation">:</span> Post Fetch and Deploy
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token comment"># Controls when the workflow will run</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token key atrule">on</span><span class="token punctuation">:</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token key atrule">schedule</span><span class="token punctuation">:</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token punctuation">-</span> <span class="token key atrule">cron</span><span class="token punctuation">:</span> <span class="token string">&#x27;0 0 * * *&#x27;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token comment"># Allows you to run this workflow manually from the Actions tab</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token comment"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false"><span class="token key atrule">jobs</span><span class="token punctuation">:</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token comment"># This workflow contains a single job called &quot;build&quot;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token key atrule">build</span><span class="token punctuation">:</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">    <span class="token comment"># The type of runner that the job will run on</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
</div><div data-line="19" class="highlight-line" data-highlighted="false">
</div><div data-line="20" class="highlight-line" data-highlighted="false">    <span class="token key atrule">strategy</span><span class="token punctuation">:</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">      <span class="token key atrule">matrix</span><span class="token punctuation">:</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>14.17.x<span class="token punctuation">]</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">
</div><div data-line="24" class="highlight-line" data-highlighted="false">    <span class="token comment"># Steps represent a sequence of tasks that will be executed as part of the job</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">      <span class="token comment"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
</div><div data-line="28" class="highlight-line" data-highlighted="false">
</div><div data-line="29" class="highlight-line" data-highlighted="false">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Using Node version $<span class="token punctuation">{</span><span class="token punctuation">{</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">}</span><span class="token punctuation">}</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1
</div><div data-line="31" class="highlight-line" data-highlighted="false">        <span class="token key atrule">with</span><span class="token punctuation">:</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">}</span><span class="token punctuation">}</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> create env file
</div><div data-line="34" class="highlight-line" data-highlighted="false">        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
</div><div data-line="35" class="highlight-line" data-highlighted="false"><span class="token scalar string">          MY_STRING=$(cat &lt;&lt; EOF</span>
</div><div data-line="36" class="highlight-line" data-highlighted="false"><span class="token scalar string">          INSTAGRAM_ACCESS_TOKEN =${{secrets.INSTAGRAM_ACCESS_TOKEN}}</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false"><span class="token scalar string">          INSTAGRAM_ID =${{secrets.INSTAGRAM_ID}}</span>
</div><div data-line="38" class="highlight-line" data-highlighted="false"><span class="token scalar string">          CLOUDINARY_CLOUD_NAME =${{secrets.CLOUDINARY_CLOUD_NAME}}</span>
</div><div data-line="39" class="highlight-line" data-highlighted="false"><span class="token scalar string">          CLOUDINARY_API_KEY =${{secrets.CLOUDINARY_API_KEY}}</span>
</div><div data-line="40" class="highlight-line" data-highlighted="false"><span class="token scalar string">          CLOUDINARY_API_SECRET =${{secrets.CLOUDINARY_API_SECRET}}</span>
</div><div data-line="41" class="highlight-line" data-highlighted="false"><span class="token scalar string">          NETLIFY_WEBHOOK =${{secrets.NETLIFY_WEBHOOK}}</span>
</div><div data-line="42" class="highlight-line" data-highlighted="false"><span class="token scalar string">          EOF</span>
</div><div data-line="43" class="highlight-line" data-highlighted="false"><span class="token scalar string">          )</span>
</div><div data-line="44" class="highlight-line" data-highlighted="false"><span class="token scalar string">          touch .env</span>
</div><div data-line="45" class="highlight-line" data-highlighted="false"><span class="token scalar string">          echo &quot;$MY_STRING&quot; &gt;&gt; .env</span>
</div><div data-line="46" class="highlight-line" data-highlighted="false">      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn
</div><div data-line="47" class="highlight-line" data-highlighted="false">      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn start
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">- cron: &quot;0 0 * * *&quot;</code> is what configures the action to run once a day.</p>
<a href="#retrieving-cloudinary-images"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="retrieving-cloudinary-images">Retrieving Cloudinary Images</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I use the Cloudinary api to retrieve the images for my site. Here is search that I&#x27;m using:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-ts css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false">cloudinary<span class="token punctuation">.</span>v2<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  cloud_name<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME</span><span class="token punctuation">,</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  api_key<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CLOUDINARY_API_KEY</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  api_secret<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CLOUDINARY_API_SECRET</span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  secure<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token keyword">await</span> cloudinary<span class="token punctuation">.</span>v2<span class="token punctuation">.</span>search
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token string">&#x27;folder:illustration&#x27;</span><span class="token punctuation">)</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token punctuation">.</span><span class="token function">sort_by</span><span class="token punctuation">(</span><span class="token string">&#x27;public_id&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;desc&#x27;</span><span class="token punctuation">)</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">    <span class="token punctuation">.</span><span class="token function">max_results</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">    <span class="token punctuation">.</span><span class="token function">with_field</span><span class="token punctuation">(</span><span class="token string">&#x27;tags&#x27;</span><span class="token punctuation">)</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This searches my images in the illustration folder, sorts by alphabetical descending and makes sure the tags come along as well.</p>
<a href="#conclusion"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="conclusion">Conclusion</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Offloading my Instagram posts to Cloudinary has made my site build more reliably, especially when I&#x27;m doing local development. The Cloudinary API has been rock solid for me so far and it&#x27;s easier to work with.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Hopefully, this process is broken up enough that any service could be swapped out for another with little effort. I can see other social channels being aggregated into this pipeline as well.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sequential Interval React Hook]]></title>
        <id>https://joelmturner.com/blog/sequential-interval-react-hook</id>
        <link href="https://joelmturner.com/blog/sequential-interval-react-hook"/>
        <updated>2021-04-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Create a React hook that can simulate a pulse-like cycle between animation states through different durations per animation state.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/sequential-interval-react-hook">Sequential Interval React Hook</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#tldr"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">tl;dr</span></a></li>
<li class="css-1i5jedo"><a href="#background"><span class="chakra-text css-744h54">Background</span></a></li>
<li class="css-1i5jedo"><a href="#criteria"><span class="chakra-text css-744h54">Criteria</span></a></li>
<li class="css-1i5jedo"><a href="#attempts"><span class="chakra-text css-744h54">Attempts</span></a></li>
<li class="css-1i5jedo"><a href="#research"><span class="chakra-text css-744h54">Research</span></a></li>
<li class="css-1i5jedo"><a href="#creating-the-usestepinterval-hook"><span class="chakra-text css-744h54">Creating the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useStepInterval</code> Hook</span></a></li>
<li class="css-1i5jedo"><a href="#using-the-usestepinterval-hook"><span class="chakra-text css-744h54">Using the <code class="chakra-code css-t3qbto">useStepInterval</code> Hook</span></a></li>
</ul>
<a href="#tldr"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="tldr">tl;dr</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s the hook in an example.</p>
<div data-testid="general-observer" class="mdx-embed"><div style="height:0;width:100%"></div></div>
<a href="#background"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="background">Background</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We have an animation heartbeat player that switches between four animation states, each with its own user-configurable duration.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We have a ping service that sends out a ping to our component on an interval, or heartbeat, and each ping kicks off an animation cycle. This cycle goes through the sequence: <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">rest</code> -&gt; <code class="chakra-code css-t3qbto">tick</code> -&gt; <code class="chakra-code css-t3qbto">exit</code> -&gt; <code class="chakra-code css-t3qbto">enter</code> -&gt; <code class="chakra-code css-t3qbto">rest</code>.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The original implementation was built into a class component using a local <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://mobx.js.org/">MobX</a> observable and nested <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">setTimeout</code>s and has worked very well for the past few years.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is a rough idea of how the nested <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">setTimeout</code>s are set up inside of the ping.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">this</span><span class="token punctuation">.</span>animationState <span class="token operator">=</span> <span class="token string">&#x27;tick&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token function">setTimeout</span><span class="token punctuation">(</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token keyword">this</span><span class="token punctuation">.</span>animationState <span class="token operator">=</span> <span class="token string">&#x27;exit&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token function">setTimeout</span><span class="token punctuation">(</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">      <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">        <span class="token keyword">this</span><span class="token punctuation">.</span>animationState <span class="token operator">=</span> <span class="token string">&#x27;enter&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">        <span class="token function">setTimeout</span><span class="token punctuation">(</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">          <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">            <span class="token keyword">this</span><span class="token punctuation">.</span>animationState <span class="token operator">=</span> <span class="token string">&#x27;rest&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">          <span class="token punctuation">}</span><span class="token punctuation">)</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">      widget<span class="token punctuation">.</span>tickLength
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  widget<span class="token punctuation">.</span>tickDelay
</div><div data-line="18" class="highlight-line" data-highlighted="false"><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We&#x27;re at a point where we need to update the renderer housing this logic and I thought I would attempt to do it with a functional component.</p>
<a href="#criteria"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="criteria">Criteria</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The four animation states we need to switch between are <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">tick</code>, <code class="chakra-code css-t3qbto">exit</code>, <code class="chakra-code css-t3qbto">enter</code>, and <code class="chakra-code css-t3qbto">rest</code>; while each of our widgets has CSS animations that are tied to a <code class="chakra-code css-t3qbto">className</code> of <code class="chakra-code css-t3qbto">status_[animationState]</code>.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Each of these animation states needs its own duration that is user-configurable.</p>
<a href="#attempts"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="attempts">Attempts</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">First, I tried to implement something similar to what we see above in a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useEffect</code> and <code class="chakra-code css-t3qbto">setState</code>. The downside here is that the <code class="chakra-code css-t3qbto">useEffect</code> is new every render so I wasn&#x27;t able to track timeouts effectively.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The second thing I tried, was to leverage the <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://overreacted.io/making-setinterval-declarative-with-react-hooks/"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useInterval</code> hook</a> that Dan Abramov created. The downside here is that the callback is a <code class="chakra-code css-t3qbto">ref</code> so it never changes, which means I can&#x27;t pass it a different callback for each step/duration.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Finally, I settled on a mix of <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">ref</code>s for persistence and a custom hook to handle the <code class="chakra-code css-t3qbto">setTimeout</code>s.</p>
<a href="#research"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="research">Research</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I thought I would be able to jam the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">setTimeout</code>s in an array and use a <code class="chakra-code css-t3qbto">for of</code> loop to run them, one by one. This ended up running them &quot;out of order.&quot;</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I ended up coming across two solutions that helped me piece it together, <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://stackoverflow.com/a/60360051">How to resolve a useReducer&#x27;s dispatch function inside a promise in ReactJS</a> and <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://css-tricks.com/why-using-reduce-to-sequentially-resolve-promises-works/">Why Using reduce() to Sequentially Resolve Promises Works</a>.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The idea here is that each is wrapped in a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">Promise</code> and added to an array where we can loop over them in a <code class="chakra-code css-t3qbto">reduce</code>, awaiting the previous <code class="chakra-code css-t3qbto">Promise</code> before starting the next.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This worked like a charm!</p>
<a href="#creating-the-usestepinterval-hook"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="creating-the-usestepinterval-hook">Creating the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useStepInterval</code> Hook</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The custom hook is where the magic lies. We start with two <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useState</code>s, one for the animation state and another to determine if the animation cycle is running. We&#x27;ll return the <code class="chakra-code css-t3qbto">status</code> and the ability to set <code class="chakra-code css-t3qbto">isRunning</code> so our component can turn it on/off.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-ts css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> SetStateAction<span class="token punctuation">,</span> Dispatch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token comment">// steps through the heartbeat animation states</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useStepInterval</span><span class="token generic class-name"><span class="token operator">&lt;</span>StatusType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  initialStatus<span class="token operator">:</span> StatusType<span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  steps<span class="token operator">:</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> StatusType<span class="token punctuation">;</span> delay<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> StatusType<span class="token punctuation">;</span> setIsRunning<span class="token operator">:</span> Dispatch<span class="token operator">&lt;</span>SetStateAction<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>status<span class="token punctuation">,</span> setStatus<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>StatusType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>initialStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isRunning<span class="token punctuation">,</span> setIsRunning<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> setIsRunning <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Next, we set up a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useEffect</code> that will watch <code class="chakra-code css-t3qbto">isRunning</code> to see if the cycle should start. In this hook, we&#x27;ll have two functions, one that sets up the <code class="chakra-code css-t3qbto">Promise</code>s and another that will run the <code class="chakra-code css-t3qbto">reduce</code> over the <code class="chakra-code css-t3qbto">Promise</code>s.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-ts css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> SetStateAction<span class="token punctuation">,</span> Dispatch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token comment">// steps through the heartbeat animation states</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useStepInterval</span><span class="token generic class-name"><span class="token operator">&lt;</span>StatusType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  initialStatus<span class="token operator">:</span> StatusType<span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  steps<span class="token operator">:</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> StatusType<span class="token punctuation">;</span> delay<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> StatusType<span class="token punctuation">;</span> setIsRunning<span class="token operator">:</span> Dispatch<span class="token operator">&lt;</span>SetStateAction<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>status<span class="token punctuation">,</span> setStatus<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>StatusType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>initialStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isRunning<span class="token punctuation">,</span> setIsRunning<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token keyword">function</span> <span class="token function">setUpPromise</span><span class="token punctuation">(</span>step<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">      <span class="token comment">// we&#x27;re returning a promise that will clean up after itself</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> wait <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">          <span class="token comment">// clear previous setTimeout</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">          <span class="token function">clearTimeout</span><span class="token punctuation">(</span>wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">
</div><div data-line="19" class="highlight-line" data-highlighted="false">          <span class="token comment">// set the status of the step</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">          <span class="token function">setStatus</span><span class="token punctuation">(</span>step<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">
</div><div data-line="22" class="highlight-line" data-highlighted="false">          <span class="token comment">// if it&#x27;s the last item, stop the cycle</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">          <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> steps<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">            <span class="token function">setIsRunning</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">          <span class="token punctuation">}</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">
</div><div data-line="27" class="highlight-line" data-highlighted="false">          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">
</div><div data-line="29" class="highlight-line" data-highlighted="false">          <span class="token comment">// use the duration of the previous to this step</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">,</span> step<span class="token punctuation">.</span>delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">
</div><div data-line="34" class="highlight-line" data-highlighted="false">    <span class="token comment">// using a reduce allows us to wait for the previous promise to resolve</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false">    <span class="token comment">// before starting the next more info at</span>
</div><div data-line="36" class="highlight-line" data-highlighted="false">    <span class="token comment">// https://css-tricks.com/why-using-reduce-to-sequentially-resolve-promises-works/</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false">    <span class="token keyword">function</span> <span class="token function">stepThrough</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="38" class="highlight-line" data-highlighted="false">      <span class="token keyword">return</span> steps<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>previousPromise<span class="token punctuation">,</span> nextStep<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="39" class="highlight-line" data-highlighted="false">        <span class="token keyword">await</span> previousPromise<span class="token punctuation">;</span>
</div><div data-line="40" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span> <span class="token function">setUpPromise</span><span class="token punctuation">(</span>nextStep<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="41" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="42" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="43" class="highlight-line" data-highlighted="false">
</div><div data-line="44" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isRunning<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="45" class="highlight-line" data-highlighted="false">      <span class="token function">stepThrough</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="46" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="47" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>isRunning<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="48" class="highlight-line" data-highlighted="false">
</div><div data-line="49" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> setIsRunning <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="50" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#using-the-usestepinterval-hook"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="using-the-usestepinterval-hook">Using the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useStepInterval</code> Hook</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">In our component, we can now run our hook and have a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">ref</code> that catches the ping from our player service, which sets <code class="chakra-code css-t3qbto">isRunning</code> to <code class="chakra-code css-t3qbto">true</code>, starting the animation cycle.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-tsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">AnimationState</span> <span class="token operator">=</span> <span class="token string">&quot;tick&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;exit&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;enter&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;rest&quot;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token comment">// these steps can be inside the app if the values are dynamic</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token constant">ANIMATION_STEPS</span><span class="token operator">:</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> AnimationState<span class="token punctuation">;</span> delay<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&quot;tick&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&quot;exit&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&quot;enter&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">:</span> <span class="token number">1500</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&quot;rest&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">}</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> setIsRunning <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useStepInterval</span><span class="token generic class-name"><span class="token operator">&lt;</span>AnimationState<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">    <span class="token string">&quot;rest&quot;</span><span class="token punctuation">,</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token constant">ANIMATION_STEPS</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token comment">// this is the callback that receives the type of player status</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">  <span class="token comment">// that&#x27;s coming in and fires a our running state</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> playerCallback <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>playerStatus<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>playerStatus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">      <span class="token keyword">case</span> <span class="token string">&quot;ping&quot;</span><span class="token operator">:</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">        <span class="token function">setIsRunning</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">        <span class="token keyword">break</span><span class="token punctuation">;</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">
</div><div data-line="26" class="highlight-line" data-highlighted="false">      <span class="token keyword">case</span> <span class="token string">&quot;idle&quot;</span><span class="token operator">:</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">      <span class="token keyword">default</span><span class="token operator">:</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">        <span class="token keyword">break</span><span class="token punctuation">;</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we have an animation cycler that can be started from our component, and the best part is, we can have our component be functional 😀.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I definitely learned more about <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">refs</code> and how to work with promises during this feature. Hopefully, there will some more refactors to a functional component that can challenge other areas.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Animated SVG Water Pictorial Fraction in Svelte]]></title>
        <id>https://joelmturner.com/blog/svelte-animated-water-svg-pictorial-fraction</id>
        <link href="https://joelmturner.com/blog/svelte-animated-water-svg-pictorial-fraction"/>
        <updated>2021-01-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Create a pictorial fraction of water in SVG using Svelte. Allows for percentage progress so the image looks like it's filling or draining.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/svelte-animated-water-svg-pictorial-fraction">Animated SVG Water Pictorial Fraction in Svelte</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#what-were-building"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">What We&#x27;re Building</span></a></li>
<li class="css-1i5jedo"><a href="#why-sveltejs"><span class="chakra-text css-744h54">Why Svelte.js?</span></a></li>
<li class="css-1i5jedo"><a href="#the-pieces"><span class="chakra-text css-744h54">The Pieces</span></a></li>
<li class="css-1i5jedo"><a href="#fill-area"><span class="chakra-text css-744h54">Fill Area</span></a></li>
<li class="css-1i5jedo"><a href="#mask-area"><span class="chakra-text css-744h54">Mask Area</span></a></li>
<li class="css-1i5jedo"><a href="#fill"><span class="chakra-text css-744h54">Fill</span></a></li>
<li class="css-1i5jedo"><a href="#using-the-component"><span class="chakra-text css-744h54">Using the component</span></a></li>
<li class="css-1i5jedo"><a href="#conclusion"><span class="chakra-text css-744h54">Conclusion</span></a></li>
</ul>
<a href="#what-were-building"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="what-were-building">What We&#x27;re Building</h2></a>
<div data-testid="general-observer" class="mdx-embed"><div style="height:0;width:100%"></div></div>
<a href="#why-sveltejs"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="why-sveltejs">Why Svelte.js?</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I&#x27;ve been excited to check out <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://svelte.dev/">svelte.js</a> for a while and this winter break gave me some time to try it out. It seemed especially great as a way to run data vis in a light-weight way. This was a way to learn a little more about it and see I can make multiple components.</p>
<a href="#the-pieces"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="the-pieces">The Pieces</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The pictorial fraction is a combination of svg pieces that come together to show and mask elements.</p>
<a href="#fill-area"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="fill-area">Fill Area</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s create a new file and call it <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">PictorialFraction.svelte</code>. In here, we&#x27;ll set up our svg and add a rectangle with a color of your choosing. This will be the color that will show up in the droplet.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="PictorialFraction.svelte" class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>264.5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>264.5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>264.5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>264.5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#ff9900<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we can add some variables for width and height. In svelte, we export these in the script tag. We can also pass those variables into the elements.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">let</span> width<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> height<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#ff9900<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">💡 Svelte tip: we can use a shortcut to add those variables since they have the same name as the attributes. Instead of <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">&lt;svg width={width} /&gt;</code> we can use <code class="chakra-code css-t3qbto">&lt;svg width /&gt;</code>.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s position the rectangle using <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">transform: translate(0, 20px);</code>. This should allow us to <code class="chakra-code css-t3qbto">slide</code> the rectangle up using the y position, giving our mask the feeling that the water drop is filling up. We&#x27;re using the style attribute for transform rather than the <code class="chakra-code css-t3qbto">transform</code> attribute on <code class="chakra-code css-t3qbto">rect</code> because Safari doesn&#x27;t animate the attribute in the same way Chrome and Firefox do, making it choppy.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">let</span> width<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> height<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span>
    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token punctuation">{</span>`<span class="token property">transform</span><span class="token punctuation">:</span></span><span class="token punctuation">&quot;</span></span></span>
    <span class="token attr-name">translate(0,</span>
    <span class="token attr-name">20px);`}</span>
    <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#ff9900<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we&#x27;ll create the ripple shape that will be placed on top of our rectangle to give a &quot;fluid&quot; feel. For this, we&#x27;ll use a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">path</code> element and animate it with css.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>water<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M420 20.0047C441.5 19.6047 458.8 17.5047 471.1 15.5047C484.5 13.3047 497.6 10.3047 498.4 10.1047C514 6.50474 518 4.70474 528.5 2.70474C535.6 1.40474 546.4 -0.0952561 560 0.00474393V20.0047H420ZM420 20.0047C398.5 19.6047 381.2 17.5047 368.9 15.5047C355.5 13.3047 342.4 10.3047 341.6 10.1047C326 6.50474 322 4.70474 311.5 2.70474C304.3 1.40474 293.6 -0.0952561 280 0.00474393V20.0047H420ZM140 20.0047C118.5 19.6047 101.2 17.5047 88.9 15.5047C75.5 13.3047 62.4 10.3047 61.6 10.1047C46 6.50474 42 4.70474 31.5 2.70474C24.3 1.40474 13.6 -0.0952561 0 0.00474393V20.0047H140ZM140 20.0047C161.5 19.6047 178.8 17.5047 191.1 15.5047C204.5 13.3047 217.6 10.3047 218.4 10.1047C234 6.50474 238 4.70474 248.5 2.70474C255.6 1.40474 266.4 -0.0952561 280 0.00474393V20.0047H140Z<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">That creates the shape, and now we&#x27;ll position it to be on top of the rectangle. To do this we&#x27;ll need to know where the rectangle will be positioned, and we&#x27;ll wrap the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">path</code> in group that&#x27;s positioned based on <code class="chakra-code css-t3qbto">rect</code>&#x27;s y position.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">let</span> width<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> height<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span>
    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token punctuation">{</span>`<span class="token property">transform</span><span class="token punctuation">:</span></span><span class="token punctuation">&quot;</span></span></span>
    <span class="token attr-name">translate(0,</span>
    <span class="token attr-name">20px);`}</span>
    <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#ff9900<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>water-container<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token punctuation">{</span>`<span class="token property">transform</span><span class="token punctuation">:</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">translate(0,</span> <span class="token attr-name">0);`}</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>water<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M420 20.0047C441.5 19.6047 458.8 17.5047 471.1 15.5047C484.5 13.3047 497.6 10.3047 498.4 10.1047C514 6.50474 518 4.70474 528.5 2.70474C535.6 1.40474 546.4 -0.0952561 560 0.00474393V20.0047H420ZM420 20.0047C398.5 19.6047 381.2 17.5047 368.9 15.5047C355.5 13.3047 342.4 10.3047 341.6 10.1047C326 6.50474 322 4.70474 311.5 2.70474C304.3 1.40474 293.6 -0.0952561 280 0.00474393V20.0047H420ZM140 20.0047C118.5 19.6047 101.2 17.5047 88.9 15.5047C75.5 13.3047 62.4 10.3047 61.6 10.1047C46 6.50474 42 4.70474 31.5 2.70474C24.3 1.40474 13.6 -0.0952561 0 0.00474393V20.0047H140ZM140 20.0047C161.5 19.6047 178.8 17.5047 191.1 15.5047C204.5 13.3047 217.6 10.3047 218.4 10.1047C234 6.50474 238 4.70474 248.5 2.70474C255.6 1.40474 266.4 -0.0952561 280 0.00474393V20.0047H140Z<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="9" class="highlight-line" data-highlighted="true"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s add our styles to get the ripples animating in smooth way. To do this we can add a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">&lt;style&gt;</code> tag underneath our <code class="chakra-code css-t3qbto">&lt;script&gt;</code> tag.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">let</span> width<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> height<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">rect,</span>
<span class="token selector">  .water-container</span> <span class="token punctuation">{</span>
    <span class="token property">transition</span><span class="token punctuation">:</span> transform 500ms<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.water</span> <span class="token punctuation">{</span>
    <span class="token property">animation</span><span class="token punctuation">:</span> ripple 1.4s infinite linear<span class="token punctuation">;</span>
    <span class="token property">fill</span><span class="token punctuation">:</span> #ff9900<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token atrule"><span class="token rule">@keyframes</span> ripple</span> <span class="token punctuation">{</span>
    <span class="token selector">100%</span> <span class="token punctuation">{</span>
      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>-105%<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span>
    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token punctuation">{</span>`<span class="token property">transform</span><span class="token punctuation">:</span></span><span class="token punctuation">&quot;</span></span></span>
    <span class="token attr-name">translate(0,</span>
    <span class="token attr-name">20px);`}</span>
    <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#ff9900<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
</div><div data-line="7" class="highlight-line" data-highlighted="true">
</div><div data-line="8" class="highlight-line" data-highlighted="true">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>water-container<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token punctuation">{</span>`<span class="token property">transform</span><span class="token punctuation">:</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">translate(0,</span> <span class="token attr-name">0);`}</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>water<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M420 20.0047C441.5 19.6047 458.8 17.5047 471.1 15.5047C484.5 13.3047 497.6 10.3047 498.4 10.1047C514 6.50474 518 4.70474 528.5 2.70474C535.6 1.40474 546.4 -0.0952561 560 0.00474393V20.0047H420ZM420 20.0047C398.5 19.6047 381.2 17.5047 368.9 15.5047C355.5 13.3047 342.4 10.3047 341.6 10.1047C326 6.50474 322 4.70474 311.5 2.70474C304.3 1.40474 293.6 -0.0952561 280 0.00474393V20.0047H420ZM140 20.0047C118.5 19.6047 101.2 17.5047 88.9 15.5047C75.5 13.3047 62.4 10.3047 61.6 10.1047C46 6.50474 42 4.70474 31.5 2.70474C24.3 1.40474 13.6 -0.0952561 0 0.00474393V20.0047H140ZM140 20.0047C161.5 19.6047 178.8 17.5047 191.1 15.5047C204.5 13.3047 217.6 10.3047 218.4 10.1047C234 6.50474 238 4.70474 248.5 2.70474C255.6 1.40474 266.4 -0.0952561 280 0.00474393V20.0047H140Z<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</div><div data-line="10" class="highlight-line" data-highlighted="true">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="11" class="highlight-line" data-highlighted="true"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We declare a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">keyframes</code> animation and let <code class="chakra-code css-t3qbto">.water</code> leverage that in an infinite loop. We&#x27;re adding a transition to the rectangle and container for the ripple to make sure it slides up and down smoothly.</p>
<a href="#mask-area"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="mask-area">Mask Area</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we can work on the mask area which will give us the water drop shape. We&#x27;re going to use a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">clipPath</code> with a path shaped as a water droplet. We&#x27;ll apply the clipPath to a group that wraps the rectangle and ripple to mask out anything outside the water droplet shape.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We fill the droplet path with black to make the mask full opacity. We can then add another droplet of a different color so that we can have a different background color for our <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">empty</code> section.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="true">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>clipPath</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mask_shape<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="3" class="highlight-line" data-highlighted="true">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>
      <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M132.281 264.564c51.24 0 92.931-41.681 92.931-92.918 0-50.18-87.094-164.069-90.803-168.891L132.281 0l-2.128 2.773c-3.704 4.813-90.802 118.71-90.802 168.882.001 51.228 41.691 92.909 92.93 92.909z<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#000000<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</div><div data-line="4" class="highlight-line" data-highlighted="true">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>clipPath</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">
</div><div data-line="6" class="highlight-line" data-highlighted="true">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>
    <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M132.281 264.564c51.24 0 92.931-41.681 92.931-92.918 0-50.18-87.094-164.069-90.803-168.891L132.281 0l-2.128 2.773c-3.704 4.813-90.802 118.71-90.802 168.882.001 51.228 41.691 92.909 92.93 92.909z<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#555<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="true">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">clip-path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url(#mask_shape)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span>
      <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{width}<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{height}<span class="token punctuation">&quot;</span></span>
      <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token punctuation">{</span>`<span class="token property">transform</span><span class="token punctuation">:</span></span><span class="token punctuation">&quot;</span></span></span>
      <span class="token attr-name">translate(0,</span>
      <span class="token attr-name">20px);`}</span>
      <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#ff9900<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>water-container<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token punctuation">{</span>`<span class="token property">transform</span><span class="token punctuation">:</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">translate(0,</span> <span class="token attr-name">0);`}</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>water<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M420 20.0047C441.5 19.6047 458.8 17.5047 471.1 15.5047C484.5 13.3047 497.6 10.3047 498.4 10.1047C514 6.50474 518 4.70474 528.5 2.70474C535.6 1.40474 546.4 -0.0952561 560 0.00474393V20.0047H420ZM420 20.0047C398.5 19.6047 381.2 17.5047 368.9 15.5047C355.5 13.3047 342.4 10.3047 341.6 10.1047C326 6.50474 322 4.70474 311.5 2.70474C304.3 1.40474 293.6 -0.0952561 280 0.00474393V20.0047H420ZM140 20.0047C118.5 19.6047 101.2 17.5047 88.9 15.5047C75.5 13.3047 62.4 10.3047 61.6 10.1047C46 6.50474 42 4.70474 31.5 2.70474C24.3 1.40474 13.6 -0.0952561 0 0.00474393V20.0047H140ZM140 20.0047C161.5 19.6047 178.8 17.5047 191.1 15.5047C204.5 13.3047 217.6 10.3047 218.4 10.1047C234 6.50474 238 4.70474 248.5 2.70474C255.6 1.40474 266.4 -0.0952561 280 0.00474393V20.0047H140Z<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">/&gt;</span></span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="14" class="highlight-line" data-highlighted="true">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="15" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<a href="#fill"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="fill">Fill</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Cool, now that we have the mask and bar set up we can configure the logic for the filling of the droplet. For this we&#x27;ll create a variable of <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">ratio</code> and a <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://svelte.dev/tutorial/reactive-declarations">reactive declaration</a> that updates when props change. We&#x27;ll call our reactive declaration <code class="chakra-code css-t3qbto">offsetY</code> and it will be based on <code class="chakra-code css-t3qbto">ratio</code> and <code class="chakra-code css-t3qbto">height</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">let</span> width<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> height<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">let</span> ratio<span class="token punctuation">;</span>

  <span class="token comment">// offset should help the bar &quot;fill&quot; from the bottom</span>
  <span class="token literal-property property">$</span><span class="token operator">:</span> offsetY <span class="token operator">=</span> height <span class="token operator">-</span> height <span class="token operator">*</span> ratio<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we&#x27;ll pass that offset to the rectangle and ripple container, so they&#x27;ll be positioned together. If the ratio is zero, the y should be the negative height of the ripple path which is 19px.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{width}</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{height}</span> <span class="token attr-name">viewbox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#x27;</span>0 0 264 264<span class="token punctuation">&#x27;</span></span> <span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>clipPath</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#x27;</span>mask_shape<span class="token punctuation">&#x27;</span></span> <span class="token punctuation">&gt;</span></span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M132.281 264.564c51.24 0 92.931-41.681 92.931-92.918 0-50.18-87.094-164.069-90.803-168.891L132.281 0l-2.128 2.773c-3.704 4.813-90.802 118.71-90.802 168.882.001 51.228 41.691 92.909 92.93 92.909z<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#000000<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>clipPath</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M132.281 264.564c51.24 0 92.931-41.681 92.931-92.918 0-50.18-87.094-164.069-90.803-168.891L132.281 0l-2.128 2.773c-3.704 4.813-90.802 118.71-90.802 168.882.001 51.228 41.691 92.909 92.93 92.909z<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#555<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">clip-path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#x27;</span>url(#mask_shape)<span class="token punctuation">&#x27;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{width}</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{height}</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token value css language-css"><span class="token punctuation">{</span>`<span class="token property">transform</span><span class="token punctuation">:</span></span></span></span> <span class="token attr-name">translate(0,</span> <span class="token attr-name">${offsetY}px)`}</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#ff9900<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="true">    &lt;g class=&#x27;water-container&#x27; style={`transform: translate(0, ${ratio === 0 ? offsetY : offsetY - 19}px);`}&gt;
</div><div data-line="12" class="highlight-line" data-highlighted="false">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#x27;</span>water<span class="token punctuation">&#x27;</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M420 20.0047C441.5 19.6047 458.8 17.5047 471.1 15.5047C484.5 13.3047 497.6 10.3047 498.4 10.1047C514 6.50474 518 4.70474 528.5 2.70474C535.6 1.40474 546.4 -0.0952561 560 0.00474393V20.0047H420ZM420 20.0047C398.5 19.6047 381.2 17.5047 368.9 15.5047C355.5 13.3047 342.4 10.3047 341.6 10.1047C326 6.50474 322 4.70474 311.5 2.70474C304.3 1.40474 293.6 -0.0952561 280 0.00474393V20.0047H420ZM140 20.0047C118.5 19.6047 101.2 17.5047 88.9 15.5047C75.5 13.3047 62.4 10.3047 61.6 10.1047C46 6.50474 42 4.70474 31.5 2.70474C24.3 1.40474 13.6 -0.0952561 0 0.00474393V20.0047H140ZM140 20.0047C161.5 19.6047 178.8 17.5047 191.1 15.5047C204.5 13.3047 217.6 10.3047 218.4 10.1047C234 6.50474 238 4.70474 248.5 2.70474C255.6 1.40474 266.4 -0.0952561 280 0.00474393V20.0047H140Z<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="15" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<a href="#using-the-component"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="using-the-component">Using the component</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">To use this component we import it and pass it our width, height and ratio. Let&#x27;s give it a height and width of 264.5px and a ratio of 0.5 (50%). Update the ratio to see the droplet fill or drain smoothly.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code data-filename="App.svelte" class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> PictorialFraction <span class="token keyword">from</span> <span class="token string">&#x27;./PictorialFraction.svelte&#x27;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PictorialFraction</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{264.5}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{264.5}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ratio</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{0.5}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<a href="#conclusion"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="conclusion">Conclusion</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Thanks for following along! We now have a droplet component that we can use in our svelte app. We can add ways to control the ratio and make it more interactive. To add buttons to control the increase/decrease, check out the example on <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://codesandbox.io/s/svelte-svg-pictorial-fraction-f1hv2?from-embed=&amp;file=/App.svelte">codesandbox</a></p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create a Single Line Chart in React with @vx]]></title>
        <id>https://joelmturner.com/blog/create-a-single-line-chart-in-react-with-@vx</id>
        <link href="https://joelmturner.com/blog/create-a-single-line-chart-in-react-with-@vx"/>
        <updated>2020-07-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is a simple example of a single line chart built with the @vx charting primitives. We can use this to as a base to add multiple lines to our chart.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/create-a-single-line-chart-in-react-with-@vx">Create a Single Line Chart in React with @vx</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css s0fpqi">.css-s0fpqi{margin-bottom:2px;-webkit-padding-start:3px;padding-inline-start:3px;-webkit-padding-end:3px;padding-inline-end:3px;padding-top:0.025px;padding-bottom:0.25px;background:gray.100;border-left-style:solid;border-left-width:5px;border-left-color:gray.300;}</style><div class="css-s0fpqi"><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><em>Update: October 2020</em> - @vx is now <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/airbnb/visx">@visx</a> and is at 1.0. You can read about <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://medium.com/airbnb-engineering/introducing-visx-from-airbnb-fd6155ac4658">the update from Airbnb Engineering</a>. As of this update, the api is all the same, and it has TypeScript support 👍.</p></div>
<a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#what-were-building-tldr"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">What We&#x27;re Building TL;DR</span></a></li>
<li class="css-1i5jedo"><a href="#requirements"><span class="chakra-text css-744h54">Requirements</span></a></li>
<li class="css-1i5jedo"><a href="#packages"><span class="chakra-text css-744h54">Packages</span></a></li>
<li class="css-1i5jedo"><a href="#data"><span class="chakra-text css-744h54">Data</span></a></li>
<li class="css-1i5jedo"><a href="#scales"><span class="chakra-text css-744h54">Scales</span></a></li>
<li class="css-1i5jedo"><a href="#building-our-line-chart"><span class="chakra-text css-744h54">Building our Line Chart</span></a></li>
<li class="css-1i5jedo"><a href="#bonus"><span class="chakra-text css-744h54">Bonus</span></a></li>
</ul>
<a href="#what-were-building-tldr"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="what-were-building-tldr">What We&#x27;re Building TL;DR</h2></a>
<div data-testid="general-observer" class="mdx-embed"><div style="height:0;width:100%"></div></div>
<a href="#requirements"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="requirements">Requirements</h2></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Display time along the x-axis</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Display metrics along the y-axis</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Show each data point on line</li>
</ul>
<a href="#packages"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="packages">Packages</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s start by getting the packages we need from @vx. We&#x27;ll need shapes, scale, axis, gradient (easy background color), and some mock data to get started.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false">  <span class="token function">yarn</span> <span class="token function">add</span> @vx/shapes @vx/group @vx/scale @vx/axis @vx/curve @vx/gradient @vx/text
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Or</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false">  <span class="token function">npm</span> <span class="token function">install</span> @vx/shapes @vx/group @vx/scale @vx/axis @vx/curve @vx/gradient @vx/text <span class="token parameter variable">--save</span>
</div></code></pre>
<a href="#data"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="data">Data</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now that we have our packages we can start stubbing out our data. We&#x27;re going to use some mock data to get started so feel free to create your own or use this data set.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> defaultData1 <span class="token operator">=</span> <span class="token punctuation">[</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">miles</span><span class="token operator">:</span> <span class="token number">5.6</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token number">1595228400000</span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">miles</span><span class="token operator">:</span> <span class="token number">3.2</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token number">1595314800000</span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">miles</span><span class="token operator">:</span> <span class="token number">7.9</span><span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token number">1595401200000</span><span class="token punctuation">,</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">miles</span><span class="token operator">:</span> <span class="token number">4.1</span><span class="token punctuation">,</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token number">1595487600000</span><span class="token punctuation">,</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">miles</span><span class="token operator">:</span> <span class="token number">9.3</span><span class="token punctuation">,</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token number">1595574000000</span><span class="token punctuation">,</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false"><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now that we have the shape of our data we can add some helper functions that will access those items. This will help us add the date across the x-axis and the miles along the y-axis. We&#x27;ll see how these come into play a little later.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment">// accessors return the miles and date of that data item</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>miles<span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>date<span class="token punctuation">;</span>
</div></code></pre>
<a href="#scales"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="scales">Scales</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We can now define the max height and max width that we would like our chart to be. Our component will take height and width as props and then we can add a little padding. This will help us as we define our scales for this chart.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment">// bounds</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> xMax <span class="token operator">=</span> width <span class="token operator">-</span> <span class="token number">120</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> yMax <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The scales are where the magic really happen. It all comes down to <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">domain</code> and <code class="chakra-code css-t3qbto">range</code>. The general rule of thumb based on my understanding is that <code class="chakra-code css-t3qbto">domain</code> is the lowest and highest data points. The <code class="chakra-code css-t3qbto">range</code> is the pixel range we would like to plot these data points on.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">In our scales below we can see that <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">range</code> (<code class="chakra-code css-t3qbto">rangeRound</code>) is from <code class="chakra-code css-t3qbto">0</code> to <code class="chakra-code css-t3qbto">xMax</code> which is the height bound of our chart. @vx gives us a helper, <code class="chakra-code css-t3qbto">rangeRound</code>, that prettifies the numbers.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">domain</code> is an array of all data points which resolves to lowest (4.1) and highest (9.3) of the data set.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> xScale <span class="token operator">=</span> <span class="token function">scaleTime</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> xMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> yScale <span class="token operator">=</span> <span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> yMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<a href="#building-our-line-chart"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="building-our-line-chart">Building our Line Chart</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we can start building the component. Let&#x27;s start by setting up the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">svg</code> that will hold our line and axes.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> Group <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/group&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> scaleTime<span class="token punctuation">,</span> scaleLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/scale&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token comment">// dimensions</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token comment">// accessors</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>miles<span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">LineChart</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token comment">// bounds</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xMax <span class="token operator">=</span> width <span class="token operator">-</span> <span class="token number">120</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yMax <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xScale <span class="token operator">=</span> <span class="token function">scaleTime</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> xMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">
</div><div data-line="23" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yScale <span class="token operator">=</span> <span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> yMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">
</div><div data-line="28" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>height<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="30" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Group</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">}</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">65</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Group</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="31" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="34" class="highlight-line" data-highlighted="false">
</div><div data-line="35" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> LineChart<span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Looks good. The first thing we&#x27;ll add is the y-axis. To do this we use <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://vx-demo.now.sh/docs/axis#AxisLeft"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">AxisLeft</code></a> from @vx. We need to pass it our yScale and we&#x27;ll give it a few other props for styling. The <code class="chakra-code css-t3qbto">numTicks</code> limits the number of values shown on the y-axis and <code class="chakra-code css-t3qbto">label</code> is what will display along the axis.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Then we&#x27;ll add the <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://vx-demo.now.sh/docs/axis#AxisBottom"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">AxisBottom</code></a> that has similar props to <code class="chakra-code css-t3qbto">AxisLeft</code>. The <code class="chakra-code css-t3qbto">top</code> is where it should start vertically from the top, which is the chart height in this case. The <code class="chakra-code css-t3qbto">labelOffset</code> prop dictates how much space is in between the ticks and the axis label. It should look like this:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> Group <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vx/group&quot;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> scaleTime<span class="token punctuation">,</span> scaleLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vx/scale&quot;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="true"><span class="token keyword">import</span> <span class="token punctuation">{</span> AxisLeft<span class="token punctuation">,</span> AxisBottom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vx/axis&quot;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Group</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">}</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">65</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="9" class="highlight-line" data-highlighted="true"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisLeft</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yScale<span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Miles<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="10" class="highlight-line" data-highlighted="true"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisBottom</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScale<span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Day<span class="token punctuation">&quot;</span></span> <span class="token attr-name">labelOffset</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yMax<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Group</span></span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Display time along the x-axis</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Display metrics along the y-axis</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we can add the line to the chart using <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">LinePath</code> from <code class="chakra-code css-t3qbto">@vx/shapes</code> and we&#x27;ll pass it <code class="chakra-code css-t3qbto">curveLinear</code> from <code class="chakra-code css-t3qbto">@vx/curve</code> to dictate its shape.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> Group <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vx/group&quot;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> scaleTime<span class="token punctuation">,</span> scaleLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vx/scale&quot;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> AxisLeft<span class="token punctuation">,</span> AxisBottom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vx/axis&quot;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="true"><span class="token keyword">import</span> <span class="token punctuation">{</span> LinePath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vx/shape&quot;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true"><span class="token keyword">import</span> <span class="token punctuation">{</span> curveLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vx/curve&quot;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token operator">...</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Group</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">}</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">65</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisLeft</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yScale<span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Miles<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisBottom</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScale<span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Day<span class="token punctuation">&quot;</span></span> <span class="token attr-name">labelOffset</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yMax<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="13" class="highlight-line" data-highlighted="true"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LinePath</span></span>
    <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">curve</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>curveLinear<span class="token punctuation">}</span></span>
    <span class="token attr-name">x</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">xScale</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">y</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">yScale</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">strokeWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1.5</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="14" class="highlight-line" data-highlighted="true"><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Group</span></span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">It&#x27;s looking like a nice, one-line chart now. We might want to add some dots to represent the data points. To do that we&#x27;ll map over the data items and use the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">circle</code> element positioned using each item&#x27;s points.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Group</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">}</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">65</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisLeft</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yScale<span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Miles<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisBottom</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScale<span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Day<span class="token punctuation">&quot;</span></span> <span class="token attr-name">labelOffset</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yMax<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="4" class="highlight-line" data-highlighted="true"><span class="token plain-text">  </span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">point<span class="token punctuation">,</span> pointIndex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
</div><div data-line="5" class="highlight-line" data-highlighted="true">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span>
      <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>pointIndex<span class="token punctuation">}</span></span>
      <span class="token attr-name">r</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">cx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">xScale</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">cy</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">yScale</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">fillOpacity</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0.5</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/&gt;</span></span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="7" class="highlight-line" data-highlighted="true"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LinePath</span></span>
    <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">curve</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>curveLinear<span class="token punctuation">}</span></span>
    <span class="token attr-name">x</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">xScale</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">y</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">yScale</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">strokeWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1.5</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="8" class="highlight-line" data-highlighted="true"><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Group</span></span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Show each data point on line</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Awesome, we fulfilled all of our requirements for this one-line chart. Here is all the code together.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> Group <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/group&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> scaleTime<span class="token punctuation">,</span> scaleLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/scale&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> AxisLeft<span class="token punctuation">,</span> AxisBottom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/axis&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> LinePath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/shape&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> curveLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/curve&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token comment">// dimensions</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token comment">// accessors</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>miles<span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">
</div><div data-line="16" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">LineChart</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token comment">// bounds</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xMax <span class="token operator">=</span> width <span class="token operator">-</span> <span class="token number">120</span><span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yMax <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xScale <span class="token operator">=</span> <span class="token function">scaleTime</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> xMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">
</div><div data-line="26" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yScale <span class="token operator">=</span> <span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> yMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">
</div><div data-line="31" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>height<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="33" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Group</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">}</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">65</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="34" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisLeft</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yScale<span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Miles<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="35" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisBottom</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScale<span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Day<span class="token punctuation">&quot;</span></span> <span class="token attr-name">labelOffset</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yMax<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="36" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">point<span class="token punctuation">,</span> pointIndex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span>
            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>pointIndex<span class="token punctuation">}</span></span>
            <span class="token attr-name">r</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">cx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">xScale</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">cy</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">yScale</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">fillOpacity</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0.5</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">/&gt;</span></span>
</div><div data-line="38" class="highlight-line" data-highlighted="false">        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="39" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LinePath</span></span>
          <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
          <span class="token attr-name">curve</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>curveLinear<span class="token punctuation">}</span></span>
          <span class="token attr-name">x</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">xScale</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">y</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">yScale</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">strokeWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1.5</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="40" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Group</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="41" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="42" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="43" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="44" class="highlight-line" data-highlighted="false">
</div><div data-line="45" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> LineChart<span class="token punctuation">;</span>
</div></code></pre>
<a href="#bonus"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="bonus">Bonus</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">For better sizing/resizing we can use a resize observer hook in our component. I like to use the package <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">use-resize-observer</code> for this. Let&#x27;s see how we can use it in our component.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> Group <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/group&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> scaleTime<span class="token punctuation">,</span> scaleLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/scale&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> AxisLeft<span class="token punctuation">,</span> AxisBottom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/axis&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> LinePath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/shape&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> curveLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/curve&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="true"><span class="token keyword">import</span> useResizeObserver <span class="token keyword">from</span> <span class="token string">&#x27;use-resize-observer&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token comment">// dimensions</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token comment">// accessors</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>miles<span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">
</div><div data-line="17" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">LineChart</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="18" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useResizeObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">
</div><div data-line="20" class="highlight-line" data-highlighted="false">  <span class="token comment">// bounds</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xMax <span class="token operator">=</span> width <span class="token operator">-</span> <span class="token number">120</span><span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yMax <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">
</div><div data-line="24" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xScale <span class="token operator">=</span> <span class="token function">scaleTime</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> xMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">
</div><div data-line="29" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yScale <span class="token operator">=</span> <span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> yMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">
</div><div data-line="34" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="35" class="highlight-line" data-highlighted="true">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#x27;100%&#x27;</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#x27;100%&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="36" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>height<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="37" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Group</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">}</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">65</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="38" class="highlight-line" data-highlighted="false"><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisLeft</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yScale<span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Miles<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="39" class="highlight-line" data-highlighted="false"><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisBottom</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScale<span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Day<span class="token punctuation">&quot;</span></span> <span class="token attr-name">labelOffset</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yMax<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="40" class="highlight-line" data-highlighted="false"><span class="token plain-text">          </span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">point<span class="token punctuation">,</span> pointIndex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
</div><div data-line="41" class="highlight-line" data-highlighted="false">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span>
              <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>pointIndex<span class="token punctuation">}</span></span>
              <span class="token attr-name">r</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span>
              <span class="token attr-name">cx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">xScale</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
              <span class="token attr-name">cy</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">yScale</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
              <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">fillOpacity</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0.5</span><span class="token punctuation">}</span></span>
            <span class="token punctuation">/&gt;</span></span>
</div><div data-line="42" class="highlight-line" data-highlighted="false">          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="43" class="highlight-line" data-highlighted="false"><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LinePath</span></span>
            <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
            <span class="token attr-name">curve</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>curveLinear<span class="token punctuation">}</span></span>
            <span class="token attr-name">x</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">xScale</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">y</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">yScale</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#222222<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">strokeWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1.5</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="44" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Group</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="45" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="46" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="47" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="48" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="49" class="highlight-line" data-highlighted="false">
</div><div data-line="50" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> LineChart<span class="token punctuation">;</span>
</div></code></pre>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Beginning Web Accessibility in React]]></title>
        <id>https://joelmturner.com/blog/beginning-web-accessibility-react</id>
        <link href="https://joelmturner.com/blog/beginning-web-accessibility-react"/>
        <updated>2020-01-13T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/beginning-web-accessibility-react">Beginning Web Accessibility in React</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#linting-rules-for-a11y"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">Linting Rules for a11y</span></a></li>
<li class="css-1i5jedo"><a href="#wai-aria"><span class="chakra-text css-744h54">WAI-ARIA</span></a>
<ul class="css-dyc0h3">
<li class="css-1i5jedo"><a href="#roles"><span class="chakra-text css-744h54">Roles</span></a></li>
<li class="css-1i5jedo"><a href="#properties"><span class="chakra-text css-744h54">Properties</span></a></li>
<li class="css-1i5jedo"><a href="#states"><span class="chakra-text css-744h54">States</span></a></li>
</ul>
</li>
<li class="css-1i5jedo"><a href="#tabindex"><span class="chakra-text css-744h54"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">tabIndex</code></span></a></li>
<li class="css-1i5jedo"><a href="#onkeypress-handler"><span class="chakra-text css-744h54"><code class="chakra-code css-t3qbto">onKeypress</code> handler</span></a></li>
<li class="css-1i5jedo"><a href="#conclusion"><span class="chakra-text css-744h54">Conclusion</span></a></li>
</ul>
<a href="#linting-rules-for-a11y"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="linting-rules-for-a11y">Linting Rules for a11y</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">One of the best ways to get some useful suggestions is to add the plugin, <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.npmjs.com/package/eslint-plugin-jsx-a11y"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">eslint-plugin-jsx-a11y</code></a> to your project. After I got it installed my editor lit up like New York City at night. Whew, I had some work to do.</p>
<a href="#wai-aria"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="wai-aria">WAI-ARIA</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">WAI-ARIA is explained well from <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/WAI-ARIA_basics">MDN</a>:</p>
<style data-emotion="css 1a90kdi">.css-1a90kdi{width:98%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;overflow:hidden;margin-top:4px;}.css-1a90kdi >*:first-of-type{margin-top:0;margin-left:8px;}</style><div role="alert" class="chakra-alert css-1a90kdi">
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">WAI-ARIA (Web Accessibility Initiative - Accessible Rich Internet Applications) is a specification written by the W3C, defining a set of additional HTML attributes that can be applied to elements to provide additional semantics and improve accessibility wherever it is lacking.</p>
</div>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The three main features are Roles, Properties, and States.</p>
<a href="#roles"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="roles">Roles</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">It&#x27;s best to use semantic elements for desired actions. A good example is to use the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">button</code> element for a user action. If we are using a different element to perform the role of a button we can use a role to help out. An example might be an <code class="chakra-code css-t3qbto">svg</code> icon with an <code class="chakra-code css-t3qbto">onClick</code> method.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 128 128<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token punctuation">{</span>myOnClickFn<span class="token punctuation">}</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M 10 10 H 90 V 90 H 10 L 10 10<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Having a role of button tells the screen reader that the intention of this icon is to be a button.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s a list from <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles">MDN of all the ARIA roles</a>.</p>
<a href="#properties"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="properties">Properties</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Properties let us give an element extra meaning if needed. A common example is in a form input. We may have a visual indicator to show that an <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">input</code> is required. Now we can add a data attribute of <code class="chakra-code css-t3qbto">aria-required=&quot;true&quot;</code> to let the user know that the input needs to be valid.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token special-attr"><span class="token attr-name">onSubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token punctuation">{</span>onSubmit<span class="token punctuation">}</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldEmail<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldEmail<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-required</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<a href="#states"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="states">States</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is much like states in javascript. We may have a disabled input that will become enabled after validation of a previous field. We can specify the disabled state with <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">aria-disabled=&quot;true&quot;</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-html css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token special-attr"><span class="token attr-name">onSubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token punctuation">{</span>onSubmit<span class="token punctuation">}</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldEmail<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldEmail<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-required</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldSubscribe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Subscribe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fieldSubscribe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<a href="#tabindex"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="tabindex"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">tabIndex</code></h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is one that I vaguely knew about. It turns out that there are three types of values that it can take.</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">tabindex=&quot;-1&quot;</code> negative one or less allows elements to get the focus programmatically instead of through sequential keyboard navigation</li>
<li class="css-1i5jedo"><code class="chakra-code css-t3qbto">tabindex=&quot;0&quot;</code> zero allows non tabbable elements to become tabbable in sequential order by adding focus to them in the document&#x27;s source order</li>
<li class="css-1i5jedo"><code class="chakra-code css-t3qbto">tabindex=&quot;1&quot;</code> one or more makes the elements tabbable in the specific index order represented by this number</li>
</ul>
<a href="#onkeypress-handler"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="onkeypress-handler"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">onKeypress</code> handler</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">For all the user clickable elements we can also provide an onKeyPress that handles an <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">Enter</code> or <code class="chakra-code css-t3qbto">Return</code> key on a clickable element. We can use a function to check for that keypress and if it&#x27;s is the key we&#x27;re looking for we can pass the event to the <code class="chakra-code css-t3qbto">onClick</code> function.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s a great snippet from <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://dev.to/johnlukeg/make-react-navigation-accessible-again">John Luke Garofalo&#x27;s post about React accessibility</a>:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment">// attach to a onKeyPress to handle Enter keyboard</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token comment">// presses in the same way as onClicks</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">handleEnterKeyPress</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">onClick</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&#x27;Enter&#x27;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token function">onClick</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s that snippet in TypeScript:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">HandleKeyPress</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  onClick<span class="token operator">:</span> React<span class="token punctuation">.</span>EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>MouseEvent <span class="token operator">|</span> React<span class="token punctuation">.</span>KeyboardEvent<span class="token operator">&gt;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> React<span class="token punctuation">.</span>KeyboardEventHandler<span class="token operator">&lt;</span>HTMLElement <span class="token operator">|</span> SVGElement<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token comment">// attach to a onKeyPress to handle Enter keyboard clicks in the same way as onClicks</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">const</span> handleEnterKeyPress<span class="token operator">:</span> <span class="token function-variable function">HandleKeyPress</span> <span class="token operator">=</span> <span class="token punctuation">(</span>onClick<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&#x27;Enter&#x27;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token function">onClick</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div></code></pre>
<a href="#conclusion"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="conclusion">Conclusion</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Hopefully this helps you dip your toes into the accessibility pond. I have a lot more to learn and implement but I feel like this was a good start. I would love to hear your resources if you have started down this road as well.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Front-End Checklist for Ticket Completion]]></title>
        <id>https://joelmturner.com/blog/front-end-ticket-checklist</id>
        <link href="https://joelmturner.com/blog/front-end-ticket-checklist"/>
        <updated>2020-01-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A checklist that helps me stay organized and on task when working through various tickets from multiple projects.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/front-end-ticket-checklist">Front-End Checklist for Ticket Completion</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#tldr-heres-the-list-without-description"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">TL;DR: Here&#x27;s the list without description:</span></a></li>
<li class="css-1i5jedo"><a href="#my-current-checklist"><span class="chakra-text css-744h54">My Current Checklist</span></a>
<ul class="css-dyc0h3">
<li class="css-1i5jedo"><a href="#clean-up-debuggertraceetc"><span class="chakra-text css-744h54">Clean up debugger/trace/etc</span></a></li>
<li class="css-1i5jedo"><a href="#clean-up-logs"><span class="chakra-text css-744h54">Clean up logs</span></a></li>
<li class="css-1i5jedo"><a href="#search-for-todos-in-code"><span class="chakra-text css-744h54">Search for TODO’s in code</span></a></li>
<li class="css-1i5jedo"><a href="#refactor-where-needed"><span class="chakra-text css-744h54">Refactor where needed</span></a></li>
<li class="css-1i5jedo"><a href="#write-tests"><span class="chakra-text css-744h54">Write tests</span></a></li>
<li class="css-1i5jedo"><a href="#make-sure-test-coverage-hasnt-gone-down"><span class="chakra-text css-744h54">Make sure test coverage hasn’t gone down</span></a></li>
<li class="css-1i5jedo"><a href="#add-translate-functions"><span class="chakra-text css-744h54">Add translate functions</span></a></li>
<li class="css-1i5jedo"><a href="#verify-on-published-url"><span class="chakra-text css-744h54">Verify on published URL</span></a></li>
<li class="css-1i5jedo"><a href="#verify-in-our-builder-ui"><span class="chakra-text css-744h54">Verify in our builder UI</span></a></li>
<li class="css-1i5jedo"><a href="#update-jira"><span class="chakra-text css-744h54">Update Jira</span></a></li>
<li class="css-1i5jedo"><a href="#notify-pms"><span class="chakra-text css-744h54">Notify PMs</span></a></li>
<li class="css-1i5jedo"><a href="#create-mr"><span class="chakra-text css-744h54">Create MR</span></a></li>
</ul>
</li>
<li class="css-1i5jedo"><a href="#checklists-ftw"><span class="chakra-text css-744h54">Checklists FTW</span></a></li>
</ul>
<a href="#tldr-heres-the-list-without-description"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="tldr-heres-the-list-without-description">TL;DR: Here&#x27;s the list without description:</h2></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Clean up debugger/trace/etc</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Clean up logs</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Search for TODO’s in code</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Refactor where needed</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Write tests</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Make sure test coverage hasn’t gone down</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Add translate functions</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Verify on published url</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Verify in builder</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Update Jira</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Notify PMs</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Create MR</li>
</ul>
<a href="#my-current-checklist"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="my-current-checklist">My Current Checklist</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I currently have these as tasks in <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://todoist.com/">Todoist</a> where I can duplicate for each new ticket. Sometimes I’ll create sub-tasks on a few of these if there is more to be done on that specific issue.</p>
<a href="#clean-up-debuggertraceetc"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="clean-up-debuggertraceetc">Clean up debugger/trace/etc</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">A reminder to delete any <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">debugger;</code> or <code class="chakra-code css-t3qbto">trace()</code> (from <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://mobx.js.org/README.html">MobX</a>) that are left in the code.</p>
<a href="#clean-up-logs"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="clean-up-logs">Clean up logs</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Remove any <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">console.log</code>s and <code class="chakra-code css-t3qbto">console.group</code>s that may still be there.</p>
<a href="#search-for-todos-in-code"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="search-for-todos-in-code">Search for TODO’s in code</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I like to leave myself notes as I’m working through a feature or bug. They help me remember to resolve any of the todos that are left.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I usually initial my todos TODO JT so I can find them more easily. <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree">Todo Tree</a> is a great VS Code extension that has been a big help for this.</p>
<a href="#refactor-where-needed"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="refactor-where-needed">Refactor where needed</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">There is inevitably some back and forth about how a feature or bug should be solved so they may be some prototype code that can be refactored.</p>
<a href="#write-tests"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="write-tests">Write tests</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I could write these tests upfront but I haven’t gotten into that habit yet. I try to make sure I catch the cases we need to cover based on newly added or deleted code.</p>
<a href="#make-sure-test-coverage-hasnt-gone-down"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="make-sure-test-coverage-hasnt-gone-down">Make sure test coverage hasn’t gone down</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This reminds me to run test coverage and make sure I haven’t just dropped our coverage.</p>
<a href="#add-translate-functions"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="add-translate-functions">Add translate functions</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This runs a scanner to add any new UI text to our language files for translation. This will eventually be part of the CI but for now, I need to remind myself.</p>
<a href="#verify-on-published-url"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="verify-on-published-url">Verify on published URL</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We publish the URLs of completed visualizations. It’s important to make sure that nothing regressed on the running URL and the feature is working correctly.</p>
<a href="#verify-in-our-builder-ui"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="verify-in-our-builder-ui">Verify in our builder UI</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is our UI where customers build their visualizations. This is to make sure the fix/feature is working as expected. We also need to make sure it didn’t cause any regressions.</p>
<a href="#update-jira"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="update-jira">Update Jira</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Make sure the ticket get’s moved through the Jira columns. This signifies QA that it’s ready to be tested.</p>
<a href="#notify-pms"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="notify-pms">Notify PMs</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let the project manager and product manager know that the ticket is complete and ready for their review.</p>
<a href="#create-mr"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="create-mr">Create MR</h3></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Reminder to create a Merge Request so I can start getting feedback from code reviews.</p>
<a href="#checklists-ftw"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="checklists-ftw">Checklists FTW</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This checklist has helped me be more consistent with my contributions. I would love to hear how others are using checklists or workflows through individual tickets.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Productivity Practices for Front End Development]]></title>
        <id>https://joelmturner.com/blog/productivity-practices-front-end-development</id>
        <link href="https://joelmturner.com/blog/productivity-practices-front-end-development"/>
        <updated>2019-09-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Tools and tips that I use daily to help me achieve my dev and personal goals and enhance my productivity.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/productivity-practices-front-end-development">Productivity Practices for Front End Development</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#window-management"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">Window Management</span></a></li>
<li class="css-1i5jedo"><a href="#spaces"><span class="chakra-text css-744h54">Spaces</span></a>
<ul class="css-dyc0h3">
<li class="css-1i5jedo"><a href="#screen-1-just-one-space"><span class="chakra-text css-744h54">Screen 1 (just one space)</span></a></li>
<li class="css-1i5jedo"><a href="#screen-2-6-spaces"><span class="chakra-text css-744h54">Screen 2 (6 spaces)</span></a></li>
</ul>
</li>
<li class="css-1i5jedo"><a href="#app-launching"><span class="chakra-text css-744h54">App Launching</span></a></li>
<li class="css-1i5jedo"><a href="#clipboard-history"><span class="chakra-text css-744h54">Clipboard History</span></a></li>
<li class="css-1i5jedo"><a href="#expanding-text"><span class="chakra-text css-744h54">Expanding Text</span></a></li>
<li class="css-1i5jedo"><a href="#task-list"><span class="chakra-text css-744h54">Task List</span></a></li>
<li class="css-1i5jedo"><a href="#zshbash-alias"><span class="chakra-text css-744h54">ZSH/Bash Alias</span></a></li>
</ul>
<a href="#window-management"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="window-management">Window Management</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I&#x27;m using <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.folivora.ai/">Better Touch Tools (BTT)</a> to snap my windows to specific areas on my screens. BTT as the ability to snap a window to a quarter or half of the screen by dressing the window to the corner or edge of the screen.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is incredibly helpful for diffing or creating a dashboard. I use the custom window size and position for a few of my windows. Since I use a 2 screen set up I usually have my code (VS Code), terminal (iTerm2), and dev tools on the larger screen.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/image/upload/q_80/v1569567747/code-screen.png" alt="vs code, dev tools, iterm2 on screen"/></p>
<a href="#spaces"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="spaces">Spaces</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I position the rest of my apps on my laptop spaces. I&#x27;ve tried having all the apps in the same space and just using the app switcher to toggle between the apps but it felt a little too unorganized for me.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I now have a screen for certain jobs. Here&#x27;s the breakdown of my current setup by space.</p>
<a href="#screen-1-just-one-space"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="screen-1-just-one-space">Screen 1 (just one space)</h3></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ol class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo">Code
<ol class="css-dyc0h3">
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://code.visualstudio.com/">VS Code</a></li>
<li class="css-1i5jedo">dev tools (<a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://developers.google.com/web/tools/chrome-devtools">Chrome</a>, <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://developer.mozilla.org/en-US/docs/Tools">Firefox</a>)</li>
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.iterm2.com/">iTerm2</a></li>
</ol>
</li>
</ol>
<a href="#screen-2-6-spaces"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="screen-2-6-spaces">Screen 2 (6 spaces)</h3></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ol class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo">Personal design (<a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.figma.com">Figma</a>)</li>
<li class="css-1i5jedo">Personal
<ol class="css-dyc0h3">
<li class="css-1i5jedo">Personal project dev browser</li>
<li class="css-1i5jedo">Music (<a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.spotify.com">Spotify</a>)</li>
</ol>
</li>
<li class="css-1i5jedo">Communication/Tracking
<ol class="css-dyc0h3">
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://slack.com/">Slack</a></li>
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://todoist.com/r/joelmturner_rooqqg">Todoist</a></li>
</ol>
</li>
<li class="css-1i5jedo">Git manager (<a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.gitkraken.com/invite/78cNgZYg">GitKraken</a>)</li>
<li class="css-1i5jedo">Work project dev browsers</li>
<li class="css-1i5jedo">Work design (Slack, <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.abstract.com/">Abstract</a>)</li>
</ol>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I love that everything has its place and I can just swipe to that space or use the app switcher for quick access. After about a week of using this setup I knew where everything was without thinking about it. That had sped up my project speed by quite a bit while reducing my mental fatigue.</p>
<a href="#app-launching"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="app-launching"><a href="#app-launching"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">App Launching</span></a></h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Alfred is my go to for app launching and switching. It might be one of the most used apps on my computer currently.</p>
<a href="#clipboard-history"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="clipboard-history">Clipboard History</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is one of my favorite parts of Alfred. I use the history all the time. Sometimes I use it to save my text in a form so I don&#x27;t lose it on some save glitch. Being able to grab multiple pieces from a document and paste each one. It&#x27;s nice to be able to go back and grab something that I didn&#x27;t know that I would need again but it&#x27;s there in the history.</p>
<a href="#expanding-text"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="expanding-text">Expanding Text</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Expanding text through keyboard shortcuts can speed up so many redundant tasks.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Until recently I was using TextExpander 4 (just before they moved to a subscription model) and have moved all my shortcuts to Alfred. Since I was already using and loving Alfred for its other powerful features I decided to go all in with it for snippets. One of the expansions that I use the most is for <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">console.log()</code>. I can type <code class="chakra-code css-t3qbto">2log</code> and it will prompt me for input and fill in <code class="chakra-code css-t3qbto">console.log(&quot;prompText&quot;, prompText)</code>.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Simple snippets are a breeze with Alfred. Form snippets are a little bit of work but still easy enough.</p>
<a href="#task-list"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="task-list">Task List</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I use Todoist for my task list. It is one of my most valuable tools in my tool belt. I love that it is seamless on all my devices and it&#x27;s set up well for <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://gettingthingsdone.com/">GTD</a>. I usually dump/collect my ideas, todos, and projects into the inbox and sort them out later when I&#x27;m in the project management zone.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">One feature I use quite a bit is the template copy. When I get assigned a new ticket I copy my ticket checklist and rename it with the ticket number. This helps me make sure that I get everything done before handing it off to QA.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/image/upload/q_80/v1569567747/todoist-ticket.png#center" alt="todoist app screen with tasks"/></p>
<a href="#zshbash-alias"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="zshbash-alias">ZSH/Bash Alias</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I have a few helpful aliases set up for quickly switching directories, running tests, starting projects, etc. Here are a few of them:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">nis</span><span class="token operator">=</span><span class="token string">&quot;npm install; npm start&quot;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">ns</span><span class="token operator">=</span><span class="token string">&quot;npm start&quot;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">nt</span><span class="token operator">=</span><span class="token string">&quot;npm run test&quot;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">nsstory</span><span class="token operator">=</span><span class="token string">&quot;npm run storybook&quot;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">grun</span><span class="token operator">=</span><span class="token string">&quot;./gradlew bootrun&quot;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">gtest</span><span class="token operator">=</span><span class="token string">&quot;./gradlew test&quot;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">jmt</span><span class="token operator">=</span><span class="token string">&quot;cd ~/Desktop/Dev/joelmturner&quot;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I would love to hear about how your setup works for you. Let me know on <a href="https://mobile.twitter.com/search?q=https://joelmturner.com/blog/productivity-practices-front-end-development">Twitter</a>.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bar Chart in React with @vx]]></title>
        <id>https://joelmturner.com/blog/data-vis-react-bar-chart-vx</id>
        <link href="https://joelmturner.com/blog/data-vis-react-bar-chart-vx"/>
        <updated>2019-09-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Building a bar chart in React using the @vx library of charting primitives. This is one of the most widely used charts and gives a good base for building upon.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/data-vis-react-bar-chart-vx">Bar Chart in React with @vx</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css s0fpqi">.css-s0fpqi{margin-bottom:2px;-webkit-padding-start:3px;padding-inline-start:3px;-webkit-padding-end:3px;padding-inline-end:3px;padding-top:0.025px;padding-bottom:0.25px;background:gray.100;border-left-style:solid;border-left-width:5px;border-left-color:gray.300;}</style><div class="css-s0fpqi"><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><em>Update: October 2020</em> - @vx is now <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/airbnb/visx">@visx</a> and is at 1.0. You can read about <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://medium.com/airbnb-engineering/introducing-visx-from-airbnb-fd6155ac4658">the update from Airbnb Engineering</a>. As of this update, the api is all the same, and it has TypeScript support 👍.</p></div>
<a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#what-were-building-tldr"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">What We&#x27;re Building TL;DR</span></a></li>
<li class="css-1i5jedo"><a href="#packages"><span class="chakra-text css-744h54">Packages</span></a></li>
<li class="css-1i5jedo"><a href="#data"><span class="chakra-text css-744h54">Data</span></a></li>
<li class="css-1i5jedo"><a href="#scales"><span class="chakra-text css-744h54">Scales</span></a></li>
<li class="css-1i5jedo"><a href="#bar-chart"><span class="chakra-text css-744h54">Bar Chart</span></a></li>
<li class="css-1i5jedo"><a href="#finish"><span class="chakra-text css-744h54">Finish</span></a></li>
<li class="css-1i5jedo"><a href="#bonus"><span class="chakra-text css-744h54">Bonus</span></a></li>
</ul>
<a href="#what-were-building-tldr"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="what-were-building-tldr">What We&#x27;re Building TL;DR</h2></a>
<div data-testid="general-observer" class="mdx-embed"><div style="height:0;width:100%"></div></div>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Data visualization is steadily becoming more valuable to companies as they try to understand all the data they have coming in. There are a lot of different solutions for data visualization in javaScript, <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://d3js.org/">d3</a> being one of the most popular.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">When working in React it can be frustrating to handle d3 since they tend to compete for the DOM. There is a solution that we&#x27;ve been using for a little while at Sprinklr to help with this.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">That solution is the library <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://vx-demo.now.sh/">@vx</a>. It&#x27;s a set of base components in React that wrap d3, made to build a charting library from. There are some great helpers rolled up in the components that make working with <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">svg</code>&#x27;s much better. It hasn&#x27;t been released as stable quite yet but it works for our purposes.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Today we&#x27;re going to focus on building a bar chart component. Here are the requirements for this component.</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Can take an array of single dimension data</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Render each item on a shared scale</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should have a x and y axis</li>
</ul>
<a href="#packages"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="packages">Packages</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s start by getting the packages we need from @vx. Well need shapes, scale, axis, gradient (easy background color), and some mock data to get started.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false">  <span class="token function">yarn</span> <span class="token function">add</span> @vx/shapes @vx/group @vx/scale @vx/axis @vx/gradient
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Or</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false">  <span class="token function">npm</span> <span class="token function">install</span> @vx/shapes @vx/group @vx/scale @vx/axis @vx/gradient <span class="token parameter variable">--save</span>
</div></code></pre>
<a href="#data"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="data">Data</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now that we have our packages we can start stubbing out our data. We&#x27;re going to use some mock data to get started so feel free to create your own or use this data set.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> defaultData1 <span class="token operator">=</span> <span class="token punctuation">[</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#x27;Happy&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">4000</span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#x27;Sad&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#x27;Angry&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#x27;Joyful&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">4500</span><span class="token punctuation">,</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#x27;Anxious&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">7000</span><span class="token punctuation">,</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false"><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now that we have the shape of our data we can add some helper functions that will access those items. This will help us add the labels across the x-axis, and the values along the y-axis. We&#x27;ll see how these come into play a little later.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment">// accessors return the label and value of that data item</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>label<span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
</div></code></pre>
<a href="#scales"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="scales">Scales</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We can now define the max height and max width that we would like our chart to be. Our component will take height and width as props, and then we can add a little padding. This will help us as we define our scales for this chart.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment">// bounds</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> xMax <span class="token operator">=</span> width <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> yMax <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The scales are where the magic really happen. It took me a while to understand what the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">domain</code> and <code class="chakra-code css-t3qbto">range</code> in d3 were all about. The general rule of thumb based on my understanding is that <code class="chakra-code css-t3qbto">domain</code> is the lowest and highest data points. The <code class="chakra-code css-t3qbto">range</code> is the pixel range we would like to plot these data points on.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">In our scales below we can see that <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">range</code> (<code class="chakra-code css-t3qbto">rangeRound</code>) is from <code class="chakra-code css-t3qbto">0</code> to <code class="chakra-code css-t3qbto">xMax</code> which is the height bound of our chart. @vx gives us a helper, <code class="chakra-code css-t3qbto">rangeRound</code>, that prettifies the numbers.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">domain</code> is an array of all data points which resolves to lowest (2000) and highest (7000) of the data set.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The padding is another helper from @vx that adds banding or space between and the width of the bars for us.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment">// scales</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> xScale <span class="token operator">=</span> <span class="token function">scaleBand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> xMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">domain</span><span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">0.4</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> yScale <span class="token operator">=</span> <span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> yMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<a href="#bar-chart"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="bar-chart">Bar Chart</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Cool, let&#x27;s build the component! We&#x27;ll start by setting up the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">svg</code> and <code class="chakra-code css-t3qbto">Group</code> to hold our chart. The <code class="chakra-code css-t3qbto">Group</code> helps us place the axes and the bars.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> Group <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/group&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> LinearGradient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/gradient&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> scaleBand<span class="token punctuation">,</span> scaleLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/scale&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> AxisLeft<span class="token punctuation">,</span> AxisBottom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/axis&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token comment">// accessors return the label and value of that data item</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>label<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">BarChart</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token comment">// bounds</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xMax <span class="token operator">=</span> width <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yMax <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token comment">// scales</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xScale <span class="token operator">=</span> <span class="token function">scaleBand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> xMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">0.4</span><span class="token punctuation">,</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">
</div><div data-line="23" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yScale <span class="token operator">=</span> <span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> yMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">
</div><div data-line="28" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>height<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="30" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Group</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">}</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">55</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Group</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="31" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="34" class="highlight-line" data-highlighted="false">
</div><div data-line="35" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> BarChart<span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Can take an array of single dimension data</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Looks good. The first thing we&#x27;ll add is the y-axis. To do this we use <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://vx-demo.now.sh/docs/axis#AxisLeft"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">AxisLeft</code></a> from @vx. We need to pass it our yScale, and we&#x27;ll give it a few other props for styling. The prop <code class="chakra-code css-t3qbto">left</code> pushes the axis over enough to show the <code class="chakra-code css-t3qbto">label</code> and the <code class="chakra-code css-t3qbto">numTicks</code> limits the number of values shown on the y-axis.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Then we&#x27;ll add the <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://vx-demo.now.sh/docs/axis#AxisBottom"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">AxisBottom</code></a> that has similar props to <code class="chakra-code css-t3qbto">AxisLeft</code>. It should look like this:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Group</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">}</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">55</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="2" class="highlight-line" data-highlighted="true"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisLeft</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yScale<span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Times Expressed<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="3" class="highlight-line" data-highlighted="true"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisBottom</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScale<span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Emotion<span class="token punctuation">&quot;</span></span> <span class="token attr-name">labelOffset</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">}</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yMax<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Group</span></span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Should have a x and y axis</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we can loop over the data and return the bar. The width, height, and x are all using the scale to determine where they would be plotted in the graph.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> label <span class="token operator">=</span> <span class="token function">x</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> barWidth <span class="token operator">=</span> xScale<span class="token punctuation">.</span><span class="token function">bandwidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> barHeight <span class="token operator">=</span> yMax <span class="token operator">-</span> <span class="token function">yScale</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> barX <span class="token operator">=</span> <span class="token function">xScale</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token keyword">const</span> barY <span class="token operator">=</span> yMax <span class="token operator">-</span> barHeight<span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Bar</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">bar-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">x</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>barX<span class="token punctuation">}</span></span> <span class="token attr-name">y</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>barY<span class="token punctuation">}</span></span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>barWidth<span class="token punctuation">}</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>barHeight<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Render each item on a shared scale</li>
</ul>
<a href="#finish"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="finish">Finish</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Nice! It should be good to go. We&#x27;re going to add in the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">LinearGradient</code> for a background color as well. Here it is all together:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> Group <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/group&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> LinearGradient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/gradient&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> scaleBand<span class="token punctuation">,</span> scaleLinear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/scale&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> AxisLeft<span class="token punctuation">,</span> AxisBottom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;@vx/axis&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token comment">// accessors return the label and value of that data item</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>label<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">BarChart</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token comment">// bounds</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xMax <span class="token operator">=</span> width <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yMax <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token comment">// scales</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> xScale <span class="token operator">=</span> <span class="token function">scaleBand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> xMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">0.4</span><span class="token punctuation">,</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">
</div><div data-line="23" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> yScale <span class="token operator">=</span> <span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">rangeRound</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> yMax<span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">
</div><div data-line="28" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>height<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="30" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LinearGradient</span></span> <span class="token attr-name">from</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">#e9e9e9</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">#fff</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gradientFill</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="31" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>height<span class="token punctuation">}</span></span> <span class="token attr-name">fill</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">url(#gradientFill)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">rx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="32" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Group</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">}</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">55</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="33" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisLeft</span></span> <span class="token attr-name">left</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yScale<span class="token punctuation">}</span></span> <span class="token attr-name">numTicks</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Times<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="34" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false">          <span class="token keyword">const</span> label <span class="token operator">=</span> <span class="token function">x</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="36" class="highlight-line" data-highlighted="false">          <span class="token keyword">const</span> barWidth <span class="token operator">=</span> xScale<span class="token punctuation">.</span><span class="token function">bandwidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false">          <span class="token keyword">const</span> barHeight <span class="token operator">=</span> yMax <span class="token operator">-</span> <span class="token function">yScale</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="38" class="highlight-line" data-highlighted="false">          <span class="token keyword">const</span> barX <span class="token operator">=</span> <span class="token function">xScale</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="39" class="highlight-line" data-highlighted="false">          <span class="token keyword">const</span> barY <span class="token operator">=</span> yMax <span class="token operator">-</span> barHeight<span class="token punctuation">;</span>
</div><div data-line="40" class="highlight-line" data-highlighted="false">
</div><div data-line="41" class="highlight-line" data-highlighted="false">          <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Bar</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">bar-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">x</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>barX<span class="token punctuation">}</span></span> <span class="token attr-name">y</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>barY<span class="token punctuation">}</span></span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>barWidth<span class="token punctuation">}</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>barHeight<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
</div><div data-line="42" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="43" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AxisBottom</span></span> <span class="token attr-name">scale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScale<span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Emotion<span class="token punctuation">&quot;</span></span> <span class="token attr-name">labelOffset</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">}</span></span> <span class="token attr-name">top</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yMax<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="44" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Group</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="45" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="46" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="47" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="48" class="highlight-line" data-highlighted="false">
</div><div data-line="49" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> BarChart<span class="token punctuation">;</span>
</div></code></pre>
<a href="#bonus"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="bonus">Bonus</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Add a little smoothness to your bars with a css transition like:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-css css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">.vx-bar</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token property">transition</span><span class="token punctuation">:</span> height 150ms<span class="token punctuation">,</span> y 150ms<span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This way, when the data changes it will move to the next height smoothly.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build an Inline Edit Text Input With React Hooks]]></title>
        <id>https://joelmturner.com/blog/inline-text-edit-react-hooks</id>
        <link href="https://joelmturner.com/blog/inline-text-edit-react-hooks"/>
        <updated>2019-09-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is a simple example of how to build an inline edit text input with React Hooks.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/inline-text-edit-react-hooks">Build an Inline Edit Text Input With React Hooks</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">A nice feature in many apps is to edit a title or other text inline without leaving the context that we&#x27;re in.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s what we&#x27;ll be building.</p>
<div data-testid="general-observer" class="mdx-embed"><div style="height:0;width:100%"></div></div>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s take a look at the requirements for this component.</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Must show text when in rest</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Click on text to edit the text</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Enter key to save</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Esc key to exit without saving</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Click outside to save</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Cool let&#x27;s start by creating the resting state. We&#x27;re going to do some basic styling with CSS to help us.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">InlineEdit</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inline-text_copy inline-text_copy--active<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inline-text_input inline-text_input--rest<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> InlineEdit<span class="token punctuation">;</span>
</div></code></pre>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-css css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token comment">/* these make sure it can work in any text element */</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token selector">.inline-text_copy--active,</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token selector">.inline-text_input--active</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token property">font</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token property">text-align</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token property">background</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px dashed #999999<span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">
</div><div data-line="14" class="highlight-line" data-highlighted="false"><span class="token selector">.inline-text_copy--active</span> <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">
</div><div data-line="18" class="highlight-line" data-highlighted="false"><span class="token selector">.inline-text_copy--hidden,</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false"><span class="token selector">.inline-text_input--hidden</span> <span class="token punctuation">{</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">
</div><div data-line="23" class="highlight-line" data-highlighted="false"><span class="token selector">.inline-text_input--active</span> <span class="token punctuation">{</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">  <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #666666<span class="token punctuation">;</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">  <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Must show text when in rest</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This sets is us up with a simple text component that displays our text. Now the trickery begins!
We want to click on the text and have the input show up. Let&#x27;s create some state to track whether we&#x27;re at rest or active.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token punctuation">[</span>isInputActive<span class="token punctuation">,</span> setIsInputActive<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Cool, now we have some state to help us display/hide our text and input. We also need some state to track what is being typed in our input. Let&#x27;s add another <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useState</code> to hold that text.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token punctuation">[</span>inputValue<span class="token punctuation">,</span> setInputValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#x27;&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s hook this state up to our elements.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">InlineEdit</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isInputActive<span class="token punctuation">,</span> setIsInputActive<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>inputValue<span class="token punctuation">,</span> setInputValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#x27;&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inline-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">inline-text_copy inline-text_copy--</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token operator">!</span>isInputActive <span class="token operator">?</span> <span class="token string">&#x27;active&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;rest&#x27;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputValue<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setInputValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">inline-text_input inline-text_input--</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>isInputActive <span class="token operator">?</span> <span class="token string">&#x27;active&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;rest&#x27;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Click on text to edit the text</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Alright, now we need to set up the saving and escaping of the text. We can do this with a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useEffect</code> and <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://usehooks.com/useKeypress/"><code class="chakra-code css-t3qbto">useKeypress</code> hook</a> that watch for a key click and take an action.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">InlineEdit</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isInputActive<span class="token punctuation">,</span> setIsInputActive<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>inputValue<span class="token punctuation">,</span> setInputValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> enter <span class="token operator">=</span> <span class="token function">useKeypress</span><span class="token punctuation">(</span><span class="token string">&#x27;Enter&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> esc <span class="token operator">=</span> <span class="token function">useKeypress</span><span class="token punctuation">(</span><span class="token string">&#x27;Escape&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="true">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isInputActive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="true">      <span class="token comment">// if Enter is pressed, save the text and case the editor</span>
</div><div data-line="11" class="highlight-line" data-highlighted="true">      <span class="token keyword">if</span> <span class="token punctuation">(</span>enter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="true">        props<span class="token punctuation">.</span><span class="token function">onSetText</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="true">        <span class="token function">setIsInputActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="true">      <span class="token punctuation">}</span>
</div><div data-line="15" class="highlight-line" data-highlighted="true">      <span class="token comment">// if Escape is pressed, revert the text and close the editor</span>
</div><div data-line="16" class="highlight-line" data-highlighted="true">      <span class="token keyword">if</span> <span class="token punctuation">(</span>esc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="17" class="highlight-line" data-highlighted="true">        <span class="token function">setInputValue</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="true">        <span class="token function">setIsInputActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="true">      <span class="token punctuation">}</span>
</div><div data-line="20" class="highlight-line" data-highlighted="true">    <span class="token punctuation">}</span>
</div><div data-line="21" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>enter<span class="token punctuation">,</span> esc<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// watch the Enter and Escape key presses</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">
</div><div data-line="23" class="highlight-line" data-highlighted="false">
</div><div data-line="24" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Enter key to save</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Esc key to exit without saving</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Next we&#x27;ll add a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useRef</code> on the wrapping span to help us tell if a click happened outside of the component. We&#x27;re going to use the <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://usehooks.com/useOnClickOutside/"><code class="chakra-code css-t3qbto">useOnClickOutside</code> hook</a> from <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://usehooks.com/">useHooks.com</a>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">InlineEdit</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isInputActive<span class="token punctuation">,</span> setIsInputActive<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>inputValue<span class="token punctuation">,</span> setInputValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token comment">// get the the wrapping span node</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> wrapperRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> enter <span class="token operator">=</span> <span class="token function">useKeypress</span><span class="token punctuation">(</span><span class="token string">&#x27;Enter&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> esc <span class="token operator">=</span> <span class="token function">useKeypress</span><span class="token punctuation">(</span><span class="token string">&#x27;Escape&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token comment">// this hook takes a ref to watch and a function to run</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token comment">// if the click happened outside</span>
</div><div data-line="13" class="highlight-line" data-highlighted="true">  <span class="token function">useOnClickOutside</span><span class="token punctuation">(</span>wrapperRef<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="14" class="highlight-line" data-highlighted="true">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isInputActive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="true">      <span class="token comment">// save the value and close the editor</span>
</div><div data-line="16" class="highlight-line" data-highlighted="true">      props<span class="token punctuation">.</span><span class="token function">onSetText</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="true">      <span class="token function">setIsInputActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="true">    <span class="token punctuation">}</span>
</div><div data-line="19" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isInputActive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">      <span class="token comment">// if Enter is pressed, save the text and case the editor</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">      <span class="token keyword">if</span> <span class="token punctuation">(</span>enter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">        props<span class="token punctuation">.</span><span class="token function">onSetText</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">        <span class="token function">setIsInputActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">      <span class="token comment">// if Escape is pressed, revert the text and close the editor</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">      <span class="token keyword">if</span> <span class="token punctuation">(</span>esc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">        <span class="token function">setInputValue</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">        <span class="token function">setIsInputActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="34" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>enter<span class="token punctuation">,</span> esc<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// watch the Enter and Escape key presses</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false">
</div><div data-line="36" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inline-text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>wrapperRef<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="38" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="39" class="highlight-line" data-highlighted="false"><span class="token plain-text"></span></div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Click outside to save</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We can help the user by focusing the input when they click on the text. To do this we can add a <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useRef</code> on the input and a <code class="chakra-code css-t3qbto">useEffect</code> that watches to see if the input is active.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token comment">// focus the cursor in the input field on edit start</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isInputActive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">      inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>isInputActive<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
    <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span></span>
    <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputValue<span class="token punctuation">}</span></span>
    <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setInputValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">inline-text_input inline-text_input--</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>isInputActive <span class="token operator">?</span> <span class="token string">&quot;active&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;rest&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">That was a lot of little parts. Let&#x27;s put it together to see what we have. I&#x27;ve added a few helper functions as well.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> useKeypress <span class="token keyword">from</span> <span class="token string">&#x27;../hooks/useKeypress&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> useOnClickOutside <span class="token keyword">from</span> <span class="token string">&#x27;../hooks/useOnClickOutside&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">InlineEdit</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isInputActive<span class="token punctuation">,</span> setIsInputActive<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>inputValue<span class="token punctuation">,</span> setInputValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> wrapperRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> textRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> enter <span class="token operator">=</span> <span class="token function">useKeypress</span><span class="token punctuation">(</span><span class="token string">&#x27;Enter&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> esc <span class="token operator">=</span> <span class="token function">useKeypress</span><span class="token punctuation">(</span><span class="token string">&#x27;Escape&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token comment">// check to see if the user clicked outside of this component</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token function">useOnClickOutside</span><span class="token punctuation">(</span>wrapperRef<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isInputActive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">      props<span class="token punctuation">.</span><span class="token function">onSetText</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">      <span class="token function">setIsInputActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">
</div><div data-line="24" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> onEnter <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>enter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">      props<span class="token punctuation">.</span><span class="token function">onSetText</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">      <span class="token function">setIsInputActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>enter<span class="token punctuation">,</span> inputValue<span class="token punctuation">,</span> props<span class="token punctuation">.</span>onSetText<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">
</div><div data-line="31" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> onEsc <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>esc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">      <span class="token function">setInputValue</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="34" class="highlight-line" data-highlighted="false">      <span class="token function">setIsInputActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="36" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>esc<span class="token punctuation">,</span> props<span class="token punctuation">.</span>text<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false">
</div><div data-line="38" class="highlight-line" data-highlighted="false">  <span class="token comment">// focus the cursor in the input field on edit start</span>
</div><div data-line="39" class="highlight-line" data-highlighted="false">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="40" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isInputActive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="41" class="highlight-line" data-highlighted="false">      inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="42" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="43" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>isInputActive<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="44" class="highlight-line" data-highlighted="false">
</div><div data-line="45" class="highlight-line" data-highlighted="false">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="46" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isInputActive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="47" class="highlight-line" data-highlighted="false">      <span class="token comment">// if Enter is pressed, save the text and close the editor</span>
</div><div data-line="48" class="highlight-line" data-highlighted="false">      <span class="token function">onEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="49" class="highlight-line" data-highlighted="false">      <span class="token comment">// if Escape is pressed, revert the text and close the editor</span>
</div><div data-line="50" class="highlight-line" data-highlighted="false">      <span class="token function">onEsc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="51" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="52" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>onEnter<span class="token punctuation">,</span> onEsc<span class="token punctuation">,</span> isInputActive<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// watch the Enter and Escape key presses</span>
</div><div data-line="53" class="highlight-line" data-highlighted="false">
</div><div data-line="54" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> handleInputChange <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
</div><div data-line="55" class="highlight-line" data-highlighted="false">    <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="56" class="highlight-line" data-highlighted="false">      <span class="token comment">// sanitize the input a little</span>
</div><div data-line="57" class="highlight-line" data-highlighted="false">      <span class="token function">setInputValue</span><span class="token punctuation">(</span>DOMPurify<span class="token punctuation">.</span><span class="token function">sanitize</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="58" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="59" class="highlight-line" data-highlighted="false">    <span class="token punctuation">[</span>setInputValue<span class="token punctuation">]</span>
</div><div data-line="60" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="61" class="highlight-line" data-highlighted="false">
</div><div data-line="62" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> handleSpanClick <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setIsInputActive</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>setIsInputActive<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="63" class="highlight-line" data-highlighted="false">
</div><div data-line="64" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="65" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inline-text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>wrapperRef<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="66" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>
        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>textRef<span class="token punctuation">}</span></span>
        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSpanClick<span class="token punctuation">}</span></span>
        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">inline-text_copy inline-text_copy--</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token operator">!</span>isInputActive <span class="token operator">?</span> <span class="token string">&#x27;active&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;hidden&#x27;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="67" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="68" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="69" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span></span>
        <span class="token comment">// set the width to the input length multiplied by the x height</span>
        <span class="token comment">// it&#x27;s not quite right but gets it close</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">minWidth</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#x27;ch&#x27;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputValue<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleInputChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">inline-text_input inline-text_input--</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>isInputActive <span class="token operator">?</span> <span class="token string">&#x27;active&#x27;</span> <span class="token operator">:</span> <span class="token string">&#x27;hidden&#x27;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="70" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="71" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="72" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="73" class="highlight-line" data-highlighted="false">
</div><div data-line="74" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> InlineEdit<span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">It&#x27;s worth noting that input text may need to be sanitized before being saved. I&#x27;ve had good luck with <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://github.com/cure53/DOMPurify">DOMPurify</a>.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">That&#x27;s it! Go forth and edit!</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Hooks: useDims]]></title>
        <id>https://joelmturner.com/blog/react-hooks-useDims</id>
        <link href="https://joelmturner.com/blog/react-hooks-useDims"/>
        <updated>2019-09-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Here's another helpful React hook. This one returns the dimensions of an element that's passed to it.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/react-hooks-useDims">React Hooks: useDims</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s another helpful React hook. This one returns the dimensions of an element that&#x27;s passed to it.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useLayoutEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">useDims</span><span class="token punctuation">(</span><span class="token parameter">ref<span class="token punctuation">,</span> isSvg <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>dim<span class="token punctuation">,</span> setDim<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token function">useLayoutEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>ref <span class="token operator">&amp;&amp;</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">      <span class="token keyword">if</span> <span class="token punctuation">(</span>isSvg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">        <span class="token keyword">const</span> <span class="token punctuation">{</span> height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span> <span class="token operator">=</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">getBBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">        <span class="token function">setDim</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">          height<span class="token punctuation">,</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">          width<span class="token punctuation">,</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">          <span class="token literal-property property">top</span><span class="token operator">:</span> y<span class="token punctuation">,</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">          <span class="token literal-property property">left</span><span class="token operator">:</span> x<span class="token punctuation">,</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">        <span class="token function">setDim</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">          <span class="token literal-property property">height</span><span class="token operator">:</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">,</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">          <span class="token literal-property property">width</span><span class="token operator">:</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">,</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">          <span class="token literal-property property">top</span><span class="token operator">:</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>offsetTop<span class="token punctuation">,</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">          <span class="token literal-property property">left</span><span class="token operator">:</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">,</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>ref<span class="token punctuation">,</span> isSvg<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">
</div><div data-line="32" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> dim<span class="token punctuation">;</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="34" class="highlight-line" data-highlighted="false">
</div><div data-line="35" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> useDims<span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">It can be used in a component like this.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Chart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> chartRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> <span class="token punctuation">{</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> top<span class="token punctuation">,</span> left <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDims</span><span class="token punctuation">(</span>chartRef<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>chartRef<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">width: </span><span class="token punctuation">{</span>width<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">height: </span><span class="token punctuation">{</span>height<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">top: </span><span class="token punctuation">{</span>top<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">left: </span><span class="token punctuation">{</span>left<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="14" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="15" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s break it down a bit. We start by receiving a ref and an optional boolean of <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">isSvg</code>. Since svgs use a different function to calculate size we can use this flag to differentiate.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Our hook is using a default dimension object in state with all values set to zero. We then return that <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">dim</code> if there aren&#x27;t any changes.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">useDims</span><span class="token punctuation">(</span><span class="token parameter">ref<span class="token punctuation">,</span> isSvg <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="true">  <span class="token keyword">const</span> <span class="token punctuation">[</span>dim<span class="token punctuation">,</span> setDim<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="true">      <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="true">      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="true">      <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">      <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span>
</div><div data-line="7" class="highlight-line" data-highlighted="true">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token keyword">return</span> dim<span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Next, we have <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useEffect</code> which does the heavy lifting. We&#x27;re checking to see if we have a value in the ref and we are having useEffect watch the <code class="chakra-code css-t3qbto">ref</code> and <code class="chakra-code css-t3qbto">isSvg</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">useLayoutEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">if</span> <span class="token punctuation">(</span>ref <span class="token operator">&amp;&amp;</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">   <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>ref<span class="token punctuation">,</span> isSvg<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Then, we have the calcs for the html and svg element. For the html element we can pull the offsets right off of the node. The svg, however, need to pass through <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">getBBox()</code> to get their dimensions.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">if</span> <span class="token punctuation">(</span>isSvg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">{</span> height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span> <span class="token operator">=</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">getBBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token function">setDim</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    height<span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    width<span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">top</span><span class="token operator">:</span> y<span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">left</span><span class="token operator">:</span> x<span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token function">setDim</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">height</span><span class="token operator">:</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">width</span><span class="token operator">:</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">,</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">top</span><span class="token operator">:</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>offsetTop<span class="token punctuation">,</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">left</span><span class="token operator">:</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">,</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Once it&#x27;s all together we have a quick way to grab the dimensions from elements. You can also use it for multiple elements in the same component.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Favorite Layout Components in React]]></title>
        <id>https://joelmturner.com/blog/react-layout-components</id>
        <link href="https://joelmturner.com/blog/react-layout-components"/>
        <updated>2019-09-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[React components for rapid layout and ease of use. These components are designed to be used as building blocks for your own layouts. They are not meant to be used as the only way to build a layout.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/react-layout-components">My Favorite Layout Components in React</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#what-were-using-tldr"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">What We&#x27;re Using TL;DR</span></a></li>
<li class="css-1i5jedo"><a href="#flexbox"><span class="chakra-text css-744h54">Flexbox</span></a></li>
<li class="css-1i5jedo"><a href="#grid"><span class="chakra-text css-744h54">Grid</span></a></li>
</ul>
<a href="#what-were-using-tldr"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="what-were-using-tldr">What We&#x27;re Using TL;DR</h2></a>
<div data-testid="general-observer" class="mdx-embed"><div style="height:0;width:100%"></div></div>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I had used a column component that accepted different span amounts, but I ended up not using it as much. I tend to add <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">span</code> to the children through the <code class="chakra-code css-t3qbto">sx</code> prop or extending with styled components.</p>
<a href="#flexbox"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="flexbox">Flexbox</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This one is by far my favorite. 90% of the time it works perfectly with the props given. It can easily be extended through styled components, emotion&#x27;s <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">css</code> prop, or Theme UI&#x27;s <code class="chakra-code css-t3qbto">sx</code> prop for those few cases where I need something extra.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is definitely an opinionated way to build a Flexbox component. The idea is to have booleans for certain aspects of the spec to help speed up composition.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s a list of the current props for it:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">FlexboxProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  className<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  children<span class="token operator">?</span><span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false">  inline<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  vertical<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// column</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  wrap<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  noGrow<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// acts as no-grow and no-shrink</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  grow<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  shrink<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  basis<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token string">&#x27;auto&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">
</div><div data-line="13" class="highlight-line" data-highlighted="false">  top<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  middle<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  bottom<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  left<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  center<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">  right<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">  between<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">  around<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">  gap<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// add margin between children similar to grid-gap on grid</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here is some example usage. See the <a href="#example"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">CodeSandbox</span></a> down below for more.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Flexbox</span></span> <span class="token attr-name">vertical</span> <span class="token attr-name">gap</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Flexbox</span></span> <span class="token attr-name">noGrow</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">A Title for You</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Flexbox</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Flexbox</span></span> <span class="token attr-name">bottom</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token plain-text">      This is some copy to show how the box will fill the whole area but the text will be aligned</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token plain-text">      bottom.</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Flexbox</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Flexbox</span></span><span class="token punctuation">&gt;</span></span>
</div></code></pre>
<a href="#grid"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="grid">Grid</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Grid is another one of my favorites and it&#x27;s also very opinionated to suit my needs. The idea is to use CSS grid to create layouts. Depending on the project it can align with a design grid.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This can be paired with Flexbox for some powerful layouts. Add the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">sx</code> prop from Theme UI for some wonderful <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://theme-ui.com/theme-spec#breakpoints">breakpoint awesomeness</a>.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s take a look at the props.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">GridProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  className<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  gap<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// grid-gap</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  columns<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// grid-template-columns</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  rows<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// grid-template-rows</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s an example of using it. See more examples in the <a href="#example"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">CodeSandbox</span></a>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1fr 1fr<span class="token punctuation">&quot;</span></span> <span class="token attr-name">gap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myImage.png<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>catsSinging.png<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">&gt;</span></span>
</div></code></pre>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Hooks: useSlider]]></title>
        <id>https://joelmturner.com/blog/react-hooks-useslider</id>
        <link href="https://joelmturner.com/blog/react-hooks-useslider"/>
        <updated>2019-09-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[An auto-advancing image slider built in React with hooks.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/react-hooks-useslider">React Hooks: useSlider</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Creating a slider with React hooks that slides through an array on an interval.</p>
<a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#what-were-building-tldr"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">What We&#x27;re Building TL;DR</span></a></li>
<li class="css-1i5jedo"><a href="#requirements"><span class="chakra-text css-744h54">Requirements</span></a></li>
<li class="css-1i5jedo"><a href="#useinterval"><span class="chakra-text css-744h54">useInterval</span></a></li>
<li class="css-1i5jedo"><a href="#useslider"><span class="chakra-text css-744h54">useSlider</span></a></li>
<li class="css-1i5jedo"><a href="#slider-component"><span class="chakra-text css-744h54">Slider Component</span></a></li>
<li class="css-1i5jedo"><a href="#putting-it-all-together"><span class="chakra-text css-744h54">Putting it All Together</span></a>
<ul class="css-dyc0h3">
<li class="css-1i5jedo"><a href="#cool-requirements-met"><span class="chakra-text css-744h54">Cool! Requirements met.</span></a></li>
</ul>
</li>
</ul>
<a href="#what-were-building-tldr"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="what-were-building-tldr">What We&#x27;re Building TL;DR</h2></a>
<div data-testid="general-observer" class="mdx-embed"><div style="height:0;width:100%"></div></div>
<a href="#requirements"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="requirements">Requirements</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This component needs do a few things.</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should accept an slide array</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should accept a duration in milliseconds</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should animate between slides</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should move through array on it&#x27;s own</li>
</ul>
<a href="#useinterval"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="useinterval">useInterval</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here&#x27;s the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useInterval</code> code.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">useInterval</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> savedCallback <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token comment">// Remember the latest callback.</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    savedCallback<span class="token punctuation">.</span>current <span class="token operator">=</span> callback<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token comment">// Set up the interval.</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">    <span class="token keyword">function</span> <span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">      savedCallback<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>delay <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">      <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>tick<span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>delay<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Setting an interval can be problematic in JavaScript, mostly because of cleanup (or lack of). With <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">useEffect</code> we get a nice cleanup with the return function, <code class="chakra-code css-t3qbto">return () =&gt; clearInterval(id);</code>.</p>
<a href="#useslider"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="useslider">useSlider</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now that we have that set up we can leverage it to help us with timing.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> useInterval <span class="token keyword">from</span> <span class="token string">&#x27;./UseInterval&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">useSlider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// the length of the slide array</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// pauses/disables the player</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  useLoaded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// this allows for delayed loads like images or embeds</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  speed <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// speed in milliseconds to show each slide</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  loop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// should it start back at the beginning</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>offset<span class="token punctuation">,</span> setOffset<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">[</span>items<span class="token punctuation">,</span> setItems<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token keyword">function</span> <span class="token function">incrementOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>offset <span class="token operator">===</span> total <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">      <span class="token function">setOffset</span><span class="token punctuation">(</span>loop <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">      <span class="token function">setOffset</span><span class="token punctuation">(</span>offset <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">
</div><div data-line="22" class="highlight-line" data-highlighted="false">  <span class="token keyword">function</span> <span class="token function">addItem</span><span class="token punctuation">(</span><span class="token parameter">ref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">    <span class="token function">setItems</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>items<span class="token punctuation">,</span> ref<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">
</div><div data-line="26" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> loaded <span class="token operator">=</span> useLoaded <span class="token operator">?</span> items<span class="token punctuation">.</span>length <span class="token operator">===</span> total <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">
</div><div data-line="28" class="highlight-line" data-highlighted="false">  <span class="token function">useInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">    <span class="token keyword">if</span> <span class="token punctuation">(</span>loaded <span class="token operator">&amp;&amp;</span> enabled <span class="token operator">&amp;&amp;</span> offset <span class="token operator">&lt;</span> total<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">      <span class="token function">incrementOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span> speed<span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">
</div><div data-line="34" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">{</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false">    offset<span class="token punctuation">,</span> <span class="token comment">// this is the current index of the slider</span>
</div><div data-line="36" class="highlight-line" data-highlighted="false">    addItem<span class="token punctuation">,</span> <span class="token comment">// this takes a ref and adds it to the items array to see if all have loaded</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="38" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="39" class="highlight-line" data-highlighted="false">
</div><div data-line="40" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> useSlider<span class="token punctuation">;</span>
</div></code></pre>
<a href="#slider-component"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="slider-component">Slider Component</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Our slider component adds all slides next to each other and moves the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">.scroller</code> (absolutely positioned) through the <code class="chakra-code css-t3qbto">.container</code> (relatively positioned). This allows us to animate between the slides. Here’s the stateless structure of our component.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-css css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">.container</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token property">background-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token selector">.scroller</span> <span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token property">transition</span><span class="token punctuation">:</span> transform 350ms<span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">
</div><div data-line="15" class="highlight-line" data-highlighted="false"><span class="token selector">.slide</span> <span class="token punctuation">{</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">  <span class="token property">transition</span><span class="token punctuation">:</span> opacity 350ms<span class="token punctuation">;</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> useSlider <span class="token keyword">from</span> <span class="token string">&#x27;./useSlider&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> slides <span class="token operator">=</span> <span class="token punctuation">[</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#x27;Slide 1&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#x27;#56777A&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#x27;Slide 2&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#x27;#84ACAC&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#x27;Slide 3&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#x27;#FBA434&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false"><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">
</div><div data-line="19" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Slider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> slideWidth <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">
</div><div data-line="22" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> slide<span class="token punctuation">.</span>color<span class="token punctuation">,</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> slideWidth<span class="token punctuation">,</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> slideWidth<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="24" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scroller<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token comment">// our counter offset will go here</span>
          <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">translate3d(-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>offset <span class="token operator">*</span> slideWidth<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px,0,0)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>slides<span class="token punctuation">.</span>length <span class="token operator">*</span> slideWidth<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="25" class="highlight-line" data-highlighted="false"><span class="token plain-text">        </span><span class="token punctuation">{</span>slides<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">slide<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>slide<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span>
            <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>slide<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
              <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> slide<span class="token punctuation">.</span>color<span class="token punctuation">,</span>
              <span class="token literal-property property">width</span><span class="token operator">:</span> slideWidth<span class="token punctuation">,</span>
              <span class="token literal-property property">height</span><span class="token operator">:</span> slideWidth<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="27" class="highlight-line" data-highlighted="false"><span class="token plain-text">            </span><span class="token punctuation">{</span>slide<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="28" class="highlight-line" data-highlighted="false"><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
</div><div data-line="30" class="highlight-line" data-highlighted="false"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
</div><div data-line="31" class="highlight-line" data-highlighted="false"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#putting-it-all-together"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="putting-it-all-together">Putting it All Together</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we can add our hook to our slider component. This will give us all the state that we&#x27;ll need for this feature. When it&#x27;s all together we get a slider that moves the slides horizontally and rewinds after the last one. You can hook up the slider props to manage the slider options if needed. It can also be made to go vertical with a little modification.</p>
<a href="#cool-requirements-met"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="cool-requirements-met">Cool! Requirements met.</h3></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Should accept an slide array</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Should accept a duration in milliseconds</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Should animate between slides</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Should move through array on it&#x27;s own</li>
</ul>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build a React Gallery With CSS Grid]]></title>
        <id>https://joelmturner.com/blog/build-gallery-react-css-grid</id>
        <link href="https://joelmturner.com/blog/build-gallery-react-css-grid"/>
        <updated>2019-09-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[CSS Grid is super powerful and can be used to create some creative layouts which makes it a great way to create galleries. In this guide we’re going to use a simple grid that keeps the images the same size.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/build-gallery-react-css-grid">Build a React Gallery With CSS Grid</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><a href="#table-of-contents"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h4 class="chakra-heading css-2sl8lr" id="table-of-contents">Table of Contents</h4></a>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a href="#typescript"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">TypeScript</span></a></li>
</ul>
<a href="#typescript"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="typescript">TypeScript</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now, let&#x27;s type it. This will help us and others know what we shape we need passed to the gallery.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="true"><span class="token keyword">import</span> Img<span class="token punctuation">,</span> <span class="token punctuation">{</span> FluidObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;gatsby-image&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">
</div><div data-line="4" class="highlight-line" data-highlighted="true"><span class="token keyword">type</span> <span class="token class-name">GallerySizes</span> <span class="token operator">=</span> <span class="token string">&#x27;s&#x27;</span> <span class="token operator">|</span> <span class="token string">&#x27;m&#x27;</span> <span class="token operator">|</span> <span class="token string">&#x27;l&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="true"><span class="token keyword">type</span> <span class="token class-name">GalleryImage</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="true">  node<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="true">    localImage<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="true">      childImageSharp<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="9" class="highlight-line" data-highlighted="true">        fluid<span class="token operator">:</span> FluidObject<span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="true">      <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="true">    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="true">    id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="true">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="true"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="true">
</div><div data-line="16" class="highlight-line" data-highlighted="true"><span class="token keyword">type</span> <span class="token class-name">GalleryProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="17" class="highlight-line" data-highlighted="true">  imageNodes<span class="token operator">:</span> GalleryImage<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="true">  size<span class="token operator">?</span><span class="token operator">:</span> GallerySizes<span class="token punctuation">;</span>
</div><div data-line="19" class="highlight-line" data-highlighted="true"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">
</div><div data-line="21" class="highlight-line" data-highlighted="true"><span class="token keyword">function</span> <span class="token function">Gallery</span><span class="token punctuation">(</span><span class="token punctuation">{</span> images<span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token string">&#x27;m&#x27;</span> <span class="token punctuation">}</span><span class="token operator">:</span> GalleryProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">  <span class="token keyword">function</span> <span class="token function">getStylesForSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> React<span class="token punctuation">.</span>CSSProperties <span class="token punctuation">{</span>
</div><div data-line="23" class="highlight-line" data-highlighted="true">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">      <span class="token keyword">case</span> <span class="token string">&#x27;s&#x27;</span><span class="token operator">:</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span> <span class="token punctuation">{</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">          gridTemplateColumns<span class="token operator">:</span> <span class="token string">&#x27;repeat(auto-fill, minmax(142px, 1fr))&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">          gridGap<span class="token operator">:</span> <span class="token string">&#x27;0.25rem&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">      <span class="token keyword">case</span> <span class="token string">&#x27;m&#x27;</span><span class="token operator">:</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">      <span class="token keyword">default</span><span class="token operator">:</span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span> <span class="token punctuation">{</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">          gridTemplateColumns<span class="token operator">:</span> <span class="token string">&#x27;repeat(auto-fill, minmax(300px, 1fr))&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="33" class="highlight-line" data-highlighted="false">          gridGap<span class="token operator">:</span> <span class="token string">&#x27;0.5rem&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="34" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false">      <span class="token keyword">case</span> <span class="token string">&#x27;l&#x27;</span><span class="token operator">:</span>
</div><div data-line="36" class="highlight-line" data-highlighted="false">        <span class="token keyword">return</span> <span class="token punctuation">{</span>
</div><div data-line="37" class="highlight-line" data-highlighted="false">          gridTemplateColumns<span class="token operator">:</span> <span class="token string">&#x27;1fr&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="38" class="highlight-line" data-highlighted="false">          gridGap<span class="token operator">:</span> <span class="token string">&#x27;.75rem&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="39" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="40" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="41" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="42" class="highlight-line" data-highlighted="false">
</div><div data-line="43" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> wrapperStyles<span class="token operator">:</span> React<span class="token punctuation">.</span>CSSProperties <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="44" class="highlight-line" data-highlighted="true">    display<span class="token operator">:</span> <span class="token string">&#x27;grid&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="45" class="highlight-line" data-highlighted="false">    <span class="token operator">...</span><span class="token function">getStylesForSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</div><div data-line="46" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="47" class="highlight-line" data-highlighted="false">
</div><div data-line="48" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="49" class="highlight-line" data-highlighted="false">    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>wrapperStyles<span class="token punctuation">}</span><span class="token operator">&gt;</span>
</div><div data-line="50" class="highlight-line" data-highlighted="false">      <span class="token punctuation">{</span>nodes<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
</div><div data-line="51" class="highlight-line" data-highlighted="false">        nodes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>Img fluid<span class="token operator">=</span><span class="token punctuation">{</span>node<span class="token punctuation">.</span>localImage<span class="token punctuation">.</span>childImageSharp<span class="token punctuation">.</span>fluid<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</div><div data-line="52" class="highlight-line" data-highlighted="false">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</div><div data-line="53" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="54" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Nice! Now we have a functioning gallery component that can change sizes. You can see my implementation of this on the <a target="_blank" rel="noopener" class="chakra-link css-0" to="/illustration">illustration page</a>.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quick Tip: GraphQL Fragments in Gatsby]]></title>
        <id>https://joelmturner.com/blog/quick-tip-graphql-fragments</id>
        <link href="https://joelmturner.com/blog/quick-tip-graphql-fragments"/>
        <updated>2019-09-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A few quick tips about working with GraphQL fragments in Gatsby.]]></summary>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/quick-tip-graphql-fragments">Quick Tip: GraphQL Fragments in Gatsby</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">GraphQL makes it easy to get exactly the data we need for a given component. There are many times when we end up using the same query or part of a query in multiple places. This is where <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://graphql.org/learn/queries/#fragments">GraphQL Fragments</a> can help us.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">To declare a fragment we can add <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">fragment MyAwesomeFragment on BlogPost</code>. The keyword <code class="chakra-code css-t3qbto">fragment</code> tells GraphQL that we&#x27;re creating the fragment with the name, <code class="chakra-code css-t3qbto">MyAwesomeFragment</code>. And all of this is on the type <code class="chakra-code css-t3qbto">BlogPost</code>.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">In this site I have a few different places where I&#x27;m querying images for galleries. So instead of repeating the whole query in every variation across the site I can create a queries file and drop the repeated parts in there. Here&#x27;s an example of that in action.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-scss css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">fragment InstaNodes on InstagramContentEdge </span><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token selector">node </span><span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token selector">id</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token selector">    localImage </span><span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">      <span class="token selector">childImageSharp </span><span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">        <span class="token function">fluid</span><span class="token punctuation">(</span><span class="token property">maxWidth</span><span class="token punctuation">:</span> 1248<span class="token punctuation">,</span> <span class="token property">maxHeight</span><span class="token punctuation">:</span> 1248<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">          ...GatsbyImageSharpFluid_withWebp
</div><div data-line="8" class="highlight-line" data-highlighted="false">        <span class="token punctuation">}</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token selector">images </span><span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">      <span class="token selector">standard_resolution </span><span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">        width
</div><div data-line="14" class="highlight-line" data-highlighted="false">        height
</div><div data-line="15" class="highlight-line" data-highlighted="false">        url
</div><div data-line="16" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Then we can use them in our components with a page query or static query.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">useStaticQuery</span><span class="token punctuation">(</span>graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>
<span class="token string">  query {</span>
<span class="token string">    allInstagramContent(</span>
<span class="token string">      filter: { tags: { glob: &quot;ink*2017&quot; } }</span>
<span class="token string">      sort: { fields: created_time, order: ASC }</span>
<span class="token string">    ) {</span>
<span class="token string">      edges {</span>
<span class="token string">        ...InstaNodes</span>
<span class="token string">      }</span>
<span class="token string">    }</span>
<span class="token string">  }</span>
<span class="token string"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<a href="#typing"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="typing">Typing</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">If you&#x27;re using TypeScript you can also drop the types for the fragments in the queries file so they&#x27;re all together.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">IInstaNodes</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  node<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    localImage<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">      childImageSharp<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">        fluid<span class="token operator">:</span> FluidObject<span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    images<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">      standard_resolution<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">        width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">        height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">        url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div></code></pre>
<a href="#bonus"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="bonus">Bonus</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Add an alias if you&#x27;re doing similar top level requests. Here&#x27;s an example of my Instagram requests.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-css css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">fragment inktober2017 on Query</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token selector">inktober2017: allInstagramContent(</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token selector">    filter:</span> <span class="token punctuation">{</span> <span class="token selector">tags:</span> <span class="token punctuation">{</span> <span class="token property">glob</span><span class="token punctuation">:</span> <span class="token string">&quot;ink*2017&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token selector">sort:</span> <span class="token punctuation">{</span> <span class="token property">fields</span><span class="token punctuation">:</span> created_time<span class="token punctuation">,</span> <span class="token property">order</span><span class="token punctuation">:</span> ASC <span class="token punctuation">}</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token selector">)</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token selector">edges</span> <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">      ...InstaNodes
</div><div data-line="8" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token selector">fragment inktober2018 on Query</span> <span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">  <span class="token selector">inktober2018: allInstagramContent(</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token selector">    filter:</span> <span class="token punctuation">{</span> <span class="token selector">tags:</span> <span class="token punctuation">{</span> <span class="token property">glob</span><span class="token punctuation">:</span> <span class="token string">&quot;ink*2018&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">    <span class="token selector">sort:</span> <span class="token punctuation">{</span> <span class="token property">fields</span><span class="token punctuation">:</span> created_time<span class="token punctuation">,</span> <span class="token property">order</span><span class="token punctuation">:</span> ASC <span class="token punctuation">}</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token selector">)</span> <span class="token punctuation">{</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">    <span class="token selector">edges</span> <span class="token punctuation">{</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">      ...InstaNodes
</div><div data-line="18" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false"><span class="token selector">fragment letterClash on Query</span> <span class="token punctuation">{</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">  <span class="token selector">letterClash: allInstagramContent(</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false"><span class="token selector">    filter:</span> <span class="token punctuation">{</span> <span class="token selector">tags:</span> <span class="token punctuation">{</span> <span class="token property">eq</span><span class="token punctuation">:</span> <span class="token string">&quot;letterclash&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">    <span class="token selector">sort:</span> <span class="token punctuation">{</span> <span class="token property">fields</span><span class="token punctuation">:</span> created_time<span class="token punctuation">,</span> <span class="token property">order</span><span class="token punctuation">:</span> ASC <span class="token punctuation">}</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">  <span class="token selector">)</span> <span class="token punctuation">{</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">    <span class="token selector">edges</span> <span class="token punctuation">{</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">      ...InstaNodes
</div><div data-line="28" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now we can grab that data like this:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">inktober2017</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">edges</span><span class="token operator">:</span> ink2017Edges <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">inktober2018</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">edges</span><span class="token operator">:</span> ink2018Edges <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">letterClash</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">edges</span><span class="token operator">:</span> letterClashEdges <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>
</div></code></pre>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create an Avatar Component in Gatsby with TypeScript Part 3: Adding Types]]></title>
        <id>https://joelmturner.com/blog/avatar-component-gatsby-3</id>
        <link href="https://joelmturner.com/blog/avatar-component-gatsby-3"/>
        <updated>2019-09-08T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/avatar-component-gatsby-3">Create an Avatar Component in Gatsby with TypeScript Part 3: Adding Types</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We left off with our avatar component working using Gatsby Image and still able to receive an image url. Now, let&#x27;s look at what it would take to type this component. I like to use <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">type</code> instead of <code class="chakra-code css-t3qbto">interface</code> for the props. You can read more about <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c">the difference between type and interface</a> if you&#x27;d like.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The props type will look something like this:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">AvatarProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  url<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  altText<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  title<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  user<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#x27;monster1&#x27;</span> <span class="token operator">|</span> <span class="token string">&#x27;monster2&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span>props<span class="token operator">:</span> AvatarProps<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The cool part here is that the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">user</code> prop can be typed to match the graphql alias names. This helps anyone consuming this component know the values they can pass.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s take a look at typing our data variable. We know the shape of what we expect because of our graphql. We just need to provide the correct typing at the childImageSharp level. Luckily Gatsby Image has a type of <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">FixedObject</code> that can help us out here. We pass the type to the static query hook like <code class="chakra-code css-t3qbto">useStaticQuery&lt;Data&gt;(graphql</code> to signify that we expect the return to be <code class="chakra-code css-t3qbto">Data</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> Img<span class="token punctuation">,</span> <span class="token punctuation">{</span> FixedObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;gatsby-image&quot;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">Data</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  monster1<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    childImageSharp<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">      fixed<span class="token operator">:</span> FixedObject<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  monster2<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    childImageSharp<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">      fixed<span class="token operator">:</span> FixedObject<span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">
</div><div data-line="18" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span>props<span class="token operator">:</span> AvatarProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useStaticQuery</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">    <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s refactor the redundancy in the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">Data</code> type.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">ChildImage</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  childImageSharp<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    fixed<span class="token operator">:</span> FixedObject<span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">Data</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  monster1<span class="token operator">:</span> ChildImage<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  monster2<span class="token operator">:</span> ChildImage<span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Cool, now we should have something like this:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-typescript css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> useStaticQuery<span class="token punctuation">,</span> graphql <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;gatsby&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> Img<span class="token punctuation">,</span> <span class="token punctuation">{</span> FixedObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;gatsby-image&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">AvatarProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  url<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  altText<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  title<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  user<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#x27;monster1&#x27;</span> <span class="token operator">|</span> <span class="token string">&#x27;monster2&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">ChildImage</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  childImageSharp<span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">    fixed<span class="token operator">:</span> FixedObject<span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">
</div><div data-line="18" class="highlight-line" data-highlighted="false"><span class="token keyword">type</span> <span class="token class-name">Data</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">  monster1<span class="token operator">:</span> ChildImage<span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">  monster2<span class="token operator">:</span> ChildImage<span class="token punctuation">;</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">
</div><div data-line="23" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span>props<span class="token operator">:</span> AvatarProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useStaticQuery</span><span class="token generic class-name"><span class="token operator">&lt;</span>Data<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>
<span class="token string">    query {</span>
<span class="token string">      monster1: file(relativePath: { eq: &quot;monster-01-headshot.png&quot; }) {</span>
<span class="token string">        childImageSharp {</span>
<span class="token string">          fixed(width: 75, height: 75) {</span>
<span class="token string">            ...GatsbyImageSharpFixed_withWebp</span>
<span class="token string">          }</span>
<span class="token string">        }</span>
<span class="token string">      }</span>
<span class="token string">      monster2: file(relativePath: { eq: &quot;monster-02-headshot.png&quot; }) {</span>
<span class="token string">        childImageSharp {</span>
<span class="token string">          fixed(width: 75, height: 75) {</span>
<span class="token string">            ...GatsbyImageSharpFixed_withWebp</span>
<span class="token string">          }</span>
<span class="token string">        }</span>
<span class="token string">      }</span>
<span class="token string">    }</span>
<span class="token string">  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">
</div><div data-line="26" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> altText<span class="token punctuation">,</span> title<span class="token punctuation">,</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="28" class="highlight-line" data-highlighted="false">    width<span class="token operator">:</span> <span class="token string">&#x27;75px&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="29" class="highlight-line" data-highlighted="false">    height<span class="token operator">:</span> <span class="token string">&#x27;75px&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="30" class="highlight-line" data-highlighted="false">    borderRadius<span class="token operator">:</span> <span class="token string">&#x27;50%&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="31" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="32" class="highlight-line" data-highlighted="false">
</div><div data-line="33" class="highlight-line" data-highlighted="false">  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="34" class="highlight-line" data-highlighted="false">    <span class="token keyword">return</span> <span class="token operator">&lt;</span>img style<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">}</span> src<span class="token operator">=</span><span class="token punctuation">{</span>url<span class="token punctuation">}</span> alt<span class="token operator">=</span><span class="token punctuation">{</span>altText<span class="token punctuation">}</span> title<span class="token operator">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</div><div data-line="35" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="36" class="highlight-line" data-highlighted="false">
</div><div data-line="37" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="38" class="highlight-line" data-highlighted="false">    <span class="token operator">&lt;</span>Img
</div><div data-line="39" class="highlight-line" data-highlighted="false">      style<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">}</span>
</div><div data-line="40" class="highlight-line" data-highlighted="false">      fixed<span class="token operator">=</span><span class="token punctuation">{</span>user <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">.</span>childImageSharp<span class="token punctuation">.</span>fixed<span class="token punctuation">}</span>
</div><div data-line="41" class="highlight-line" data-highlighted="false">      alt<span class="token operator">=</span><span class="token punctuation">{</span>altText<span class="token punctuation">}</span>
</div><div data-line="42" class="highlight-line" data-highlighted="false">      title<span class="token operator">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span>
</div><div data-line="43" class="highlight-line" data-highlighted="false">    <span class="token operator">/</span><span class="token operator">&gt;</span>
</div><div data-line="44" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="45" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="46" class="highlight-line" data-highlighted="false">
</div><div data-line="47" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> Avatar<span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Thanks for following along!</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create an Avatar Component in Gatsby with TypeScript Part 2: Gatsby Image]]></title>
        <id>https://joelmturner.com/blog/avatar-component-gatsby-2</id>
        <link href="https://joelmturner.com/blog/avatar-component-gatsby-2"/>
        <updated>2019-09-07T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/avatar-component-gatsby-2">Create an Avatar Component in Gatsby with TypeScript Part 2: Gatsby Image</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">In <a target="_blank" rel="noopener" class="chakra-link css-0" to="/blog/avatar-component-gatsby-1">Part 1</a> we put together a simple avatar component that can receive an image url and render it out as a round image.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">To get the full benefit of Gatsby Image we need to make sure our image is pulled into our graphql. We&#x27;ll need to install a couple of plugins to help us here. <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.gatsbyjs.org/packages/gatsby-image"><style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">gatsby-image</code></a>, <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.gatsbyjs.org/packages/gatsby-transformer-sharp"><code class="chakra-code css-t3qbto">gatsby-transformer-sharp</code></a>, <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://www.gatsbyjs.org/packages/gatsby-plugin-sharp"><code class="chakra-code css-t3qbto">gatsby-plugin-sharp</code></a> will be needed.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s install <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">gatsby-image</code></p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> gatsby-image
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Then, if you don&#x27;t already have <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">gatsby-transformer-sharp</code> and <code class="chakra-code css-t3qbto">gatsby-plugin-sharp</code> we can install them.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-bash css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> gatsby-transformer-sharp gatsby-plugin-sharp
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Then in your gatsby-config.js:</p>
<pre title="happy"><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii" title="happy"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-transformer-sharp</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-plugin-sharp</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We&#x27;ll need a source plugin set up as well. For this example we&#x27;re going to use <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">gatsby-source-filesystem</code>. Here what our <code class="chakra-code css-t3qbto">gatsby-config</code> might look like, assuming our images are in <code class="chakra-code css-t3qbto">src/assets</code>.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-js css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">path</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">      <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-source-filesystem</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">assets</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">src</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">assets</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-plugin-sharp</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-transformer-sharp</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token punctuation">]</span><span class="token punctuation">,</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now let&#x27;s drop our image file into our assets folder and create a query for it. We can use the hook for StaticQuery in our component which will make the image available through the data prop. Since we know the size of the image we can add those dimensions in our graphql query so the so the browser doesn&#x27;t have to do all the work.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">useStaticQuery</span><span class="token punctuation">(</span>graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>
<span class="token string">  query {</span>
<span class="token string">    placeholderImage: file(relativePath: { eq: &quot;monster-01-headshot.png&quot; }) {</span>
<span class="token string">      childImageSharp {</span>
<span class="token string">        fixed(width: 75, height: 75) {</span>
<span class="token string">          ...GatsbyImageSharpFixed_withWebp</span>
<span class="token string">        }</span>
<span class="token string">      }</span>
<span class="token string">    }</span>
<span class="token string">  }</span>
<span class="token string"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Then we need to add the <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">Img</code> component from <code class="chakra-code css-t3qbto">gatsby-image</code> so that it can do its magic.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> Img <span class="token keyword">from</span> <span class="token string">&quot;gatsby-image&quot;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Img</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">}</span></span>
      <span class="token attr-name">fixed</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>placeholderImage<span class="token punctuation">.</span>childImageSharp<span class="token punctuation">.</span>fixed<span class="token punctuation">}</span></span>
      <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>altText<span class="token punctuation">}</span></span>
      <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Now let&#x27;s put it all together.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> useStaticQuery<span class="token punctuation">,</span> graphql <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;gatsby&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> Img <span class="token keyword">from</span> <span class="token string">&#x27;gatsby-image&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">useStaticQuery</span><span class="token punctuation">(</span>graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>
<span class="token string">    query {</span>
<span class="token string">      placeholderImage: file(relativePath: { eq: &quot;monster-01-headshot.png&quot; }) {</span>
<span class="token string">        childImageSharp {</span>
<span class="token string">          fixed(width: 75, height: 75) {</span>
<span class="token string">            ...GatsbyImageSharpFixed_withWebp</span>
<span class="token string">          }</span>
<span class="token string">        }</span>
<span class="token string">      }</span>
<span class="token string">    }</span>
<span class="token string">  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> altText<span class="token punctuation">,</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#x27;75px&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#x27;75px&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token string">&#x27;50%&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Img</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">}</span></span>
      <span class="token attr-name">fixed</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>placeholderImage<span class="token punctuation">.</span>childImageSharp<span class="token punctuation">.</span>fixed<span class="token punctuation">}</span></span>
      <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>altText<span class="token punctuation">}</span></span>
      <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span>
    <span class="token punctuation">/&gt;</span></span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">
</div><div data-line="20" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> Avatar<span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">We&#x27;re still missing the ability to pass a url to our avatar component so let&#x27;s add that back in. We can return a regular <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">img</code> element if we get a url. Using <code class="chakra-code css-t3qbto">fixed</code> will be better since we&#x27;re not worried about fluid mode with this component.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#x27;react&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> <span class="token punctuation">{</span> useStaticQuery<span class="token punctuation">,</span> graphql <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#x27;gatsby&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token keyword">import</span> Img <span class="token keyword">from</span> <span class="token string">&#x27;gatsby-image&#x27;</span><span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">useStaticQuery</span><span class="token punctuation">(</span>graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>
<span class="token string">    query {</span>
<span class="token string">      placeholderImage: file(relativePath: { eq: &quot;monster-01-headshot.png&quot; }) {</span>
<span class="token string">        childImageSharp {</span>
<span class="token string">          fixed(width: 75, height: 75) {</span>
<span class="token string">            ...GatsbyImageSharpFixed_withWebp</span>
<span class="token string">          }</span>
<span class="token string">        }</span>
<span class="token string">      }</span>
<span class="token string">    }</span>
<span class="token string">  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> altText<span class="token punctuation">,</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#x27;75px&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#x27;75px&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token string">&#x27;50%&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>altText<span class="token punctuation">}</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">
</div><div data-line="19" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Img</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">}</span></span>
      <span class="token attr-name">fixed</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>placeholderImage<span class="token punctuation">.</span>childImageSharp<span class="token punctuation">.</span>fixed<span class="token punctuation">}</span></span>
      <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>altText<span class="token punctuation">}</span></span>
      <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span>
    <span class="token punctuation">/&gt;</span></span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">
</div><div data-line="24" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> Avatar<span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This allows us to call avatar without us needing to pass a prop of image url. If you need multiple avatar images for your team you can add them to the quite and pass a user prop down and we&#x27;ll grab that from the query. We can name the queries to match the users like so:</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">useStaticQuery</span><span class="token punctuation">(</span>graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>
<span class="token string">      query {</span>
<span class="token string">        monster1: file(relativePath: { eq: &quot;monster-01-headshot.png&quot; }) {</span>
<span class="token string">          childImageSharp {</span>
<span class="token string">            fixed(width: 75, height: 75) {</span>
<span class="token string">              ...GatsbyImageSharpFixed_withWebp</span>
<span class="token string">            }</span>
<span class="token string">          }</span>
<span class="token string">        }</span>
<span class="token string">        monster2: file(relativePath: { eq: &quot;monster-02-headshot.png&quot; }) {</span>
<span class="token string">          childImageSharp {</span>
<span class="token string">            fixed(width: 75, height: 75) {</span>
<span class="token string">              ...GatsbyImageSharpFixed_withWebp</span>
<span class="token string">            }</span>
<span class="token string">          }</span>
<span class="token string">        }</span>
<span class="token string">      }</span>
<span class="token string">    </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">{</span>url<span class="token punctuation">,</span> altText<span class="token punctuation">,</span> title<span class="token punctuation">,</span> user<span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> image <span class="token operator">=</span> data<span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">.</span>childImageSharp<span class="token punctuation">.</span>fixed<span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token operator">...</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">That way we can pass <style data-emotion="css t3qbto">.css-t3qbto{display:inline-block;font-size:0.84em;}</style><code class="chakra-code css-t3qbto">monster1</code> or <code class="chakra-code css-t3qbto">monster2</code> in our <code class="chakra-code css-t3qbto">user</code> prop to have it render that monster.</p>


<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Avatar</span></span> <span class="token attr-name">alText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Monster P. Whittington portrait<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Monster P. Whittington<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>monster1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div></code></pre>

<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Avatar</span></span> <span class="token attr-name">alText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Mons T. Cobblepot portrait<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Mons T. Cobblepot<span class="token punctuation">&quot;</span></span> <span class="token attr-name">user</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>monster2<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</div></code></pre>

<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Nice, now we can type it so it&#x27;s easier to know what name can be used and to see if our structure is correct if we ever need to edit it.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create an Avatar Component in Gatsby with TypeScript Part 1]]></title>
        <id>https://joelmturner.com/blog/avatar-component-gatsby-1</id>
        <link href="https://joelmturner.com/blog/avatar-component-gatsby-1"/>
        <updated>2019-09-06T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/avatar-component-gatsby-1">Create an Avatar Component in Gatsby with TypeScript Part 1</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">In this series we&#x27;re going to take a look at creating a simple avatar component that is typed with TypeScript and has some special goodies in Gatsby land.</p>
<style data-emotion="css 1a90kdi">.css-1a90kdi{width:98%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;overflow:hidden;margin-top:4px;}.css-1a90kdi >*:first-of-type{margin-top:0;margin-left:8px;}</style><div role="alert" class="chakra-alert css-1a90kdi">
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I usually write TypeScript from the start, but I wanted to show each piece individually in case others aren&#x27;t familiar with TypeScript yet.</p>
</div>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Let&#x27;s start by identifying what our needs are for our avatar component.</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should show an image</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should be round</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should accept an image url</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should display an image based on a name (for small sets)</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Cool, now we can start building our avatar. Start with an img element using a placeholder image as src. Add a little bit of styling to make it round and give it a size.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> altText<span class="token punctuation">,</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#x27;75px&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#x27;75px&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token string">&#x27;50%&#x27;</span><span class="token punctuation">,</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>altText<span class="token punctuation">}</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token keyword">export</span> <span class="token keyword">default</span> Avatar<span class="token punctuation">;</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Then we can pass it the image url and alt text. We can see that the component is working in its basic implementation now.</p>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-jsx css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Avatar</span></span>
  <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://res.cloudinary.com/joelmturner/monster-01.png<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">alText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Monster P. Whittington portrait<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Monster P. Whittington<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</div></code></pre>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="contains-task-list css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Should show an image</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Should be round</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled="" checked=""/> Should accept an image url</li>
<li class="task-list-item css-1i5jedo"><input type="checkbox" disabled=""/> Should display an image based on a name (for small sets)</li>
</ul>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Looks good. We&#x27;ve met our first three criteria for this component. In step 2 we&#x27;ll make it more powerful with Gatsby Image.</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Animated CSS Timer Icon]]></title>
        <id>https://joelmturner.com/blog/animated-css-timer-icon</id>
        <link href="https://joelmturner.com/blog/animated-css-timer-icon"/>
        <updated>2017-11-11T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/animated-css-timer-icon">Animated CSS Timer Icon</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I recently had a need for a timer/revert icon that can animate forward and backward.</p>
<a href="#pure-css"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="pure-css">Pure CSS</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I wanted it to be a purely CSS and HTML versus an animated SVG or GIF so it can be manipulated more easily in the browser.</p>
<a href="#adjustable-size"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="adjustable-size">Adjustable Size</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The size of the icon is relative to the wrapper so setting a different font-size will scale the icon proportionally.</p>
<a href="#animation-in-multiple-directions"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="animation-in-multiple-directions">Animation in Multiple Directions</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The icon needs to animate forward and backward as well as have a rest state. The animation uses CSS keyframes based on the classes, &#x27;forward&#x27; and &#x27;backward&#x27;.</p>
<a href="#css-timer-icon"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="css-timer-icon">CSS Timer Icon</h3></a>
<div data-testid="general-observer" class="mdx-embed"><div style="height:500px;width:100%"></div></div>
<a href="#css-timer-icon-as-react-component"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="css-timer-icon-as-react-component">CSS Timer Icon as React Component</h3></a>
<div data-testid="general-observer" class="mdx-embed"><div style="height:500px;width:100%"></div></div>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Best Hand Lettering and Sketches of 2016]]></title>
        <id>https://joelmturner.com/blog/handlettering-best-of-2016</id>
        <link href="https://joelmturner.com/blog/handlettering-best-of-2016"/>
        <updated>2017-01-16T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/handlettering-best-of-2016">My Best Hand Lettering and Sketches of 2016</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">After my year of lettering I continued going with my hand lettering and sketches on a daily basis. Much of my practice was inspired by other hand lettering and sketch artists that I found through Instagram. Looking back on 2016 I can see that I enjoy geometric shapes and ancient ideas/concepts. Here is a collection of my best from 2016.</p>
<a href="#interactive"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="interactive">Interactive</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This is how to get stuck in an analog social loop. <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://i.imgur.com/X6QrcoN.gifv">http://i.imgur.com/X6QrcoN.gifv</a></p>
<style data-emotion="css 1utx3w7">.css-1utx3w7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:4px;}</style><div class="css-1utx3w7"><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://res.cloudinary.com/joelmturner/w_500,h_500,c_fill,q_auto/blog/2017/01/viral-card-1-optimized.jpg"><img src="https://res.cloudinary.com/joelmturner/w_500,h_500,c_fill,q_auto/blog/2017/01/viral-card-1-optimized.jpg" alt=""/></a></p><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://res.cloudinary.com/joelmturner/w_500,h_500,c_fill,q_auto/blog/2017/01/viral-card-2-optimized.jpg"><img src="https://res.cloudinary.com/joelmturner/w_500,h_500,c_fill,q_auto/blog/2017/01/viral-card-2-optimized.jpg" alt=""/></a></p></div>
<a href="#static"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="static">Static</h2></a>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Playing with Type]]></title>
        <id>https://joelmturner.com/blog/playing-with-type</id>
        <link href="https://joelmturner.com/blog/playing-with-type"/>
        <updated>2015-06-26T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/playing-with-type">Playing with Type</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">For the past month and a half, I have played with hand lettering to help me practice more hands-on design. I have chosen to spend about half an hour each day on each (longer on weekends) and not to edit them digitally.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Each day, I post a new lettering sketch on <a href="https://instagram.com/joelmturner/">Instagram</a> and log the medium used on <a href="https://plus.google.com/collection/oWKCX">Google+</a>.</p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here are the creations so far:</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Post Modern Jukebox Art]]></title>
        <id>https://joelmturner.com/blog/pmj-artwork</id>
        <link href="https://joelmturner.com/blog/pmj-artwork"/>
        <updated>2014-12-12T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/pmj-artwork">Post Modern Jukebox Art</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">After seeing Scott Bradlee and Post Modern Jukebox live in Portland on their Eviction Tour, I was inspired to create some promo images.</p>
<a href="#post-modern-jukebox-artwork"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="post-modern-jukebox-artwork">Post Modern Jukebox Artwork</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This first graphic is based on the design of the Post Modern Jukebox website. <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://res.cloudinary.com/joelmturner/q_auto/blog/2014/12/PMJ-Promotional-Poster.jpg"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2014/12/PMJ-Promotional-Poster.jpg" alt="Post Modern Jukebox Promotional Poster"/></a></p>
<a href="#scott-bradlee-art"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="scott-bradlee-art">Scott Bradlee Art</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">This one is for the Scott Bradlee who put the group together, writes the arrangements, and plays the piano. The poster is based on the jazz style event posters. <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://res.cloudinary.com/joelmturner/q_auto/blog/2014/12/Scott-Bradlee-Event-Poster.jpg"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2014/12/Scott-Bradlee-Event-Poster.jpg" alt="Scott Bradlee Event Poster"/></a></p>
<a href="#robyn-adele-anderson-art"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="robyn-adele-anderson-art">Robyn Adele Anderson Art</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The next one is a promotion of one of the main singers, Robyn Adele-Anderson. <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://res.cloudinary.com/joelmturner/q_auto/blog/2014/12/Robyn-Eviction-Tour-Promo-Poster.jpg"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2014/12/Robyn-Eviction-Tour-Promo-Poster.jpg" alt="Robyn Adele Anderson Eviction Tour Promo Poster"/></a></p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Sassy With Sass: Nesting]]></title>
        <id>https://joelmturner.com/blog/sassy-with-sass</id>
        <link href="https://joelmturner.com/blog/sassy-with-sass"/>
        <updated>2014-10-03T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/sassy-with-sass">Getting Sassy With Sass: Nesting</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">As I&#x27;m learning to use Sass I decided to jot down some of the basics for reference. Most of this is coming from <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.hamptoncatlin.com/">Hampton Catlin</a>&#x27;s <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://teamtreehouse.com/library/sass-basics">Sass Basics</a> course on <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://referrals.trhou.se/joelmturner">Treehouse</a> (referral).</p>
<a href="#nesting-selectors"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="nesting-selectors">Nesting Selectors</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The selectors can be nested for ease of writing and reading. This can help organize code in a way that like selectors are together. It also keeps us from having to repeat strings of selectors. A quick example would be:</p>
<a href="#sass"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="sass">Sass:</h3></a>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-scss css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">.selector1 </span><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token selector">.selector2 </span><span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#css-output"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="css-output">CSS Output:</h3></a>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-css css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">.selector1 .selector2</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">You can even go deeper if you would like. Let&#x27;s take a look at 4 levels deep (the suggested maximum depth for Sass).</p>
<a href="#sass-1"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="sass-1">Sass:</h3></a>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-scss css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">.selector1 </span><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token selector">.selector2 </span><span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token selector">.box </span><span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">      <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">      <span class="token selector">h1 </span><span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">        <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#css-output-1"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="css-output-1">CSS Output:</h3></a>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-css css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">.selector1 .selector2</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token selector">.selector1 .selector2 .box</span> <span class="token punctuation">{</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false"><span class="token selector">.selector1 .selector2 .box h1</span> <span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#using-the--symbol"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="using-the--symbol">Using the &amp; Symbol</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">There is a helper character that makes referencing parent selectors much easier. This character is the <strong>ampersand (&amp;)</strong> symbol.</p>
<a href="#sass-2"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="sass-2">Sass:</h3></a>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-scss css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">.blog </span><span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token selector">&gt; h1 </span><span class="token punctuation">{</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false">    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token selector">.entry </span><span class="token punctuation">{</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">    <span class="token selector">h1 </span><span class="token punctuation">{</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false">      <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false">      <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">    <span class="token selector">p </span><span class="token punctuation">{</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false">      <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false">      <span class="token property">margin</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">      <span class="token selector">html.csscolumns <span class="token parent important">&amp;</span> </span><span class="token punctuation">{</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">        <span class="token property">column-count</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">        <span class="token property">column-gap</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false">        <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false">    <span class="token selector">a </span><span class="token punctuation">{</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false">      <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">      <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false">        <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
</div><div data-line="24" class="highlight-line" data-highlighted="false">      <span class="token punctuation">}</span>
</div><div data-line="25" class="highlight-line" data-highlighted="false">    <span class="token punctuation">}</span>
</div><div data-line="26" class="highlight-line" data-highlighted="false">  <span class="token punctuation">}</span>
</div><div data-line="27" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>
<a href="#css-output-2"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h3 class="chakra-heading css-2sl8lr" id="css-output-2">CSS Output:</h3></a>
<pre><style data-emotion="css 18y1iii">.css-18y1iii{display:block;border:1px solid;border-color:orange.100;font-size:0.84em;width:100%;overflow-x:auto;padding-top:2px;padding-bottom:2px;margin-top:4px;margin-bottom:4px;}.css-18y1iii[data-filename]::before{content:attr(data-filename);padding:2px;background:gray.200;display:block;font-size:smaller;margin-bottom:0.5rem;}.css-18y1iii[data-filename]{padding-top:0px;}.css-18y1iii .highlight-line{position:relative;border-left:5px solid transparent;padding-left:8px;padding-right:2px;}.css-18y1iii .highlight-line::before{content:attr(data-line);position:absolute;top:0px;left:1px;color:gray.500;}</style><code class="hljs language-css css-18y1iii"><div data-line="1" class="highlight-line" data-highlighted="false"><span class="token selector">.blog &gt; h1</span> <span class="token punctuation">{</span>
</div><div data-line="2" class="highlight-line" data-highlighted="false">  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</div><div data-line="3" class="highlight-line" data-highlighted="false">  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
</div><div data-line="4" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="5" class="highlight-line" data-highlighted="false"><span class="token selector">.blog .entry h1</span> <span class="token punctuation">{</span>
</div><div data-line="6" class="highlight-line" data-highlighted="false">  <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
</div><div data-line="7" class="highlight-line" data-highlighted="false">  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
</div><div data-line="8" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="9" class="highlight-line" data-highlighted="false"><span class="token selector">.blog .entry p</span> <span class="token punctuation">{</span>
</div><div data-line="10" class="highlight-line" data-highlighted="false">  <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>
</div><div data-line="11" class="highlight-line" data-highlighted="false">  <span class="token property">margin</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
</div><div data-line="12" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="13" class="highlight-line" data-highlighted="false"><span class="token selector">html.csscolumns .blog .entry p</span> <span class="token punctuation">{</span>
</div><div data-line="14" class="highlight-line" data-highlighted="false">  <span class="token property">column-count</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
</div><div data-line="15" class="highlight-line" data-highlighted="false">  <span class="token property">column-gap</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
</div><div data-line="16" class="highlight-line" data-highlighted="false">  <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
</div><div data-line="17" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="18" class="highlight-line" data-highlighted="false"><span class="token selector">.blog .entry a</span> <span class="token punctuation">{</span>
</div><div data-line="19" class="highlight-line" data-highlighted="false">  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</div><div data-line="20" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div><div data-line="21" class="highlight-line" data-highlighted="false"><span class="token selector">.blog .entry a:hover</span> <span class="token punctuation">{</span>
</div><div data-line="22" class="highlight-line" data-highlighted="false">  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
</div><div data-line="23" class="highlight-line" data-highlighted="false"><span class="token punctuation">}</span>
</div></code></pre>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Choosing the Decisions We Make]]></title>
        <id>https://joelmturner.com/blog/decisions-we-make</id>
        <link href="https://joelmturner.com/blog/decisions-we-make"/>
        <updated>2014-01-21T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/decisions-we-make">Choosing the Decisions We Make</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">You know that feeling of being run down by the overwhelming weight of the decisions that you have to make on a regular basis? I definitely have, and I&#x27;ve been practicing a solution that is working for me.</p>
<a href="#decisions-use-energy"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="decisions-use-energy">Decisions Use Energy</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">All decisions take up energy as we try process them. I&#x27;m starting to see this as neither good nor bad. What is important is where we prefer to extend our energy. This doesn&#x27;t mean that I want to automate everything and then sleep on the beach all day. There is a therapeutic beauty in daily practice of things we enjoy, like a <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.youtube.com/watch?v=lL9BiNuImws">Japanese Tea Ceremony</a>. I&#x27;ll share an example from my experience. Making a decision of which trail or path to run on is a decision that I enjoy making. Trying to figure out which bills I need to pay at what time is not a decision process I enjoy. From <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.thesimpledollar.com/automating-small-decisions/">The Simple Dollar</a></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">If we can find ways to take some of those decisions out of our hands, we reduce the number of active decisions we have to make in a given day. Thus, our decision fatigue is reduced and we’re less likely to make poor decisions due to such fatigue. Our solution is to automate little decisions. We do this by spending time up front thinking of ways to eliminate some of our little regular decisions. Even eliminating tiny decisions really helps.</p>
<a href="#automating-tasks-that-arent-important"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="automating-tasks-that-arent-important">Automating Tasks That Aren&#x27;t Important</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">There are so many tools available that can help us with those decisions that we don&#x27;t enjoy as much. It might take a little work up front but the ease of mind later on is totally worth it. Using the bill paying example above, I have set up my bills to be paid automatically based on the days that I get paid. This helps free my mind from trying to hold it all in my mental calendar. It is so simple and it is very easy to forget that it is simple.</p>
<a href="#choosing-the-decisions-we-make"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="choosing-the-decisions-we-make">Choosing the Decisions We Make</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Automating some of these tasks allows me to enjoy the tasks/decisions that I enjoy to have as part of my <a title="Creating a Daily Routine for Freedom" href="/blog/daily-routine-freedom"><style data-emotion="css 744h54">.css-744h54:hover,.css-744h54[data-hover]{-webkit-text-decoration:underline;text-decoration:underline;}</style><span class="chakra-text css-744h54">daily routine</span></a>. By doing this, I feel more fulfilled and have more energy to give to my favorite tasks. I can reassess these automated tasks and the tasks that I enjoy every few months to see if they are still working to my benefit. This is much less upkeep than having to deal with them all daily. What decisions do you enjoy making? Which would you prefer not to make as often? Are you able to automate some of those tasks?</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating a Daily Routine for Freedom]]></title>
        <id>https://joelmturner.com/blog/daily-routine-freedom</id>
        <link href="https://joelmturner.com/blog/daily-routine-freedom"/>
        <updated>2014-01-17T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/daily-routine-freedom">Creating a Daily Routine for Freedom</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">The more I explore myself, the more I realize that my &quot;freedom&quot; is not from not having anything to do but by doing things that give me purpose.</p>
<a href="#watching-the-clock-with-nothing-to-do"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="watching-the-clock-with-nothing-to-do">Watching the Clock with Nothing to Do</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">I spent many years without a daily routine. Not having a routine made me watch the clock, not getting anything done and I found it hard to feel fulfilled at the end of the day. Not having a routine made me check the time often and gave me a feeling like I was wasting time in some way. I wasn&#x27;t sure how to get things done or which item I should start next. There were no priorities and therefore, no way to know what was important.</p>
<a href="#creating-a-daily-routine"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="creating-a-daily-routine">Creating a Daily Routine</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">It seemed counter intuitive to me but setting a full daily routine has helped me feel more free. I think part of the freedom feeling is feeling fulfilled. Doing what is important to me helps me feel like I have taken care of my list, even if some office work doesn&#x27;t get finished. Creating a daily routine for me is about simplicity. If I do the things that are most important for my welfare, I feel fulfilled. For me, if I do my daily meditation and mantra practice, I feel good, even if more work came in than I was able to finish. I have noticed that doing something daily, even if it is only for a few minutes a day, makes me much better at it. Aly Dunne (<a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://twitter.com/thewayofmantra">@thewayofmantra</a>) explains how a <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://thewayofmantra.com/daily-practice-the-unstoppable-power/">daily practice is like a river</a> wearing down rock over time. Here is a quick view of my daily routine:</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo">Wake up, meditate, chant</li>
<li class="css-1i5jedo">Drink elixir (modified from <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://kaleuniversity.org/recipes/apple-cider-vinegar-elixir/">Apple Cider Vinegar Elixir</a>), walk dogs, start hot water for tea, sing to <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://plus.google.com/+JoelTurnerGo/posts/UNyep6bPPCy">my kombucha scoby</a></li>
<li class="css-1i5jedo">Work on graphic/web projects</li>
<li class="css-1i5jedo">Eat lunch</li>
<li class="css-1i5jedo">Work on graphic/web projects</li>
<li class="css-1i5jedo">Go for run, walk dogs, walk by myself</li>
<li class="css-1i5jedo">Meet with friends, network</li>
<li class="css-1i5jedo">Wind down, sleep</li>
</ul>
<a href="#resources-for-optimizing-the-daily-routine"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="resources-for-optimizing-the-daily-routine">Resources for Optimizing the Daily Routine</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Here are some of the tools and resources that help me develop and stick with my routine.</p>
<style data-emotion="css dyc0h3">.css-dyc0h3{padding-top:2px;padding-left:4px;margin-left:2px;}</style><ul class="css-dyc0h3">
<style data-emotion="css 1i5jedo">.css-1i5jedo{padding-bottom:1px;}</style><li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://thewayofmantra.com">Aly Dunne</a>, my Sanskrit Mantra teacher</li>
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://insighttimer.com/">Insightly</a>, meditation timer</li>
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://blog.bufferapp.com/the-daily-routines-of-famous-entrepreneurs-and-how-to-design-your-own-master-routine">Amazing routines of 7 successful entrepreneurs</a>, Buffer blog</li>
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.parade.com/35748/parade/what-was-benjamin-franklins-daily-routine/">Benjamin Franklin</a>, Parade</li>
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://leobabauta.com/">Leo Babauta</a>, founder of <a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://zenhabits.net/">Zen Habits</a></li>
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://chrome.google.com/webstore/detail/stayfocusd/laankejkbhbdhmipfmgcngdelahlfoji">StayFocused</a>, Chrome tab blocking app</li>
<li class="css-1i5jedo"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://bufferapp.com">Buffer</a>, social media sharing tool</li>
</ul>
<a href="#your-routine"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="your-routine">Your Routine</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">Do you have a daily routine? If so, what have you noticed by following it/not following it?</p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Doctor's Companions]]></title>
        <id>https://joelmturner.com/blog/doctors-companions</id>
        <link href="https://joelmturner.com/blog/doctors-companions"/>
        <updated>2013-11-25T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>(The post <a href="https://joelmturner.com/blog/doctors-companions">The Doctor's Companions</a> appeared first on <a href="https://joelmturner.com">Joel M Turner Blog</a>.)</em></p><style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w">In honor of the 50th Anniversary of Doctor Who, my wife and I decided to do a little tribute to the Doctor&#x27;s companions in the series. This post covers some of the companions from the new series. Curating assistance on this post by Suzanne Turner (<a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://delysiastyle.com">DelysiaStyle</a>).</p>
<a href="#rose-tyler-billie-piper"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="rose-tyler-billie-piper">Rose Tyler (Billie Piper)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/Rose-Tyler-Billie-Piper-White-Dress.jpg" alt="Rose Tyler Billie Piper White Dress"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://userserve-ak.last.fm/serve/_/50207127/Billie+Piper+hq+png.png">Image Credit</a></p>
<a href="#jack-harkness-john-barrowman"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="jack-harkness-john-barrowman">Jack Harkness (John Barrowman)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/John-Barrowman-smile.jpg" alt="John Barrowman smile"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://lusciousandlovely19.files.wordpress.com/2013/08/john-barrowman-1.jpg?">Image Credit</a></p>
<a href="#mickey-smith-noel-clarke"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="mickey-smith-noel-clarke">Mickey Smith (Noel Clarke)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/Noel-Clarke-portrait.jpg" alt="Noel Clarke portrait"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.bbc.co.uk/blogs/bbcthree/2011/07/noelclarkeqa1.shtml">Image Credit</a></p>
<a href="#donna-noble-catherine-tate"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="donna-noble-catherine-tate">Donna Noble (Catherine Tate)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/Catherine-Tate-blue-shirt.jpg" alt="Catherine Tate blue shirt"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://venus.provocateuse.com/show/catherine_tate">Image Credit</a></p>
<a href="#martha-jones-freema-agyeman"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="martha-jones-freema-agyeman">Martha Jones (Freema Agyeman)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/Freema-Agyeman-blue-shirt.jpg" alt="Freema Agyeman blue shirt"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="https://telestrekoza.com/link-gallery/albums/British_shows/Law_Order_UK/Cast/Season_1/Law_Order_UK_S1_Freema_Agyeman_002.jpg">Image Credit</a></p>
<a href="#wilfred-mott-bernard-cribbins"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="wilfred-mott-bernard-cribbins">Wilfred Mott (Bernard Cribbins)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/Bernard-Cribbins.jpg" alt="Bernard Cribbins"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.david-tennant-news.com/blog/bernard-cribbins-is-on-graham-norton-s-bbc-radio-2-programme-today-at-10-am/">Image Credit</a></p>
<a href="#amy-pond-karen-gillan"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="amy-pond-karen-gillan">Amy Pond (Karen Gillan)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/Karen-Gillan-blue.jpg" alt="Karen Gillan blue"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.wallcg.com/women-redheads-manhattan-karen-gillan-doctor-who-well-83695/">Image Credit</a></p>
<a href="#rory-williams-arthur-darvill"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="rory-williams-arthur-darvill">Rory Williams (Arthur Darvill)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/Arthur-Darvill.jpg" alt="Arthur Darvill"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.standard.co.uk/goingout/theatre/dr-who-star-arthur-darvill-has-laptop-stolen-by-burglars-8225957.html">Image Credit</a></p>
<a href="#river-song-alex-kingston"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="river-song-alex-kingston">River Song (Alex Kingston)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/Alex-Kingston-black-dress.jpg" alt="Alex Kingston black dress"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.picstopin.com/500/alex-kingston-/http:%7C%7C24*media*tumblr*com%7Ctumblr_md4sqnRVpB1qif9qto1_500*png/">Image Credit</a></p>
<a href="#craig-owens-james-corden"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="craig-owens-james-corden">Craig Owens (James Corden)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/James-Corden-blue.jpg" alt="James Corden blue"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://hamishbrown.com/james-corden/">Image Credit</a></p>
<a href="#clara-oswald-jenna-louise-coleman"><style data-emotion="css 2sl8lr">.css-2sl8lr{line-height:1em;margin-bottom:1em;margin-top:2em;font-weight:bold;scroll-margin-top:10px;scroll-snap-margin:10px;}.css-2sl8lr:hover,.css-2sl8lr[data-hover]{color:brand.light.400;-webkit-text-decoration:underline;text-decoration:underline;}.css-2sl8lr:hover::before,.css-2sl8lr[data-hover]::before{content:"#";position:relative;margin-left:-1.4ch;padding-right:0.5ch;color:brand.light.400;-webkit-text-decoration:none;text-decoration:none;}</style><h2 class="chakra-heading css-2sl8lr" id="clara-oswald-jenna-louise-coleman">Clara Oswald (Jenna-Louise Coleman)</h2></a>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><img src="https://res.cloudinary.com/joelmturner/q_auto/blog/2013/11/Jenna-Louise-Coleman.jpg" alt="Jenna-Louise Coleman yellow lace"/></p>
<style data-emotion="css 5kxo3w">.css-5kxo3w{margin-top:6px;margin-bottom:6px;line-height:tall;}</style><p class="chakra-text css-5kxo3w"><a target="_blank" rel="nofollow noopener noreferrer" class="chakra-link css-0" href="http://www.mirror.co.uk/tv/tv-news/jenna-louise-coleman-doctor-who-sidekick-1781315">Image Credit</a></p>]]></content>
        <author>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </author>
        <contributor>
            <name>Joel M Turner</name>
            <uri>https://twitter.com/joelmturner</uri>
        </contributor>
    </entry>
</feed>