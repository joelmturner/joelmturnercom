{"remainingRequest":"/Users/joelmturner/Desktop/Dev/joelmturner/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"loose\":true,\"modules\":false,\"useBuiltIns\":\"usage\",\"shippedProposals\":true,\"targets\":{\"browsers\":[\">0.25%\",\"not dead\"]}}],[\"@babel/preset-flow\"],[\"@babel/preset-react\",{\"useBuiltIns\":true,\"pragma\":\"React.createElement\"}],[\"/Users/joelmturner/Desktop/Dev/joelmturner/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"@babel/plugin-proposal-class-properties\",{\"loose\":true}],\"@babel/plugin-syntax-dynamic-import\",\"babel-plugin-macros\",[\"@babel/plugin-transform-runtime\",{\"helpers\":true,\"regenerator\":true}],[\"/Users/joelmturner/Desktop/Dev/joelmturner/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/joelmturner/Desktop/Dev/joelmturner/node_modules/docz-core/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/joelmturner/Desktop/Dev/joelmturner/src/components/Grid/Row.js","dependencies":[{"path":"/Users/joelmturner/Desktop/Dev/joelmturner/src/components/Grid/Row.js","mtime":1540676012823},{"path":"/Users/joelmturner/Desktop/Dev/joelmturner/node_modules/cache-loader/dist/cjs.js","mtime":1540704809901},{"path":"/Users/joelmturner/Desktop/Dev/joelmturner/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/joelmturner/Desktop/Dev/joelmturner/src/components/Grid/Row.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n      \", \";\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n      overflow-y: auto;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      grid-gap: \", \";\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: \", \";\\n  justify-content: center;\\n  \", \";\\n  \", \";\\n  \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled, { css } from 'styled-components';\nexport var StyledRow = styled.div(_templateObject(), function (_ref) {\n  var _ref$maxColumns = _ref.maxColumns,\n      maxColumns = _ref$maxColumns === void 0 ? 12 : _ref$maxColumns;\n  return \"repeat(\".concat(maxColumns, \", 1fr)\");\n}, function (_ref2) {\n  var gap = _ref2.gap;\n  return gap && css(_templateObject2(), gap);\n}, function (_ref3) {\n  var hasOverflow = _ref3.hasOverflow;\n  return hasOverflow && css(_templateObject3());\n}, function (_ref4) {\n  var style = _ref4.style;\n  return style && css(_templateObject4(), style);\n});\nStyledRow.defaultProps = {\n  maxColumns: 12\n  /**\n   * Creates a row with a default of 12 columns. Use [Column](/#column) inside. Rows can be used inside a [Grid](/#grid) or on their own.\n   */\n\n};\n\nvar Row = function Row(_ref5) {\n  var forceFullPage = _ref5.forceFullPage,\n      maxColumns = _ref5.maxColumns,\n      hasOverflow = _ref5.hasOverflow,\n      gap = _ref5.gap,\n      style = _ref5.style,\n      children = _ref5.children;\n  return React.createElement(StyledRow, {\n    forceFullPage: forceFullPage,\n    maxColumns: maxColumns,\n    hasOverflow: hasOverflow,\n    gap: gap,\n    style: style,\n    children: children,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n};\n/** @component */\n\n\nvar _default = Row;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StyledRow, \"StyledRow\", \"/Users/joelmturner/Desktop/Dev/joelmturner/src/components/Grid/Row.js\");\n  reactHotLoader.register(Row, \"Row\", \"/Users/joelmturner/Desktop/Dev/joelmturner/src/components/Grid/Row.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/joelmturner/Desktop/Dev/joelmturner/src/components/Grid/Row.js\");\n  leaveModule(module);\n})();\n\n;\nRow.__docgenInfo = {\n  \"description\": \"Creates a row with a default of 12 columns. Use [Column](/#column) inside. Rows can be used inside a [Grid](/#grid) or on their own.\",\n  \"methods\": [],\n  \"displayName\": \"Row\",\n  \"props\": {\n    \"forceFullPage\": {\n      \"required\": false,\n      \"flowType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"100vw with padding\"\n    },\n    \"maxColumns\": {\n      \"required\": false,\n      \"flowType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"max number of columns; no more than 12\"\n    },\n    \"hasOverflow\": {\n      \"required\": false,\n      \"flowType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"gap\": {\n      \"required\": false,\n      \"flowType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"style\": {\n      \"required\": false,\n      \"flowType\": {\n        \"name\": \"Object\"\n      },\n      \"description\": \"additional styles\"\n    },\n    \"children\": {\n      \"required\": false,\n      \"flowType\": {\n        \"name\": \"ReactNode\",\n        \"raw\": \"React.Node\"\n      },\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/joelmturner/Desktop/Dev/joelmturner/src/components/Grid/Row.js"],"names":["React","styled","css","StyledRow","div","maxColumns","gap","hasOverflow","style","defaultProps","Row","forceFullPage","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAAuD,mBAAvD;AAcA,OAAO,IAAMC,SAAyC,GAAGF,MAAM,CAACG,GAAV,oBAE3B;AAAA,6BAAGC,UAAH;AAAA,MAAGA,UAAH,gCAAgB,EAAhB;AAAA,0BAA6CA,UAA7C;AAAA,CAF2B,EAIlD;AAAA,MAAGC,GAAH,SAAGA,GAAH;AAAA,SACAA,GAAG,IACHJ,GADG,qBAEWI,GAFX,CADH;AAAA,CAJkD,EASlD;AAAA,MAAGC,WAAH,SAAGA,WAAH;AAAA,SACAA,WAAW,IACXL,GADW,oBADX;AAAA,CATkD,EAclD;AAAA,MAAGM,KAAH,SAAGA,KAAH;AAAA,SACAA,KAAK,IACLN,GADK,qBAEDM,KAFC,CADL;AAAA,CAdkD,CAA/C;AAqBPL,SAAS,CAACM,YAAV,GAAyB;AACvBJ,EAAAA,UAAU,EAAE;AAGd;;;;AAJyB,CAAzB;;AAOA,IAAMK,GAAG,GAAG,SAANA,GAAM;AAAA,MAAGC,aAAH,SAAGA,aAAH;AAAA,MAAkBN,UAAlB,SAAkBA,UAAlB;AAAA,MAA8BE,WAA9B,SAA8BA,WAA9B;AAAA,MAA2CD,GAA3C,SAA2CA,GAA3C;AAAA,MAAgDE,KAAhD,SAAgDA,KAAhD;AAAA,MAAuDI,QAAvD,SAAuDA,QAAvD;AAAA,SACV,oBAAC,SAAD;AACE,IAAA,aAAa,EAAED,aADjB;AAEE,IAAA,UAAU,EAAEN,UAFd;AAGE,IAAA,WAAW,EAAEE,WAHf;AAIE,IAAA,GAAG,EAAED,GAJP;AAKE,IAAA,KAAK,EAAEE,KALT;AAME,IAAA,QAAQ,EAAEI,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU;AAAA,CAAZ;AAWA;;;eACeF,G;AAAf;;;;;;;;;;;;0BAxCaP,S;0BA4BPO,G","sourcesContent":["// @flow\nimport * as React from 'react'\nimport styled, { css, type ReactComponentStyled } from 'styled-components'\n\ntype RowProps = {\n  /** 100vw with padding */\n  forceFullPage?: boolean,\n  /** max number of columns; no more than 12 */\n  maxColumns?: number,\n  hasOverflow?: boolean,\n  gap?: string,\n  /** additional styles */\n  style?: Object,\n  children?: React.Node,\n}\n\nexport const StyledRow: ReactComponentStyled<RowProps> = styled.div`\n  display: grid;\n  grid-template-columns: ${({ maxColumns = 12 }: RowProps) => `repeat(${maxColumns}, 1fr)`};\n  justify-content: center;\n  ${({ gap }: RowProps) =>\n    gap &&\n    css`\n      grid-gap: ${gap};\n    `};\n  ${({ hasOverflow }: RowProps) =>\n    hasOverflow &&\n    css`\n      overflow-y: auto;\n    `};\n  ${({ style }: RowProps) =>\n    style &&\n    css`\n      ${style};\n    `};\n`\n\nStyledRow.defaultProps = {\n  maxColumns: 12,\n}\n\n/**\n * Creates a row with a default of 12 columns. Use [Column](/#column) inside. Rows can be used inside a [Grid](/#grid) or on their own.\n */\nconst Row = ({ forceFullPage, maxColumns, hasOverflow, gap, style, children }: RowProps) => (\n  <StyledRow\n    forceFullPage={forceFullPage}\n    maxColumns={maxColumns}\n    hasOverflow={hasOverflow}\n    gap={gap}\n    style={style}\n    children={children}\n  />\n)\n\n/** @component */\nexport default Row\n"]}]}