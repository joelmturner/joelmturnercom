---
import { FUN_STUFF } from '@lib/constants';
import { css } from 'styled-system/css';
---

<p
  class={css({
    display: 'flex',
    alignItems: 'center',
    justifyContent: { base: 'center', md: 'flex-start' },
    gap: 2,
    height: '1em',
    lineHeight: '1',
    p: 0,
    m: 0,
    width: 'max-content',
    fontSize: '3xl',
    mx: 'auto',
  })}
>
  I like to
  <span
    id="fun-stuff"
    class={css({
      display: 'inline-block',
      overflow: 'hidden',
      height: '1em',
      position: 'relative',
      minWidth: '75px',
      fontSize: '3xl',
    })}
  >
    <span
      class={css({
        position: 'absolute',
        display: 'block',
        bottom: 0,
        transform: 'translateY(0)',
        transition: 'transform 0.5s ease-in-out',
        willChange: 'transform, opacity',
        color: 'brand.200',
      })}
    >
      {
        FUN_STUFF.map((text) => {
          return (
            <span
              class={css({
                display: 'block',
                m: 0,
                p: 0,
                lineHeight: '1',
              })}
            >
              {text}
            </span>
          );
        })
      }
    </span>
  </span>
</p>

<script>
  import { FUN_STUFF } from '@lib/constants';

  const funStuff = document.getElementById('fun-stuff');
  if (funStuff) {
    const slidePanel = funStuff.children[0] as HTMLSpanElement;
    const height = slidePanel?.children[0]?.getBoundingClientRect().height;
    const funStuffTextArrayLength = FUN_STUFF.length;
    let funStuffTextArrayIndex = 0;

    setInterval(() => {
      funStuff.classList.remove('animate_enter');
      funStuff.classList.add('animate_exit');
      if (funStuffTextArrayIndex === funStuffTextArrayLength) {
        funStuffTextArrayIndex = 0;
      }

      slidePanel.style.transform = `translateY(${height * funStuffTextArrayIndex}px)`;
      funStuffTextArrayIndex++;
    }, 2500);
  }
</script>
