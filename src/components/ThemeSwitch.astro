---
import { css } from 'styled-system/css';

const themeIconStyles = css({
  w: 6,
  h: 6,
  py: 1,
  px: 1,
  color: 'accent',
  cursor: 'pointer',
  '&:hover': {
    color: { _light: 'gray.700', _dark: 'gray.300' },
  },
  '&.active': {
    color: { _light: 'gray.800', _dark: 'gray.700' },
  },
});
---

<div
  class={css({
    display: 'flex',
    gap: 1,
    alignItems: 'center',
    rounded: 'md',
    bg: { _light: 'orange.100', _dark: 'slate.700' },
    h: 6,
    overflow: 'hidden',
    '& > [data-theme-value]': {
      bg: 'transparent',
      transition: 'background-color 0.2s ease-in-out',
    },
    '& > [data-theme-value="light"].active': {
      bg: 'brand.200',
    },
    '& > [data-theme-value="system"].active': {
      bg: 'brand.200',
    },
    '& > [data-theme-value="dark"].active': {
      bg: 'brand.200',
    },
  })}
  id="themeSwitch"
>
  <svg
    data-theme-value="light"
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class={themeIconStyles}
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
    ></path>
  </svg>

  <svg
    data-theme-value="system"
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class={themeIconStyles}
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M21 7.5l-2.25-1.313M21 7.5v2.25m0-2.25l-2.25 1.313M3 7.5l2.25-1.313M3 7.5l2.25 1.313M3 7.5v2.25m9 3l2.25-1.313M12 12.75l-2.25-1.313M12 12.75V15m0 6.75l2.25-1.313M12 21.75V19.5m0 2.25l-2.25-1.313m0-16.875L12 2.25l2.25 1.313M21 14.25v2.25l-2.25 1.313m-13.5 0L3 16.5v-2.25"
    ></path>
  </svg>

  <svg
    data-theme-value="dark"
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class={themeIconStyles}
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"
    ></path>
  </svg>
</div>

<style>
  :global(.dark) {
    data-color-mode: dark;
  }
</style>

<script is:inline>
  let baseValue;
  const theme = localStorage.getItem('theme');
  const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';

  if (theme !== null) {
    baseValue = theme;
  } else {
    baseValue = systemTheme;
  }

  function updateTheme(value) {
    const theme = value === 'system' ? systemTheme : value;

    // set the value on root
    document.documentElement.setAttribute(`data-color-mode`, theme);

    // set the active class on the active mode icon
    document.querySelector(`[data-theme-value="${value}"]`)?.classList.add('active');

    // update the logo based on mode
    const logosByTheme = {
      light: `https://res.cloudinary.com/joelmturner/image/upload/f_auto,q_auto/v1673573341/jmt-logo-light-500w_2_pmadzj.png`,
      dark: `https://res.cloudinary.com/joelmturner/image/upload/f_auto,q_auto/v1673573341/jmt-logo-dark-500w_2_pxay5e.png`,
    };
    document.querySelector(`[data-logo]`)?.setAttribute('src', logosByTheme[theme]);

    localStorage.setItem('theme', value);
  }

  updateTheme(baseValue);

  document.getElementById('themeSwitch').addEventListener('click', (event) => {
    const selected = event.target;
    if (
      !selected.closest('[data-theme-value]') ||
      selected.closest('[data-theme-value]') === undefined
    )
      return;
    document
      .getElementById('themeSwitch')
      .querySelectorAll('svg')
      .forEach((svg) => {
        svg.classList.remove('active');
      });
    updateTheme(selected.closest('[data-theme-value]')?.getAttribute('data-theme-value') ?? 'dark');
  });
</script>
