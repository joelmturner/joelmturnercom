---
import { cloudinary } from '@lib/cloudinary';
import { css, cx } from 'styled-system/css';
import { prose } from 'styled-system/recipes';
import FormattedDate from './FormattedDate.astro';
import { type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import { getAdjustedImageSize } from '@lib/utils';

export type Props = {
  post: CollectionEntry<'blog'>;
  featured?: boolean;
};
const { post, featured } = Astro.props;

const featuredStyles = {
  w: 'full',
  mb: { base: 0, lg: 4 },
  textAlign: 'center',
  '& img': {
    w: 'full',
  },
};

const coverImgUrl = post.data.cover
  ? cloudinary.url(post.data.cover, {
      secure: true,
      transformation: [
        {
          width: featured ? getAdjustedImageSize(770) : 770,
          height: featured ? getAdjustedImageSize(385) : 385,
          crop: 'fill',
          gravity: 'center',
        },
      ],
      fetch_format: 'auto',
      quality: 'auto',
    })
  : cloudinary.url('blog-post-card', {
      secure: true,
      format: 'png',
      fetch_format: 'auto',
      quality: 'auto',
      transformation: [
        {
          width: 720,
          height: 360,
        },
        {
          overlay: {
            text: post.data.title,
            font_family: 'Helvetica',
            font_size: 40,
            font_weight: 'bold',
            line_spacing: 10,
          },
          width: 450,
          height: 250,
          crop: 'fit',
        },
        {
          flags: 'layer_apply',
          gravity: 'west',
          x: 225,
          y: 0,
        },
      ],
    });
---

<div
  class={cx(
    css({
      w: { base: 'full', lg: 'calc(50% - 1rem)' },
      textAlign: { base: 'center', lg: 'left' },
      '& *': {
        textDecoration: 'none',
        transition: '0.2s ease',
      },
      '&:hover h4': {
        color: 'accent',
      },
      '&:hover img': {
        shadowColor: {
          _light: 'slate.100',
          _dark: 'slate.800',
        },
        shadow: '0 20px 25px -5px var(--shadow-color), 0 8px 10px -6px var(--shadow-color)',
      },
      ...(featured ? featuredStyles : {}),
    })
  )}
>
  <a href={`/blog/${post.slug}/`} class={prose({ size: '2xl' })}>
    {
      coverImgUrl ? (
        <Image
          width={770}
          height={385}
          src={coverImgUrl}
          alt={post.data.title}
          transition:name={`${post.data.title}-image`}
          class={cx(
            'not-prose',
            css({
              mb: 1,
              borderRadius: 'xl',
            })
          )}
          widths={[240, 540, 720, 770]}
          sizes={`(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, 770px`}
          loading="lazy"
        />
      ) : null
    }
    <h4
      class={css({
        mt: 3,
        mb: 1,
        lineHeight: 1.1,
        fontSize: { base: '2xl', md: '3xl' },
      })}
    >
      {post.data.title}
    </h4>
    <p class={css({ m: 0 })}>
      <FormattedDate date={post.data.date} />
    </p>
  </a>
</div>
