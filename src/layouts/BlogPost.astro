---
import Badge from '@components/Badge.astro';
import FormattedDate from '@components/FormattedDate.astro';
import { slugify } from '@lib/posts';
import { CldImage } from 'astro-cloudinary';
import type { CollectionEntry } from 'astro:content';
import { css, cx } from 'styled-system/css';
import { flex } from 'styled-system/patterns';
import { prose } from 'styled-system/recipes';
import BaseLayout from './BaseLayout.astro';
import { ViewTransitions } from 'astro:transitions';

type Props = CollectionEntry<'blog'>['data'] & {
  next?: CollectionEntry<'blog'>;
  prev?: CollectionEntry<'blog'>;
};

const {
  title,
  description = '',
  date,
  lastmod,
  cover,
  excerpt,
  tags,
  categories,
  next,
  prev,
} = Astro.props;
---

<BaseLayout title={title} description={excerpt ?? description} image={cover}>
  <ViewTransitions slot="head" />
  <div
    class={css({
      '& > img': {
        display: 'block',
        mx: 'auto',
        borderRadius: 'lg',
        boxShadow: 'lg',
      },
    })}
  >
    {
      cover && (
        <CldImage
          width={770}
          height={415}
          src={cover}
          alt={title}
          transition:name={`blog-image-${slugify(title)}`}
          class={css({
            maxWidth: { base: '90vw', lg: '3xl' },
          })}
          sizes="(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, 770px"
          loading="lazy"
          dpr="2.0"
          crop="fill"
          gravity="center"
          quality="auto"
        />
      )
    }
  </div>
  <div
    class={css({
      padding: 3,
      color: 'primary',
    })}
  >
    <div
      class={css({
        py: 2,
        textAlign: 'center',
        lineHeight: 1,
      })}
    >
      <div
        class={css({
          marginBottom: 2,
          color: {
            _light: 'gray.500',
            _dark: 'gray.400',
          },
        })}
      >
        {!!date && <FormattedDate date={date} />}
        {
          lastmod && (
            <div
              class={css({
                color: {
                  _light: 'gray.500',
                  _dark: 'gray.400',
                },
                fontStyle: 'italic',
              })}
            >
              Last updated on <FormattedDate date={lastmod} />
            </div>
          )
        }
      </div>
      <h1
        class={css({
          color: 'primary',
          fontSize: { base: '2xl', lg: '4xl' },
        })}
      >
        {title}
      </h1>
      <hr class={css({ my: 4, borderColor: 'slate.700' })} />
    </div>
    <article class={prose({ size: 'xl' })}>
      <slot />
    </article>
  </div>
  <section class={flex({ direction: 'column', gap: 3 })}>
    <div class={cx(prose({ size: 'xl' }))}>
      <hr />
    </div>
    <div class={flex({ gap: 3, alignItems: 'center' })}>
      Category: <Badge link={`/blog/category/${slugify(categories)}`}>
        {categories}
      </Badge>
    </div>
    <div class={flex({ gap: 3, alignItems: 'center', flexWrap: 'wrap' })}>
      Tags: {tags.map((tag) => <Badge link={`/blog/tag/${slugify(tag)}`}>{tag}</Badge>)}
    </div>
    <div
      class={css({
        display: 'flex',
        justifyContent: 'space-between',
        padding: 3,
        gap: 8,
        color: 'accent',
      })}
    >
      {
        prev?.slug && (
          <a
            href={`/blog/${prev?.slug}`}
            class={flex({
              gap: 2,
              alignItems: 'center',
              transition: 'color 0.2s ease',
              '&:hover': {
                color: { _dark: 'brand.300', _light: 'brand.400' },
              },
            })}
          >
            <span>{`< `}</span> {prev?.data?.title}
          </a>
        )
      }
      {
        next?.slug && (
          <a
            href={`/blog/${next?.slug}`}
            class={flex({
              gap: 2,
              textAlign: 'right',
              alignItems: 'center',
              transition: 'color 0.2s ease',
              '&:hover': {
                color: { _dark: 'brand.300', _light: 'brand.400' },
              },
            })}
          >
            {next?.data?.title} <span>{` >`}</span>
          </a>
        )
      }
    </div>
  </section>
</BaseLayout>
