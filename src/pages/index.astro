---
import BaseHead from '../components/BaseHead.astro';
import { SITE_TITLE } from '../consts';
import BaseBody from '../components/BaseBody.astro';
import { prose } from 'styled-system/recipes';
import { css } from 'styled-system/css';
import { FUN_STUFF } from '../lib/constants';
import { getCollection } from 'astro:content';
import PostCard from '../components/PostCard.astro';
import { flex } from 'styled-system/patterns';
import ProjectGrid from '@components/ProjectGrid.astro';

const featuredPost = (await getCollection('blog')).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
)[0];
---

<!doctype html>
<html lang="en" data-color-mode="dark">
  <head>
    <BaseHead />
  </head>
  <BaseBody title={SITE_TITLE}>
    <section class={prose({ size: 'xl' })}>
      <h1
        class={css({
          display: 'flex',
          justifyContent: 'center',
          fontSize: { base: '3xl', md: '4xl' },
        })}
      >
        üëãüèª Howdy! I'm Joel.
      </h1>
      <p
        class={css({
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          gap: 2,
          height: '1em',
          lineHeight: '1',
          p: 0,
          m: 0,
          width: 'full',
          fontSize: '3xl',
        })}
      >
        I like to
        <span
          id="fun-stuff"
          class={css({
            display: 'inline-block',
            overflow: 'hidden',
            height: '1em',
            position: 'relative',
            minWidth: '75px',
            fontSize: '3xl',
          })}
        >
          <span
            class={css({
              position: 'absolute',
              display: 'block',
              bottom: 0,
              transform: 'translateY(0)',
              transition: 'transform 0.5s ease-in-out',
              willChange: 'transform, opacity',
              color: 'brand.200',
            })}
          >
            {
              FUN_STUFF.map((text) => {
                return (
                  <span
                    class={css({
                      display: 'block',
                      m: 0,
                      p: 0,
                      lineHeight: '1',
                    })}
                  >
                    {text}
                  </span>
                );
              })
            }
          </span>
        </span>
      </p>
      <p>
        Hi there! I'm a frontend engineer with a background in graphic design and web development.
        By day, I'm a Senior Product Engineer at <a href="https://sprinklr.com">Sprinklr</a>, but in
        my free time I love to let my artistic side shine by practicing hand lettering and
        sketching. When I'm not busy creating, you can find me exploring the great outdoors in
        Portland with my awesome family (including our furry canine companions)!
      </p>
    </section>
    <section
      class={flex({
        direction: 'column',
        w: 'full',
        gap: 6,
        p: { base: 4, md: 0 },
      })}
    >
      <div>
        <h2>Featured Post</h2>
        <PostCard post={featuredPost} featured />
      </div>

      <div>
        <h2>What I'm Jamming On</h2>
        <ProjectGrid />
      </div>
    </section>
  </BaseBody>

  <script>
    import { FUN_STUFF } from '../lib/constants';

    const funStuff = document.getElementById('fun-stuff');
    if (funStuff) {
      const slidePanel = funStuff.children[0] as HTMLSpanElement;
      const height = slidePanel?.children[0]?.getBoundingClientRect().height;
      const funStuffTextArrayLength = FUN_STUFF.length;
      let funStuffTextArrayIndex = 0;

      setInterval(() => {
        funStuff.classList.remove('animate_enter');
        funStuff.classList.add('animate_exit');
        if (funStuffTextArrayIndex === funStuffTextArrayLength) {
          funStuffTextArrayIndex = 0;
        }

        slidePanel.style.transform = `translateY(${height * funStuffTextArrayIndex}px)`;
        funStuffTextArrayIndex++;
      }, 2500);
    }
  </script>
</html>
